{"version":3,"sources":["../../src/app.ts","../../src/app.scss","../../src/app.html","../../src/contracts/authentication/IAuthenticationRepository.ts","../../src/contracts/authentication/IAuthenticationService.ts","../../src/contracts/authentication/IIdentity.ts","../../src/contracts/authentication/ILoginResult.ts","../../src/contracts/authentication/ILogoutResult.ts","../../src/contracts/authentication/IOidcConfig.ts","../../src/contracts/authentication/ITokenObject.ts","../../src/contracts/authentication/IUserIdentity.ts","../../src/contracts/authentication/constants.ts","../../src/contracts/authentication/index.ts","../../src/contracts/bpmnmodeler/IBpmnFunction.ts","../../src/contracts/bpmnmodeler/IBpmnModdle.ts","../../src/contracts/bpmnmodeler/IBpmnModeler.ts","../../src/contracts/bpmnmodeler/IBpmnModelerConstructor.ts","../../src/contracts/bpmnmodeler/IBpmnXmlSaveOptions.ts","../../src/contracts/bpmnmodeler/ICanvas.ts","../../src/contracts/bpmnmodeler/IDefaultOverlayPositions.ts","../../src/contracts/bpmnmodeler/IDefinition.ts","../../src/contracts/bpmnmodeler/IDependencyHook.ts","../../src/contracts/bpmnmodeler/IDescriptor.ts","../../src/contracts/bpmnmodeler/IEditorActions.ts","../../src/contracts/bpmnmodeler/IElementRegistry.ts","../../src/contracts/bpmnmodeler/IEvent.ts","../../src/contracts/bpmnmodeler/IEventFunction.ts","../../src/contracts/bpmnmodeler/IIds.ts","../../src/contracts/bpmnmodeler/IInnerViewbox.ts","../../src/contracts/bpmnmodeler/IInternalEvent.ts","../../src/contracts/bpmnmodeler/IKeyboard.ts","../../src/contracts/bpmnmodeler/ILinting.ts","../../src/contracts/bpmnmodeler/IModeling.ts","../../src/contracts/bpmnmodeler/IOuterViewbox.ts","../../src/contracts/bpmnmodeler/IOverlay.ts","../../src/contracts/bpmnmodeler/IOverlayDescriptor.ts","../../src/contracts/bpmnmodeler/IOverlayManager.ts","../../src/contracts/bpmnmodeler/IOverlayPosition.ts","../../src/contracts/bpmnmodeler/IOverlays.ts","../../src/contracts/bpmnmodeler/ISeed.ts","../../src/contracts/bpmnmodeler/IValidateIssue.ts","../../src/contracts/bpmnmodeler/IValidateIssueCategory.ts","../../src/contracts/bpmnmodeler/IValidateResult.ts","../../src/contracts/bpmnmodeler/IViewbox.ts","../../src/contracts/bpmnmodeler/constants.ts","../../src/contracts/bpmnmodeler/index.ts","../../src/contracts/colorpicker/IColorPickerColor.ts","../../src/contracts/colorpicker/IColorPickerSettings.ts","../../src/contracts/colorpicker/IDefaultBpmnColors.ts","../../src/contracts/colorpicker/constants.ts","../../src/contracts/colorpicker/index.ts","../../src/contracts/constants.ts","../../src/contracts/diagram-creation-service/IDiagramCreationService.ts","../../src/contracts/diagram-creation-service/index.ts","../../src/contracts/diagram-validation-service/IDiagramValidationRule.ts","../../src/contracts/diagram-validation-service/IDiagramValidationRuleSet.ts","../../src/contracts/diagram-validation-service/IDiagramValidationRules.ts","../../src/contracts/diagram-validation-service/IDiagramValidationService.ts","../../src/contracts/diagram-validation-service/IDiagramValidator.ts","../../src/contracts/diagram-validation-service/index.ts","../../src/contracts/diagram/DiagramStateChange.ts","../../src/contracts/diagram/IDiagramState.ts","../../src/contracts/diagram/IDiagramStateList.ts","../../src/contracts/diagram/IDiagramStateListEntry.ts","../../src/contracts/diagram/index.ts","../../src/contracts/diffview/IChangeListEntry.ts","../../src/contracts/diffview/IChangedElement.ts","../../src/contracts/diffview/IChangedElementList.ts","../../src/contracts/diffview/IDiffChangeListData.ts","../../src/contracts/diffview/IDiffChanges.ts","../../src/contracts/diffview/IDiffElementList.ts","../../src/contracts/diffview/constants.ts","../../src/contracts/diffview/index.ts","../../src/contracts/dynamic-ui/IDynamicUiService.ts","../../src/contracts/dynamic-ui/index.ts","../../src/contracts/eventbus/IEventBus.ts","../../src/contracts/eventbus/index.ts","../../src/contracts/exportRepository/IDiagramExportRepositoryContracts.ts","../../src/contracts/exportRepository/index.ts","../../src/contracts/exportService/IDiagramExportService.ts","../../src/contracts/exportService/IExportService.ts","../../src/contracts/exportService/ISvgConvertService.ts","../../src/contracts/exportService/IXmlConvertService.ts","../../src/contracts/exportService/index.ts","../../src/contracts/file-input-event/IFile.ts","../../src/contracts/file-input-event/IInputEvent.ts","../../src/contracts/file-input-event/IInputTarget.ts","../../src/contracts/file-input-event/index.ts","../../src/contracts/form-fields/IBooleanFormField.ts","../../src/contracts/form-fields/IEnumFormField.ts","../../src/contracts/form-fields/IStringFormField.ts","../../src/contracts/form-fields/index.ts","../../src/contracts/index.ts","../../src/contracts/inspect-correlation/index.ts","../../src/contracts/inspect-correlation/inspect-panel/constants.ts","../../src/contracts/inspect-correlation/inspect-panel/correlation-list/ICorrelationSortSettings.ts","../../src/contracts/inspect-correlation/inspect-panel/correlation-list/ICorrelationTableEntry.ts","../../src/contracts/inspect-correlation/inspect-panel/correlation-list/constants.ts","../../src/contracts/inspect-correlation/inspect-panel/correlation-list/index.ts","../../src/contracts/inspect-correlation/inspect-panel/index.ts","../../src/contracts/inspect-correlation/inspect-panel/log-viewer/ILogSortSettings.ts","../../src/contracts/inspect-correlation/inspect-panel/log-viewer/constants.ts","../../src/contracts/inspect-correlation/inspect-panel/log-viewer/index.ts","../../src/contracts/navigation/AureliaNavigationResult.ts","../../src/contracts/navigation/index.ts","../../src/contracts/notification/INotification.ts","../../src/contracts/notification/constants.ts","../../src/contracts/notification/index.ts","../../src/contracts/print/IDiagramPrintService.ts","../../src/contracts/print/index.ts","../../src/contracts/propertypanel/IIndextab.ts","../../src/contracts/propertypanel/IPageModel.ts","../../src/contracts/propertypanel/ISection.ts","../../src/contracts/propertypanel/index.ts","../../src/contracts/solution-explorer/ISolutionEntry.ts","../../src/contracts/solution-explorer/ISolutionService.ts","../../src/contracts/solution-explorer/index.ts","../../src/contracts/user-input-validation/IUserInputValidationRule.ts","../../src/contracts/user-input-validation/IUserInputValidationRuleset.ts","../../src/contracts/user-input-validation/index.ts","../../src/environment.ts","../../src/main.ts","../../src/modules/config-panel/config-panel.ts","../../src/modules/config-panel/config-panel.scss","../../src/modules/config-panel/config-panel.html","../../src/modules/confirm-widget/confirm-widget.ts","../../src/modules/confirm-widget/confirm-widget.scss","../../src/modules/confirm-widget/confirm-widget.html","../../src/modules/custom_elements/modal/modal.scss","../../src/modules/custom_elements/modal/modal.html","../../src/modules/deploy-modals/deploy-modals.ts","../../src/modules/deploy-modals/deploy-modals.scss","../../src/modules/deploy-modals/deploy-modals.html","../../src/modules/design/bpmn-diff-view/bpmn-diff-view.ts","../../src/modules/design/bpmn-diff-view/bpmn-diff-view.scss","../../src/modules/design/bpmn-diff-view/bpmn-diff-view.html","../../src/modules/design/bpmn-io/bpmn-io.ts","../../src/modules/design/bpmn-io/bpmn-io.scss","../../src/modules/design/bpmn-io/bpmn-io.html","../../src/modules/design/bpmn-io/repositories/DiagramExportRepository.ts","../../src/modules/design/bpmn-io/services/diagram.export.service.ts","../../src/modules/design/bpmn-io/services/diagram.print.service.ts","../../src/modules/design/bpmn-io/services/diagram.svg.converter.ts","../../src/modules/design/bpmn-io/services/diagram.xml.converter.ts","../../src/modules/design/bpmn-io/services/export.service.ts","../../src/modules/design/bpmn-io/services/index.ts","../../src/modules/design/bpmn-xml-view/bpmn-xml-view.ts","../../src/modules/design/bpmn-xml-view/bpmn-xml-view.scss","../../src/modules/design/bpmn-xml-view/bpmn-xml-view.html","../../src/modules/design/design.ts","../../src/modules/design/design.scss","../../src/modules/design/design.html","../../src/modules/design/diagram-detail/diagram-detail.ts","../../src/modules/design/diagram-detail/diagram-detail.scss","../../src/modules/design/diagram-detail/diagram-detail.html","../../src/modules/design/diagram-tools-right/diagram-tools-right.ts","../../src/modules/design/diagram-tools-right/diagram-tools-right.scss","../../src/modules/design/diagram-tools-right/diagram-tools-right.html","../../src/modules/design/property-panel/indextabs/extensions/extensions.ts","../../src/modules/design/property-panel/indextabs/extensions/extensions.scss","../../src/modules/design/property-panel/indextabs/extensions/extensions.html","../../src/modules/design/property-panel/indextabs/extensions/sections/basics/basics.ts","../../src/modules/design/property-panel/indextabs/extensions/sections/basics/basics.scss","../../src/modules/design/property-panel/indextabs/extensions/sections/basics/basics.html","../../src/modules/design/property-panel/indextabs/extensions/sections/process/process.ts","../../src/modules/design/property-panel/indextabs/extensions/sections/process/process.scss","../../src/modules/design/property-panel/indextabs/extensions/sections/process/process.html","../../src/modules/design/property-panel/indextabs/forms/forms.ts","../../src/modules/design/property-panel/indextabs/forms/forms.scss","../../src/modules/design/property-panel/indextabs/forms/forms.html","../../src/modules/design/property-panel/indextabs/forms/sections/basics/basics.ts","../../src/modules/design/property-panel/indextabs/forms/sections/basics/basics.scss","../../src/modules/design/property-panel/indextabs/forms/sections/basics/basics.html","../../src/modules/design/property-panel/indextabs/general/general.ts","../../src/modules/design/property-panel/indextabs/general/general.scss","../../src/modules/design/property-panel/indextabs/general/general.html","../../src/modules/design/property-panel/indextabs/general/repository/general.repository.ts","../../src/modules/design/property-panel/indextabs/general/sections/basics/basics.ts","../../src/modules/design/property-panel/indextabs/general/sections/basics/basics.scss","../../src/modules/design/property-panel/indextabs/general/sections/basics/basics.html","../../src/modules/design/property-panel/indextabs/general/sections/call-activity/call-activity.ts","../../src/modules/design/property-panel/indextabs/general/sections/call-activity/call-activity.scss","../../src/modules/design/property-panel/indextabs/general/sections/call-activity/call-activity.html","../../src/modules/design/property-panel/indextabs/general/sections/conditional-event/conditional-event.ts","../../src/modules/design/property-panel/indextabs/general/sections/conditional-event/conditional-event.scss","../../src/modules/design/property-panel/indextabs/general/sections/conditional-event/conditional-event.html","../../src/modules/design/property-panel/indextabs/general/sections/error-event/error-event.ts","../../src/modules/design/property-panel/indextabs/general/sections/error-event/error-event.scss","../../src/modules/design/property-panel/indextabs/general/sections/error-event/error-event.html","../../src/modules/design/property-panel/indextabs/general/sections/escalation-event/escalation-event.ts","../../src/modules/design/property-panel/indextabs/general/sections/escalation-event/escalation-event.scss","../../src/modules/design/property-panel/indextabs/general/sections/escalation-event/escalation-event.html","../../src/modules/design/property-panel/indextabs/general/sections/flow/flow.ts","../../src/modules/design/property-panel/indextabs/general/sections/flow/flow.scss","../../src/modules/design/property-panel/indextabs/general/sections/flow/flow.html","../../src/modules/design/property-panel/indextabs/general/sections/link-event/link-event.ts","../../src/modules/design/property-panel/indextabs/general/sections/link-event/link-event.scss","../../src/modules/design/property-panel/indextabs/general/sections/link-event/link-event.html","../../src/modules/design/property-panel/indextabs/general/sections/message-event/message-event.ts","../../src/modules/design/property-panel/indextabs/general/sections/message-event/message-event.scss","../../src/modules/design/property-panel/indextabs/general/sections/message-event/message-event.html","../../src/modules/design/property-panel/indextabs/general/sections/message-task/message-task.ts","../../src/modules/design/property-panel/indextabs/general/sections/message-task/message-task.scss","../../src/modules/design/property-panel/indextabs/general/sections/message-task/message-task.html","../../src/modules/design/property-panel/indextabs/general/sections/pool/pool.ts","../../src/modules/design/property-panel/indextabs/general/sections/pool/pool.scss","../../src/modules/design/property-panel/indextabs/general/sections/pool/pool.html","../../src/modules/design/property-panel/indextabs/general/sections/process/process.ts","../../src/modules/design/property-panel/indextabs/general/sections/process/process.scss","../../src/modules/design/property-panel/indextabs/general/sections/process/process.html","../../src/modules/design/property-panel/indextabs/general/sections/script-task/script-task.ts","../../src/modules/design/property-panel/indextabs/general/sections/script-task/script-task.scss","../../src/modules/design/property-panel/indextabs/general/sections/script-task/script-task.html","../../src/modules/design/property-panel/indextabs/general/sections/service-task/components/external-task/external-task.ts","../../src/modules/design/property-panel/indextabs/general/sections/service-task/components/external-task/external-task.scss","../../src/modules/design/property-panel/indextabs/general/sections/service-task/components/external-task/external-task.html","../../src/modules/design/property-panel/indextabs/general/sections/service-task/components/http-service-task/http-service-task.ts","../../src/modules/design/property-panel/indextabs/general/sections/service-task/components/http-service-task/http-service-task.scss","../../src/modules/design/property-panel/indextabs/general/sections/service-task/components/http-service-task/http-service-task.html","../../src/modules/design/property-panel/indextabs/general/sections/service-task/components/service-task-service/service-task-service.ts","../../src/modules/design/property-panel/indextabs/general/sections/service-task/service-task.ts","../../src/modules/design/property-panel/indextabs/general/sections/service-task/service-task.scss","../../src/modules/design/property-panel/indextabs/general/sections/service-task/service-task.html","../../src/modules/design/property-panel/indextabs/general/sections/signal-event/signal-event.ts","../../src/modules/design/property-panel/indextabs/general/sections/signal-event/signal-event.scss","../../src/modules/design/property-panel/indextabs/general/sections/signal-event/signal-event.html","../../src/modules/design/property-panel/indextabs/general/sections/timer-event/timer-event.ts","../../src/modules/design/property-panel/indextabs/general/sections/timer-event/timer-event.scss","../../src/modules/design/property-panel/indextabs/general/sections/timer-event/timer-event.html","../../src/modules/design/property-panel/indextabs/general/service/general.service.ts","../../src/modules/design/property-panel/property-panel.ts","../../src/modules/design/property-panel/property-panel.scss","../../src/modules/design/property-panel/property-panel.html","../../src/modules/design/property-panel/styles/registers.scss","../../src/modules/design/property-panel/styles/sections.scss","../../src/modules/dynamic-ui-checkbox-element/dynamic-ui-checkbox-element.ts","../../src/modules/dynamic-ui-checkbox-element/dynamic-ui-checkbox-element.scss","../../src/modules/dynamic-ui-checkbox-element/dynamic-ui-checkbox-element.html","../../src/modules/dynamic-ui-dropdown-element/dynamic-ui-dropdown-element.ts","../../src/modules/dynamic-ui-dropdown-element/dynamic-ui-dropdown-element.scss","../../src/modules/dynamic-ui-dropdown-element/dynamic-ui-dropdown-element.html","../../src/modules/dynamic-ui-number-element/dynamic-ui-number-element.ts","../../src/modules/dynamic-ui-number-element/dynamic-ui-number-element.scss","../../src/modules/dynamic-ui-number-element/dynamic-ui-number-element.html","../../src/modules/dynamic-ui-radiobutton-element/dynamic-ui-radiobutton-element.ts","../../src/modules/dynamic-ui-radiobutton-element/dynamic-ui-radiobutton-element.scss","../../src/modules/dynamic-ui-radiobutton-element/dynamic-ui-radiobutton-element.html","../../src/modules/dynamic-ui-textbox-element/dynamic-ui-textbox-element.ts","../../src/modules/dynamic-ui-textbox-element/dynamic-ui-textbox-element.scss","../../src/modules/dynamic-ui-textbox-element/dynamic-ui-textbox-element.html","../../src/modules/dynamic-ui-wrapper/dynamic-ui-wrapper.ts","../../src/modules/dynamic-ui-wrapper/dynamic-ui-wrapper.scss","../../src/modules/dynamic-ui-wrapper/dynamic-ui-wrapper.html","../../src/modules/fetch-http-client/HttpFetchClient.ts","../../src/modules/fetch-http-client/index.ts","../../src/modules/form-widget/form-widget.ts","../../src/modules/form-widget/form-widget.scss","../../src/modules/form-widget/form-widget.html","../../src/modules/inspect/cronjob-list/cronjob-list.ts","../../src/modules/inspect/cronjob-list/cronjob-list.scss","../../src/modules/inspect/cronjob-list/cronjob-list.html","../../src/modules/inspect/dashboard/dashboard.ts","../../src/modules/inspect/dashboard/dashboard.scss","../../src/modules/inspect/dashboard/dashboard.html","../../src/modules/inspect/heatmap/contracts/IFlowNodeAssociation.ts","../../src/modules/inspect/heatmap/contracts/IHeatmap.Repository.ts","../../src/modules/inspect/heatmap/contracts/IHeatmap.Service.ts","../../src/modules/inspect/heatmap/contracts/ITokenPositionAndCount.ts","../../src/modules/inspect/heatmap/contracts/constants.ts","../../src/modules/inspect/heatmap/contracts/index.ts","../../src/modules/inspect/heatmap/heatmap.ts","../../src/modules/inspect/heatmap/heatmap.scss","../../src/modules/inspect/heatmap/heatmap.html","../../src/modules/inspect/heatmap/index.ts","../../src/modules/inspect/heatmap/repositories/heatmap.mock.repository.ts","../../src/modules/inspect/heatmap/repositories/heatmap.repository.ts","../../src/modules/inspect/heatmap/services/heatmap.service.ts","../../src/modules/inspect/inspect.ts","../../src/modules/inspect/inspect-correlation/components/diagram-viewer/diagram-viewer.ts","../../src/modules/inspect/inspect-correlation/components/diagram-viewer/diagram-viewer.scss","../../src/modules/inspect/inspect-correlation/components/diagram-viewer/diagram-viewer.html","../../src/modules/inspect/inspect-correlation/components/inspect-panel/components/correlation-list/correlation-list.ts","../../src/modules/inspect/inspect-correlation/components/inspect-panel/components/correlation-list/correlation-list.scss","../../src/modules/inspect/inspect-correlation/components/inspect-panel/components/correlation-list/correlation-list.html","../../src/modules/inspect/inspect-correlation/components/inspect-panel/components/log-viewer/log-viewer.ts","../../src/modules/inspect/inspect-correlation/components/inspect-panel/components/log-viewer/log-viewer.scss","../../src/modules/inspect/inspect-correlation/components/inspect-panel/components/log-viewer/log-viewer.html","../../src/modules/inspect/inspect-correlation/components/inspect-panel/inspect-panel.ts","../../src/modules/inspect/inspect-correlation/components/inspect-panel/inspect-panel.scss","../../src/modules/inspect/inspect-correlation/components/inspect-panel/inspect-panel.html","../../src/modules/inspect/inspect-correlation/contracts/IInspect-correlation.repository.ts","../../src/modules/inspect/inspect-correlation/contracts/IInspect-correlation.service.ts","../../src/modules/inspect/inspect-correlation/contracts/IProcessInstanceWithCorrelation.ts","../../src/modules/inspect/inspect-correlation/contracts/index.ts","../../src/modules/inspect/inspect-correlation/index.ts","../../src/modules/inspect/inspect-correlation/inspect-correlation.ts","../../src/modules/inspect/inspect-correlation/inspect-correlation.scss","../../src/modules/inspect/inspect-correlation/inspect-correlation.html","../../src/modules/inspect/inspect-correlation/repositories/inspect-correlation.repository.ts","../../src/modules/inspect/inspect-correlation/services/inspect-correlation.service.ts","../../src/modules/inspect/inspect.scss","../../src/modules/inspect/inspect.html","../../src/modules/inspect/process-list/process-list.ts","../../src/modules/inspect/process-list/process-list.scss","../../src/modules/inspect/process-list/process-list.html","../../src/modules/inspect/task-list/task-list.ts","../../src/modules/inspect/task-list/task-list.scss","../../src/modules/inspect/task-list/task-list.html","../../src/modules/inspect/token-viewer/contracts/IPayloadEntry.ts","../../src/modules/inspect/token-viewer/contracts/IPayloadEntryValue.ts","../../src/modules/inspect/token-viewer/contracts/IRawTokenEntry.ts","../../src/modules/inspect/token-viewer/contracts/ITokenEntry.ts","../../src/modules/inspect/token-viewer/contracts/ITokenViewerRepository.ts","../../src/modules/inspect/token-viewer/contracts/ITokenViewerService.ts","../../src/modules/inspect/token-viewer/contracts/index.ts","../../src/modules/inspect/token-viewer/index.ts","../../src/modules/inspect/token-viewer/repository/token-viewer.repository.ts","../../src/modules/inspect/token-viewer/service/token-viewer.service.ts","../../src/modules/inspect/token-viewer/token-viewer.ts","../../src/modules/inspect/token-viewer/token-viewer.scss","../../src/modules/inspect/token-viewer/token-viewer.html","../../src/modules/live-execution-tracker/contracts/ILiveExecutionTracker.Repository.ts","../../src/modules/live-execution-tracker/contracts/ILiveExecutionTracker.Service.ts","../../src/modules/live-execution-tracker/contracts/constants.ts","../../src/modules/live-execution-tracker/contracts/index.ts","../../src/modules/live-execution-tracker/index.ts","../../src/modules/live-execution-tracker/live-execution-tracker.ts","../../src/modules/live-execution-tracker/live-execution-tracker.scss","../../src/modules/live-execution-tracker/live-execution-tracker.html","../../src/modules/live-execution-tracker/repositories/live-execution-tracker.repository.ts","../../src/modules/live-execution-tracker/services/live-execution-tracker.service.ts","../../src/modules/management-api_client/HttpClientProxy.ts","../../src/modules/management-api_client/index.ts","../../src/modules/navbar/navbar.ts","../../src/modules/navbar/navbar.scss","../../src/modules/navbar/navbar.html","../../src/modules/solution-explorer/solution-explorer-list/solution-explorer-list.ts","../../src/modules/solution-explorer/solution-explorer-list/solution-explorer-list.scss","../../src/modules/solution-explorer/solution-explorer-list/solution-explorer-list.html","../../src/modules/solution-explorer/solution-explorer-panel/solution-explorer-panel.ts","../../src/modules/solution-explorer/solution-explorer-panel/solution-explorer-panel.scss","../../src/modules/solution-explorer/solution-explorer-panel/solution-explorer-panel.html","../../src/modules/solution-explorer/solution-explorer-solution/delete-diagram-modal/delete-diagram-modal.ts","../../src/modules/solution-explorer/solution-explorer-solution/delete-diagram-modal/delete-diagram-modal.scss","../../src/modules/solution-explorer/solution-explorer-solution/delete-diagram-modal/delete-diagram-modal.html","../../src/modules/solution-explorer/solution-explorer-solution/solution-explorer-solution.ts","../../src/modules/solution-explorer/solution-explorer-solution/solution-explorer-solution.scss","../../src/modules/solution-explorer/solution-explorer-solution/solution-explorer-solution.html","../../src/modules/start-page/start-page.ts","../../src/modules/start-page/start-page.scss","../../src/modules/start-page/start-page.html","../../src/modules/status-bar/status-bar.ts","../../src/modules/status-bar/status-bar.scss","../../src/modules/status-bar/status-bar.html","../../src/modules/task-dynamic-ui/task-dynamic-ui.ts","../../src/modules/task-dynamic-ui/task-dynamic-ui.scss","../../src/modules/task-dynamic-ui/task-dynamic-ui.html","../../src/modules/task-list-container/task-list-container.ts","../../src/modules/task-list-container/task-list-container.scss","../../src/modules/task-list-container/task-list-container.html","../../src/modules/think/diagram-list/diagram-list.ts","../../src/modules/think/diagram-list/diagram-list.scss","../../src/modules/think/diagram-list/diagram-list.html","../../src/modules/think/think.ts","../../src/modules/think/think.scss","../../src/modules/think/think.html","../../src/modules/user-preferences/user-preferences.ts","../../src/modules/user-preferences/user-preferences.scss","../../src/modules/user-preferences/user-preferences.html","../../src/open-id-connect-configuration.ts","../../src/services/authentication-service/electron.oidc.authentication.service.ts","../../src/services/authentication-service/index.ts","../../src/services/authentication-service/open-id/open-id-signin-response.ts","../../src/services/authentication-service/open-id/open-id-url-utility.ts","../../src/services/authentication-service/web.oidc.authentication.service.ts","../../src/services/date-service/date.service.ts","../../src/services/default-ports-module/default-ports-module.ts","../../src/services/deploy-diagram-service/deploy-diagram.service.ts","../../src/services/deploy-diagram-service/index.ts","../../src/services/diagram-creation-service/DiagramCreationService.ts","../../src/services/diagram-creation-service/index.ts","../../src/services/diagram-validation-service/DiagramValidationService.ts","../../src/services/diagram-validation-service/DiagramValidator.ts","../../src/services/diagram-validation-service/index.ts","../../src/services/dynamic-ui-service/dynamic-ui.service.ts","../../src/services/dynamic-ui-service/index.ts","../../src/services/elementname-service/elementname.service.ts","../../src/services/expose-functionality-module/expose-functionality-module.ts","../../src/services/notification-service/index.ts","../../src/services/notification-service/notification.service.ts","../../src/services/release-channel-service/release-channel-service.ts","../../src/services/save-diagram-service/index.ts","../../src/services/save-diagram-service/save-diagram.service.ts","../../src/services/solution-explorer-services/DiagramTrashFolderService.ts","../../src/services/solution-explorer-services/OpenDiagramStateService.ts","../../src/services/solution-explorer-services/OpenDiagramsSolutionExplorerService.ts","../../src/services/solution-explorer-services/SolutionExplorerServiceFactory.ts","../../src/services/solution-explorer-services/index.ts","../../src/services/solution-service/SolutionService.ts","../../src/services/solution-service/index.ts","../../src/services/user-config-service/index.ts","../../src/services/user-config-service/userconfig.service.ts"],"names":[],"mappings":"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EAAE,CAAC,WG5EW,CAAC;EH6EnB,AG5EA,QH4EQ,EAAE,AG5EA,EAAE,MH4EM,AG5EA;EH6ElB,AG5EA,IH4EI,EAAE,KAAK,MG5EM,EAAE,IAAI;EH6EvB,AG5EA,UH4EU,CG5EC,CH4EC,CG5EC,EH4EE,EG5EE,GAClB;EH4EC,YAAY,EAAE,IAAI;AG1EpB,EH2EE,SAAS,EAAE,GAAG,EG3EE,CAAC;EH4EjB,AG3EA,OH2EO,CG3EC,CH2EC,CG3EC,EH2EE,GACb,GG5EmB;EAClB,GAAG,EAAE,KAAK;AH6EZ,EG5EE,MAAM,EAAE,CAAC,GACV,gBH2E6B,CAAC;EAC7B,IAAI,EAAE,CAAC;AG1ET,EH2EE,QAAQ,EAAE,KG3EK,CH2EC,AG3EA;EH4EhB,AG3EA,OAAO,EAAE,GAAG,CH2EC,EAAE,QAAQ;EACvB,AG3EA,WH2EW,EAAE,IG3EI,EH2EE,AG3EA,GH4EpB,CG5EwB,GACxB;;AH6ED,AG3EA,wBH2EwB,AG3EA,CH2EC,AG3EA;EH4EvB,AG3EA,OAAO,EH2EE,AG3EA,EH2EE,EG3EE,EH2EE;EACf,AG3EA,KH2EK,EAAE,OG3EO,CH2EC,CG3EC,EH4EjB,IG5EuB;EACtB,OAAO,EAAE,OAAO,GACjB;AH4ED,cAAc,MAAM,CAAC,oBAAoB,CAAC;AG1E1C,EH2EE,eAAe,EAAE,KG3EK,IH2EI,EG3EE,CH4E7B,AG5E8B;EAC7B,MAAM,EAAE,OAAO,GAChB;AH4ED,uBAAuB,CAAC;AG1ExB,EH2EE,OAAO,EAAE,IAAI,GACd,AG5EiB,CAAC;EACjB,OAAO,EAAE,IAAI;AH6Ef,EG5EE,YH4EY,EG5EE,EAAE,EH4EE,CAAC,AG5EA,uBH4EuB,CAAC;EAC3C,AG5EA,OH4EO,EAAE,EG5EE,EH4EE,AG5EA,GH6Ed,GG7EoB;EACnB,eAAe,EAAE,aAAa,GAC/B;AH6ED,MAAM,EAAE,SAAS,EAAE,IAAI;AG3EvB,EH4EE,iBG5EiB,CAAC,KH4EK,CAAC;EG3ExB,EH4EE,GG5EG,EAAE,EH4EE,CG5EC,CH4EC,IAAI,GACd;EG5ED,YAAY,EAAE,IAAI;AH+EpB,EG9EE,SAAS,EAAE,IAAI,MH8EM,CAA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","file":"app-bundle.js","sourcesContent":["import {EventAggregator, Subscription} from 'aurelia-event-aggregator';\nimport {inject} from 'aurelia-framework';\nimport {Router, RouterConfiguration} from 'aurelia-router';\n/**\n * This import statement loads bootstrap. Its required because otherwise\n * its not executed.\n */\nimport 'bootstrap';\n\nimport {OpenIdConnect} from 'aurelia-open-id-connect';\n\nimport {NotificationType} from './contracts/index';\nimport environment from './environment';\nimport {NotificationService} from './services/notification-service/notification.service';\n\nimport {oidcConfig} from './open-id-connect-configuration';\n@inject(OpenIdConnect, 'NotificationService', EventAggregator)\nexport class App {\n  public showSolutionExplorer: boolean = false;\n\n  private openIdConnect: OpenIdConnect | any;\n  private notificationService: NotificationService;\n  private eventAggregator: EventAggregator;\n  private subscriptions: Array<Subscription>;\n\n  private preventDefaultBehaviour: EventListener;\n  private ipcRenderer: any | null = null;\n  private router: Router;\n\n  constructor(\n    openIdConnect: OpenIdConnect,\n    notificationService: NotificationService,\n    eventAggregator: EventAggregator,\n  ) {\n    this.openIdConnect = openIdConnect;\n    this.notificationService = notificationService;\n    this.eventAggregator = eventAggregator;\n\n    if (this.isRunningInElectron) {\n      this.ipcRenderer = (window as any).nodeRequire('electron').ipcRenderer;\n    }\n  }\n\n  public activate(): void {\n    this.migrateOpenDiagramStatesInLocalStorage();\n\n    this.preventDefaultBehaviour = (event: Event): boolean => {\n      event.preventDefault();\n\n      if (!this.isRunningInElectron) {\n        this.notificationService.showNotification(\n          NotificationType.INFO,\n          'Drag-and-Drop is currently only available for the Electron application.',\n        );\n      }\n\n      return false;\n    };\n\n    this.showSolutionExplorer =\n      window.localStorage.getItem('SolutionExplorerVisibility') === 'true' ||\n      window.localStorage.getItem('SolutionExplorerVisibility') === null;\n\n    const showSolutionExplorer: string = this.showSolutionExplorer ? 'true' : 'false';\n    window.localStorage.setItem('SolutionExplorerVisibility', showSolutionExplorer);\n\n    this.subscriptions = [\n      this.eventAggregator.subscribe(\n        environment.events.solutionExplorerPanel.toggleSolutionExplorer,\n        (show: boolean) => {\n          this.showSolutionExplorer = show;\n\n          if (this.showSolutionExplorer) {\n            window.localStorage.setItem('SolutionExplorerVisibility', 'true');\n          } else {\n            window.localStorage.setItem('SolutionExplorerVisibility', 'false');\n          }\n        },\n      ),\n    ];\n\n    /*\n     * These EventListeners are used to prevent the BPMN Studio from redirecting after\n     * trying to drop a file to the BPMN Studio.\n     */\n    document.addEventListener('dragover', this.preventDefaultBehaviour);\n    document.addEventListener('drop', this.preventDefaultBehaviour);\n\n    const openIdConnectRoute: string = window.localStorage.getItem('openIdRoute');\n\n    const openIdConnectRouteIsCustom: boolean =\n      openIdConnectRoute !== null && openIdConnectRoute !== undefined && openIdConnectRoute !== '';\n\n    if (openIdConnectRouteIsCustom) {\n      /*\n       * TODO: The environment variables should not carry state. This should be done via a configurationService.\n       * https://github.com/process-engine/bpmn-studio/issues/673\n       */\n      environment.openIdConnect.authority = openIdConnectRoute;\n\n      this.openIdConnect.configuration.userManagerSettings.authority = openIdConnectRoute;\n      // eslint-disable-next-line no-underscore-dangle\n      this.openIdConnect.userManager._settings._authority = openIdConnectRoute;\n\n      oidcConfig.userManagerSettings.authority = openIdConnectRoute;\n    }\n\n    if (this.isRunningInElectron) {\n      this.ipcRenderer.on('menubar__open_preferences', this.openPreferences);\n    }\n  }\n\n  public deactivate(): void {\n    document.removeEventListener('dragover', this.preventDefaultBehaviour);\n    document.removeEventListener('drop', this.preventDefaultBehaviour);\n\n    this.disposeAllSubscriptions();\n  }\n\n  private openPreferences = async (_: Event): Promise<void> => {\n    this.router.navigateToRoute('preferences');\n  };\n\n  private get isRunningInElectron(): boolean {\n    return Boolean((window as any).nodeRequire);\n  }\n\n  private disposeAllSubscriptions(): void {\n    this.subscriptions.forEach((subscription: Subscription) => {\n      subscription.dispose();\n    });\n  }\n\n  public configureRouter(config: RouterConfiguration, router: Router): void {\n    if (!this.isRunningInElectron) {\n      config.options.pushState = true;\n      config.options.baseRoute = '/';\n    }\n\n    config.title = 'BPMN Studio';\n\n    config.map([\n      {\n        route: [''],\n        title: 'Start Page',\n        name: 'start-page',\n        moduleId: 'modules/start-page/start-page',\n      },\n      {\n        route: ['dashboard'],\n        title: 'Dashboard',\n        name: 'dashboard',\n        moduleId: 'modules/inspect/dashboard/dashboard',\n        nav: false,\n      },\n      {\n        route: ['task', 'processdef/:diagramName/task'],\n        title: 'Task List',\n        name: 'task-list-processmodel',\n        moduleId: 'modules/task-list-container/task-list-container',\n        nav: false,\n      },\n      {\n        route: ['correlation/:correlationId/task'],\n        title: 'Task List',\n        name: 'task-list-correlation',\n        moduleId: 'modules/task-list-container/task-list-container',\n        nav: false,\n      },\n      {\n        route: ['instance/:processInstanceId/task'],\n        title: 'Task List',\n        name: 'task-list-processinstance',\n        moduleId: 'modules/task-list-container/task-list-container',\n        nav: false,\n      },\n      {\n        route: ['process'],\n        title: 'Process Instance List',\n        name: 'process-list',\n        moduleId: 'modules/inspect/process-list/process-list',\n        nav: false,\n      },\n      {\n        route: ['correlation/:correlationId/diagram/:diagramName/instance/:processInstanceId/task/:taskId/dynamic-ui'],\n        title: 'Task Dynamic UI',\n        name: 'task-dynamic-ui',\n        moduleId: 'modules/task-dynamic-ui/task-dynamic-ui',\n      },\n      {\n        route: ['diagram/detail/:diagramName?'],\n        title: 'Diagram Detail',\n        name: 'diagram-detail',\n        moduleId: 'modules/design/diagram-detail/diagram-detail',\n      },\n      {\n        route: ['/correlation/:correlationId/diagram/:diagramName/instance/:processInstanceId/live-execution-tracker'],\n        title: 'Live Execution Tracker',\n        name: 'live-execution-tracker',\n        moduleId: 'modules/live-execution-tracker/live-execution-tracker',\n      },\n      {\n        route: 'settings',\n        title: 'Settings',\n        name: 'settings',\n        moduleId: 'modules/config-panel/config-panel',\n      },\n      {\n        route: ['think/:view?/diagram/:diagramName?'],\n        title: 'Think',\n        name: 'think',\n        moduleId: 'modules/think/think',\n        nav: 0,\n        href: '',\n      },\n      {\n        route: ['design/:view?/diagram/:diagramName?'],\n        title: 'Design',\n        name: 'design',\n        moduleId: 'modules/design/design',\n        nav: 1,\n        href: '',\n      },\n      {\n        route: ['inspect/:view?/diagram/:diagramName?'],\n        title: 'Inspect',\n        name: 'inspect',\n        moduleId: 'modules/inspect/inspect',\n        nav: 2,\n        href: '',\n      },\n      {\n        route: 'preferences',\n        title: 'Preferences',\n        name: 'preferences',\n        moduleId: 'modules/user-preferences/user-preferences',\n      },\n    ]);\n\n    this.openIdConnect.configure(config);\n    this.router = router;\n  }\n\n  private migrateOpenDiagramStatesInLocalStorage(): void {\n    Object.keys(localStorage)\n      .filter((localStorageKey: string) => {\n        return localStorageKey.startsWith('Open Diagram:');\n      })\n      .forEach((localStorageKey) => {\n        const diagramState = JSON.parse(localStorage.getItem(localStorageKey));\n\n        const diagramStateHasOldMetadata: boolean = diagramState.metaData !== undefined;\n        if (diagramStateHasOldMetadata) {\n          diagramState.metadata = diagramState.metaData;\n          delete diagramState.metaData;\n        }\n\n        localStorage.setItem(localStorageKey, JSON.stringify(diagramState));\n      });\n  }\n}\n","html,\nbody {\n  height: 100%;\n  overflow: hidden; // As soon as our styling is clean this can be removed\n  font-size: 14px;\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n}\n\na:focus,\nbutton:focus,\ninput:focus {\n  outline: none !important;\n}\n\n.form-control:focus {\n  border-color: #ced4da;\n  box-shadow: none;\n}\n\n// We don't want our bootstrap 4 dropdowns to display the caret at the end of the button\n.dropdown-toggle::after {\n  display: none;\n}\n\n.bpmn-studio-layout {\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n  align-items: stretch;\n}\n\n.bpmn-studio-layout__content {\n  display: flex;\n  // The height of the navbar must be subtracted in order to get the total height for the content.\n  max-height: calc(100% - 42px);\n  flex: 1;\n  padding-bottom: 20px;\n  align-items: stretch;\n}\n\nrouter-view {\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n}\n\n.toast-bottom-left {\n  bottom: 20px;\n}\n\n.button {\n  color: #333;\n  opacity: 0.5;\n  cursor: default;\n}\n\n.button:hover {\n  opacity: 1;\n}\n\n.button--active {\n  opacity: 1;\n}\n\n.button--disabled {\n  opacity: 0.1;\n}\n\n.button--disabled:hover {\n  opacity: 0.1;\n}\n\n.btn-default {\n  background-color: #fff;\n  border-color: #ccc;\n  color: #333;\n}\n\n.btn-primary,\n.btn-primary:disabled {\n  background: #5d8a3c;\n  border-color: #4c7032;\n}\n\n.btn-primary:not(:disabled):not(.disabled):active,\n.btn-primary:hover:enabled {\n  background: #4c7032;\n  border-color: #2b401c;\n}\n.btn-primary:not(:disabled):not(.disabled):active:focus {\n  box-shadow: 0 0 0 0.2rem rgba(95, 142, 20, 0.5);\n}\n\n.btn-default:hover:enabled {\n  background-color: #eee;\n}\n\n.btn:focus {\n  box-shadow: none;\n}\n\n.dropdown-item {\n   cursor: pointer !important;\n   background-color: transparent !important;\n   color: black !important;\n   user-select: none;\n}\n\n.dropdown-item:hover {\n  background-color: #e6e6e6 !important;\n}\n",null,"import {IIdentity} from '../../../node_modules/@essential-projects/iam_contracts';\nimport {ILoginResult} from './ILoginResult';\nimport {ILogoutResult} from './ILogoutResult';\n\nexport interface IAuthenticationRepository {\n  login(username: string, password: string): Promise<ILoginResult>;\n  logout(): Promise<ILogoutResult>;\n  getIdentity(token: string): Promise<IIdentity>;\n}\n","import {IIdentity} from '@essential-projects/iam_contracts';\n\nimport {ILoginResult} from './ILoginResult';\nimport {IUserIdentity} from './IUserIdentity';\n\nexport interface IAuthenticationService {\n  login(authority: string): Promise<ILoginResult>;\n  logout(authority: string, identity: IIdentity): Promise<void>;\n  isLoggedIn(authority: string, identity: IIdentity): Promise<boolean>;\n  getUserIdentity(authrotiy: string, identity: IIdentity): Promise<IUserIdentity>;\n}\n","export interface IIdentity {\n  id: string;\n  name: string;\n  given_name?: string;\n  family_name?: string;\n  roles: Array<string>;\n}\n","import {IUserIdentity} from './IUserIdentity';\n\nexport interface ILoginResult {\n  identity: IUserIdentity;\n  accessToken: string;\n  idToken: string;\n}\n","export interface ILogoutResult {\n  result: boolean;\n}\n","export interface IOidcConfig {\n  clientId: string;\n  redirectUri: string;\n  logoutRedirectUri: string;\n  responseType: string;\n  scope: string;\n}\n","export interface ITokenObject {\n  idToken: string;\n  accessToken: string;\n  userId?: string;\n}\n","export interface IUserIdentity {\n  id: string;\n  name: string;\n  given_name?: string;\n  family_name?: string;\n  roles: Array<string>;\n}\n","export enum AuthenticationStateEvent {\n  LOGIN = 'login',\n  LOGOUT = 'logout',\n}\n","export * from './constants';\nexport {IAuthenticationRepository} from './IAuthenticationRepository';\nexport {IAuthenticationService} from './IAuthenticationService';\nexport {IUserIdentity} from './IUserIdentity';\nexport {ILoginResult} from './ILoginResult';\nexport {ILogoutResult} from './ILogoutResult';\nexport {ITokenObject} from './ITokenObject';\nexport {IOidcConfig} from './IOidcConfig';\n","import {IShape} from '@process-engine/bpmn-elements_contracts';\n\nexport interface IBpmnFunction {\n  trigger(selection: Array<IShape>, option: string): void;\n}\n","import {IModdleElement} from '@process-engine/bpmn-elements_contracts';\n\nimport {IDefinition, IIds} from './index';\n\nexport interface IBpmnModdle {\n  ids: IIds;\n  fromXML(xml: string, callback: (err: Error, definitions: IDefinition) => void): void;\n  create(name: string, attributes: object): IModdleElement;\n  toXML(definitions: IDefinition, callback: (err: Error, xmlStrUpdated: string) => void): void;\n}\n","import {IBpmnXmlSaveOptions} from './IBpmnXmlSaveOptions';\n\nexport interface IBpmnModeler {\n  _definitions: any;\n  attachTo(dom: HTMLElement): void;\n  clear(): void;\n  detach(): void;\n  destroy(): void;\n  saveXML(options: IBpmnXmlSaveOptions, callback: (error: Error, result: string) => void): void;\n  saveSVG(options: object, callback: (error: Error, result: string) => void): void;\n  importXML(xml: string, errorHandler?: (err: Error) => void): void;\n  get(object: string): any;\n  on(event: string | Array<string>, callback: Function, priority?: number): void;\n  off(event: string | Array<string>, callback: Function): void;\n}\n","import {IBpmnModeler} from './IBpmnModeler';\nimport {IDependencyHook} from './IDependencyHook';\n\nexport type IBpmnModelerConstructor = new (options: {\n  additionalModules?: Array<IDependencyHook>;\n  container?: string;\n}) => IBpmnModeler;\n","export interface IBpmnXmlSaveOptions {\n  /**\n   * Add the preamble to the outputted xml.\n   *\n   * If true, the preamble will be added to the xml, that the modeler\n   * exports.\n   * The preamble looks like this:\n   * <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n   *\n   * Default: false\n   */\n  preamble?: boolean;\n\n  /**\n   * Format the xml before saving.\n   *\n   * If true, the modeller will beautify the xml before exporting.\n   *\n   * Default: false\n   */\n  format?: boolean;\n}\n","import {IShape} from '@process-engine/bpmn-elements_contracts';\n\nimport {IViewbox} from './IViewbox';\n\nexport interface ICanvas {\n  _container: HTMLElement;\n  getRootElement(): IShape;\n\n  /*\n   *  Gets or sets the viewbox of the canvas.\n   *\n   * @param viewbox The new viewbox for the canvas.\n   * @returns The current viewbox.\n   */\n  viewbox(viewbox?: IViewbox): IViewbox;\n\n  zoom(zoomLevel: number | string, element?: IShape | string): void;\n}\n","import {IOverlayPosition} from './IOverlayPosition';\n\nexport interface IDefaultOverlayPositions {\n  tasks: IOverlayPosition;\n  gateways: IOverlayPosition;\n  events: IOverlayPosition;\n  participants: IOverlayPosition;\n}\n","import {IModdleElement} from '@process-engine/bpmn-elements_contracts';\n\nexport interface IDefinition {\n  $type: string;\n  diagrams: Array<IModdleElement>;\n  id: string;\n  rootElements: Array<IModdleElement>;\n  get(element: string): Array<IModdleElement>;\n}\n","export interface IDependencyHook {\n  __depends__: Array<string>;\n  __init__: Array<string>;\n  [index: string]: [string, any] | Array<string>;\n}\n","import {IModdleElement} from '@process-engine/bpmn-elements_contracts';\n\nexport interface IDescriptor {\n  businessObject: IModdleElement;\n  height: number;\n  oldBusinessObject: IModdleElement;\n  type: string;\n  width: number;\n  x: number;\n  y: number;\n}\n","export interface IEditorActions {\n  trigger(editorAction: string): void;\n}\n","import {IShape} from '@process-engine/bpmn-elements_contracts';\n\nexport interface IElementRegistry {\n  /**\n   * Register a tuple of (element, gfx, (secondaryGFX)).\n   *\n   * @param element element\n   * @param gfx gfx\n   * @param secondaryGfx Optional, other element to register, too.\n   */\n  add(element: IShape, gfx: SVGElement, secondaryGfx?: SVGElement): void;\n\n  /**\n   * Removes an element from the registry.\n   *\n   * @param element Element that should be removed.\n   */\n  remove(element: IShape): void;\n\n  /**\n   * Update the ID of an element.\n   *\n   * @param element Element to update.\n   * @param newId New ID of the element\n   */\n  updateId(element: IShape, newId: string): void;\n\n  /**\n   * Return the model element for a given ID or graphics.\n   *\n   * elementRegistry.get('SomeElementId_1');\n   * elementRegistry.get(gfx);\n   *\n   * @param filter Filter for selecting the element.\n   */\n  get(filter: string | SVGElement): IShape;\n\n  /**\n   * Returns all elements that match a given filter function.\n   *\n   * @param filterMethod Filter function to apply.\n   * @return The Elements that matches the filter function.\n   */\n  filter(filterMethod: (element: IShape) => boolean): Array<IShape>;\n\n  /**\n   * Returns all rendered model elements.\n   *\n   * @returns An array with all Elements of the ElementRegistry.\n   */\n  getAll(): Array<IShape>;\n\n  /**\n   * Iterate over all diagram elements.\n   *\n   * @param fn Function that should be executed for every diagram element.\n   */\n  forEach(fn: Function): void;\n\n  /**\n   * Return the graphical representation of an element or its ID.\n   *\n   * @example\n   * elementRegistry.getGraphics('SomeElementId_1');\n   * elementRegistry.getGraphics(rootElement); // <g ...>\n   *\n   * elementRegistry.getGraphics(rootElement, true); // <svg ...>\n   *\n   *\n   * @param filter ID or definition of the element.\n   * @param secondary Whether to return the secondary connected element, or not.\n   *\n   * @return {SVGElement}\n   */\n  getGraphics(filter: string | IShape, secondary?: boolean): SVGElement;\n\n  /**\n   * Validate the suitability of the given ID; throws an exception\n   * if there is a problem with the ID.\n   *\n   * @param id ID of the Element, that should be validated.\n   * @throws Error if the ID is empty or already assigned.\n   */\n  _validateId(id: string): void;\n}\n","import {IShape} from '@process-engine/bpmn-elements_contracts';\n\nexport interface IEvent {\n  type: string;\n  element: IShape;\n  newSelection?: Array<IShape>;\n  oldSelection?: Array<IShape>;\n}\n","export type IEventFunction = (event?: Event) => void;\n","import {ISeed} from './index';\n\nexport interface IIds {\n  _seed?: ISeed;\n}\n","export interface IInnerViewbox {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n","import {IShape} from '@process-engine/bpmn-elements_contracts';\n\nimport {IDescriptor} from './IDescriptor';\n\nexport interface IInternalEvent {\n  cancelBubble?: boolean;\n  createdElements?: object;\n  descriptor?: IDescriptor;\n  returnValue?: IInternalEvent;\n  keyEvent?: KeyboardEvent;\n  type: undefined;\n  element?: IShape;\n}\n","export interface IKeyboard {\n  addListener(keyListenerFunction: Function): void;\n  hasModifier(modifiers: KeyboardEvent): boolean;\n  isCmd(modifiers: KeyboardEvent): boolean;\n  isShift(modifiers: KeyboardEvent): boolean;\n  bind(node: HTMLElement): void;\n  getBinding(): HTMLElement;\n  unbind(): void;\n}\n","import {IValidateResult} from './IValidateResult';\n\nexport interface ILinting {\n  activateLinting(): void;\n  deactivateLinting(): void;\n  lint(): IValidateResult;\n  update(): void;\n  clearIssues(): void;\n  lintingActive(): boolean;\n}\n","import {IShape} from '@process-engine/bpmn-elements_contracts';\n\nexport interface IModeling {\n  updateProperties(element: IShape, properties: object): void;\n  updateLabel(element: IShape, name: string): void;\n  setColor(\n    elements: Array<IShape> | IShape,\n    options: {\n      fill: string;\n      stroke: string;\n    },\n  ): void;\n}\n","export interface IOuterViewbox {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n","import {IShape} from '@process-engine/bpmn-elements_contracts';\n\nimport {IOverlayPosition} from './IOverlayPosition';\n\nexport interface IOverlay {\n  element: IShape;\n  html: string;\n  htmlContainer: HTMLElement;\n  id: string;\n  position: IOverlayPosition;\n  scale: boolean;\n  show: boolean;\n  type: string;\n}\n","import {IOverlayPosition} from './IOverlayPosition';\n\nexport interface IOverlayDescriptor {\n  position: IOverlayPosition;\n  html: string;\n  // Configure scale=false to use non-scaling overlays\n  // Configure scale={ min: 1 } to use non-shrinking overlays\n  scale?: false | {min: 1};\n  // Configure show={ minZoom: 0.6 } to hide overlays at low zoom levels\n  show?: {minZoom: number};\n}\n","import {IShape} from '@process-engine/bpmn-elements_contracts';\n\nimport {IOverlayDescriptor} from './IOverlayDescriptor';\nimport {IOverlay, IOverlays} from './index';\n\nexport interface IOverlayManager {\n  _overlays: IOverlays;\n\n  add(elementOrElementId: string | IShape, overlayDescriptor: IOverlayDescriptor | IOverlay): void;\n  remove(overlayId: string | IShape): void;\n  clear(): void;\n}\n","export interface IOverlayPosition {\n  bottom?: number;\n  right?: number;\n  top?: number;\n  left?: number;\n}\n","import {IOverlay} from './index';\n\nexport interface IOverlays {\n  [key: string]: IOverlay;\n}\n","import {IModdleElement} from '@process-engine/bpmn-elements_contracts';\n\nexport interface ISeed {\n  hats?: Array<IModdleElement>;\n}\n","import {IValidateIssueCategory} from './IValidateIssueCategory';\n\nexport interface IValidateIssue {\n  category: IValidateIssueCategory;\n  id: string;\n  message: string;\n}\n","export enum IValidateIssueCategory {\n  warn = 'warn',\n  error = 'error',\n}\n","import {IValidateIssue} from './IValidateIssue';\n\nexport interface IValidateResult {\n  [key: string]: Array<IValidateIssue>;\n}\n","import {IInnerViewbox} from './IInnerViewbox';\nimport {IOuterViewbox} from './IOuterViewbox';\n\nexport interface IViewbox {\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n  scale: number;\n  inner: IInnerViewbox;\n  outer: IOuterViewbox;\n}\n","export enum ElementDistributeOptions {\n  HORIZONTAL = 'horizontal',\n  VERTICAL = 'vertical',\n}\n","export {IBpmnModeler} from './IBpmnModeler';\nexport {IBpmnModelerConstructor} from './IBpmnModelerConstructor';\nexport {ICanvas} from './ICanvas';\nexport {IDependencyHook} from './IDependencyHook';\nexport {IEvent} from './IEvent';\nexport {IBpmnModdle} from './IBpmnModdle';\nexport {IDefinition} from './IDefinition';\nexport {IElementRegistry} from './IElementRegistry';\nexport {IBpmnFunction} from './IBpmnFunction';\nexport {IModeling} from './IModeling';\nexport {ISeed} from './ISeed';\nexport {IIds} from './IIds';\nexport * from './constants';\nexport {IKeyboard} from './IKeyboard';\nexport {IEditorActions} from './IEditorActions';\nexport {IEventFunction} from './IEventFunction';\nexport {IBpmnXmlSaveOptions} from './IBpmnXmlSaveOptions';\nexport {IOverlay} from './IOverlay';\nexport {IOverlays} from './IOverlays';\nexport {IOverlayManager} from './IOverlayManager';\nexport {IOverlayDescriptor} from './IOverlayDescriptor';\nexport {IOverlayPosition} from './IOverlayPosition';\nexport {IDefaultOverlayPositions} from './IDefaultOverlayPositions';\nexport {IInternalEvent} from './IInternalEvent';\nexport {IDescriptor} from './IDescriptor';\nexport {IViewbox} from './IViewbox';\nexport {IInnerViewbox} from './IInnerViewbox';\nexport {IOuterViewbox} from './IOuterViewbox';\nexport {ILinting} from './ILinting';\nexport {IValidateIssue} from './IValidateIssue';\nexport {IValidateResult} from './IValidateResult';\nexport {IValidateIssueCategory} from './IValidateIssueCategory';\n","export interface IColorPickerColor {\n  fill: string;\n  border: string;\n}\n","import * as spectrum from 'spectrum-colorpicker';\n\nexport interface IColorPickerSettings {\n  clickoutFiresChange: boolean;\n  showPalette: boolean;\n  palette: Array<Array<string>>;\n  localStorageKey: string;\n  showInitial: boolean;\n  showInput: boolean;\n  allowEmpty: boolean;\n  showButtons: boolean;\n  showPaletteOnly: boolean;\n  togglePaletteOnly: boolean;\n\n  move?(color: spectrum.tinycolorInstance): void;\n}\n","import {IColorPickerColor} from './index';\n\nexport interface IDefaultBpmnColors {\n  red: IColorPickerColor;\n  blue: IColorPickerColor;\n  green: IColorPickerColor;\n  purple: IColorPickerColor;\n  orange: IColorPickerColor;\n  grey: IColorPickerColor;\n  none: IColorPickerColor;\n}\n","import {IDefaultBpmnColors} from './index';\n\nexport const defaultBpmnColors: IDefaultBpmnColors = {\n  red: {\n    fill: '#FFCDD2',\n    border: '#E53935',\n  },\n\n  blue: {\n    fill: '#BBDEFB',\n    border: '#1E88E5',\n  },\n\n  green: {\n    fill: '#C8E6C9',\n    border: '#43A047',\n  },\n\n  purple: {\n    fill: '#E1BEE7',\n    border: '#8E24AA',\n  },\n\n  orange: {\n    fill: '#FFE0B2',\n    border: '#FB8C00',\n  },\n\n  grey: {\n    border: '#000000',\n    fill: '#cccccc',\n  },\n\n  none: {\n    fill: null,\n    border: null,\n  },\n};\n","export * from './IColorPickerSettings';\nexport * from './IColorPickerColor';\nexport * from './IDefaultBpmnColors';\nexport * from './constants';\n","export enum StudioVersion {\n  Dev = 'dev',\n  Alpha = 'alpha',\n  Beta = 'beta',\n  Stable = 'stable',\n}\n","import {IDiagram} from '@process-engine/solutionexplorer.contracts';\n\nexport interface IDiagramCreationService {\n  createNewDiagram(solutionBaseUri: string, withName: string, xml?: string): Promise<IDiagram>;\n}\n","export * from './IDiagramCreationService';\n","export type IDiagramValidationRule = (diagramXML: string) => Promise<boolean>;\n","import {IDiagramValidationRule} from './index';\n\nexport interface IDiagramValidationRuleSet {\n  rules: Array<IDiagramValidationRule>;\n  errorMessage: string;\n}\n","import {IDiagramValidationRuleSet} from './index';\n\nexport interface IDiagramValidationRules {\n  isXML: IDiagramValidationRuleSet;\n  isBPMN: IDiagramValidationRuleSet;\n}\n","import {IDiagramValidator} from './index';\n\nexport interface IDiagramValidationService {\n  /**\n   * Starts the validation of a XML string.\n   *\n   * @param xml The XML to be validated.\n   * @returns A fluent API to chain validations.\n   */\n  validate(xml: string): IDiagramValidator;\n}\n","export interface IDiagramValidator {\n  isXML(): IDiagramValidator;\n  isBPMN(): IDiagramValidator;\n  throwIfError(): Promise<void>;\n}\n","export * from './IDiagramValidationRule';\nexport * from './IDiagramValidationRules';\nexport * from './IDiagramValidationRuleSet';\nexport * from './IDiagramValidationService';\nexport * from './IDiagramValidator';\n","export type DiagramStateChange = {\n  change: string;\n  xml?: string;\n};\n","import {IShape} from '@process-engine/bpmn-elements_contracts';\nimport {DiagramStateChange, IViewbox} from '../index';\n\nexport interface IDiagramState {\n  data: {\n    xml: string;\n  };\n  metadata: {\n    location: IViewbox;\n    selectedElements: Array<IShape>;\n    change?: DiagramStateChange;\n    isChanged: boolean;\n  };\n}\n","import {IDiagramStateListEntry} from './index';\n\nexport type IDiagramStateList = Array<IDiagramStateListEntry>;\n","import {IDiagramState} from './index';\n\nexport interface IDiagramStateListEntry {\n  uri: string;\n  diagramState: IDiagramState;\n}\n","export * from './IDiagramState';\nexport * from './IDiagramStateList';\nexport * from './IDiagramStateListEntry';\nexport * from './DiagramStateChange';\n","export interface IChangeListEntry {\n  type: string;\n  name: string;\n}\n","import {IModdleElement} from '@process-engine/bpmn-elements_contracts';\n\nexport interface IChangedElement {\n  attrs: object;\n  model: IModdleElement;\n}\n","import {IChangedElement} from './index';\n\nexport interface IChangedElementList {\n  [name: string]: IChangedElement;\n}\n","import {IChangeListEntry} from './IChangeListEntry';\n\nexport interface IDiffChangeListData {\n  added: Array<IChangeListEntry>;\n  changed: Array<IChangeListEntry>;\n  layoutChanged: Array<IChangeListEntry>;\n  removed: Array<IChangeListEntry>;\n}\n","import {IChangedElementList, IDiffElementList} from './index';\n\nexport interface IDiffChanges {\n  /*\n   * This contains all Elements that have been added between two diagrams.\n   */\n  _added: IDiffElementList;\n\n  /*\n   * This contains all Elements that have been changed between two diagrams.\n   */\n  _changed: IChangedElementList;\n\n  /*\n   * This contains all Elements thats layout has been changed between two diagrams.\n   */\n  _layoutChanged: IDiffElementList;\n\n  /*\n   * This contains all Elements that have been removed between two diagrams.\n   */\n  _removed: IDiffElementList;\n}\n","import {IModdleElement} from '@process-engine/bpmn-elements_contracts';\n\nexport interface IDiffElementList {\n  [name: string]: IModdleElement;\n}\n","export enum DiffMode {\n  OldVsNew,\n  NewVsOld,\n}\n","export * from './constants';\nexport * from './IDiffChanges';\nexport * from './IDiffChangeListData';\nexport * from './IChangeListEntry';\nexport * from './IChangedElement';\nexport * from './IChangedElementList';\nexport * from './IDiffElementList';\n","import {IIdentity} from '@essential-projects/iam_contracts';\nimport {DataModels} from '@process-engine/management_api_contracts';\n\nexport interface IDynamicUiService {\n  finishUserTask(\n    identity: IIdentity,\n    processInstanceId: string,\n    correlationId: string,\n    userTaskInstanceId: string,\n    userTaskResult: DataModels.UserTasks.UserTaskResult,\n  ): void;\n\n  getUserTask(\n    identity: IIdentity,\n    processInstanceId: string,\n    userTaskId: string,\n  ): Promise<DataModels.UserTasks.UserTask>;\n\n  finishManualTask(\n    identity: IIdentity,\n    processInstanceId: string,\n    correlationId: string,\n    manualTaskInstanceId: string,\n  ): void;\n\n  getManualTask(\n    identity: IIdentity,\n    processInstanceId: string,\n    manualTaskId: string,\n  ): Promise<DataModels.ManualTasks.ManualTask>;\n}\n","export {IDynamicUiService} from './IDynamicUiService';\n","export type EventName =\n  | 'attach'\n  | 'autoPlace'\n  | 'autoPlace.end'\n  | 'bendpoint.move.cancel'\n  | 'bendpoint.move.cleanup'\n  | 'bendpoint.move.end'\n  | 'bendpoint.move.hover'\n  | 'bendpoint.move.move'\n  | 'bendpoint.move.out'\n  | 'bendpoint.move.start'\n  | 'bpmnElement.added'\n  | 'canvas.destroy'\n  | 'canvas.init'\n  | 'canvas.resized'\n  | 'canvas.viewbox.changed'\n  | 'canvas.viewbox.changing'\n  | 'commandStack.canvas.updateRoot.executed'\n  | 'commandStack.canvas.updateRoot.postExecute'\n  | 'commandStack.canvas.updateRoot.reverted'\n  | 'commandStack.changed'\n  | 'commandStack.connection.create.canExecute'\n  | 'commandStack.connection.create.executed'\n  | 'commandStack.connection.create.postExecute'\n  | 'commandStack.connection.create.postExecuted'\n  | 'commandStack.connection.create.preExecute'\n  | 'commandStack.connection.create.reverted'\n  | 'commandStack.connection.delete.executed'\n  | 'commandStack.connection.delete.preExecute'\n  | 'commandStack.connection.delete.reverted'\n  | 'commandStack.connection.layout.executed'\n  | 'commandStack.connection.layout.postExecute'\n  | 'commandStack.connection.layout.postExecuted'\n  | 'commandStack.connection.layout.reverted'\n  | 'commandStack.connection.move.executed'\n  | 'commandStack.connection.move.preExecute'\n  | 'commandStack.connection.move.reverted'\n  | 'commandStack.connection.reconnectEnd.canExecute'\n  | 'commandStack.connection.reconnectEnd.executed'\n  | 'commandStack.connection.reconnectEnd.postExecute'\n  | 'commandStack.connection.reconnectEnd.postExecuted'\n  | 'commandStack.connection.reconnectEnd.reverted'\n  | 'commandStack.connection.reconnectStart.canExecute'\n  | 'commandStack.connection.reconnectStart.executed'\n  | 'commandStack.connection.reconnectStart.postExecute'\n  | 'commandStack.connection.reconnectStart.postExecuted'\n  | 'commandStack.connection.reconnectStart.reverted'\n  | 'commandStack.connection.updateWaypoints.canExecute'\n  | 'commandStack.connection.updateWaypoints.executed'\n  | 'commandStack.connection.updateWaypoints.postExecute'\n  | 'commandStack.connection.updateWaypoints.postExecuted'\n  | 'commandStack.connection.updateWaypoints.reverted'\n  | 'commandStack.element.autoResize.canExecute'\n  | 'commandStack.element.copy.canExecute'\n  | 'commandStack.element.paste.canExecute'\n  | 'commandStack.element.updateAttachment.executed'\n  | 'commandStack.element.updateAttachment.reverted'\n  | 'commandStack.element.updateProperties.postExecute'\n  | 'commandStack.element.updateProperties.postExecuted'\n  | 'commandStack.elements.delete.postExecuted'\n  | 'commandStack.elements.delete.preExecute'\n  | 'commandStack.elements.move.canExecute'\n  | 'commandStack.elements.move.postExecute'\n  | 'commandStack.elements.move.postExecuted'\n  | 'commandStack.elements.move.preExecute'\n  | 'commandStack.elements.paste.canExecute'\n  | 'commandStack.elements.paste.postExecute'\n  | 'commandStack.elements.paste.preExecute'\n  | 'commandStack.label.create.postExecute'\n  | 'commandStack.lane.add.postExecuted'\n  | 'commandStack.lane.add.preExecute'\n  | 'commandStack.lane.resize.postExecuted'\n  | 'commandStack.lane.resize.preExecute'\n  | 'commandStack.lane.split.postExecuted'\n  | 'commandStack.lane.split.preExecute'\n  | 'commandStack.shape.append.preExecute'\n  | 'commandStack.shape.attach.canExecute'\n  | 'commandStack.shape.create.canExecute'\n  | 'commandStack.shape.create.execute'\n  | 'commandStack.shape.create.executed'\n  | 'commandStack.shape.create.postExecute'\n  | 'commandStack.shape.create.postExecuted'\n  | 'commandStack.shape.create.preExecute'\n  | 'commandStack.shape.create.revert'\n  | 'commandStack.shape.create.reverted'\n  | 'commandStack.shape.delete.execute'\n  | 'commandStack.shape.delete.executed'\n  | 'commandStack.shape.delete.postExecute'\n  | 'commandStack.shape.delete.postExecuted'\n  | 'commandStack.shape.delete.preExecute'\n  | 'commandStack.shape.delete.revert'\n  | 'commandStack.shape.delete.reverted'\n  | 'commandStack.shape.move.executed'\n  | 'commandStack.shape.move.postExecute'\n  | 'commandStack.shape.move.postExecuted'\n  | 'commandStack.shape.move.preExecute'\n  | 'commandStack.shape.move.reverted'\n  | 'commandStack.shape.replace.postExecute'\n  | 'commandStack.shape.replace.postExecuted'\n  | 'commandStack.shape.resize.canExecute'\n  | 'commandStack.shape.resize.executed'\n  | 'commandStack.shape.resize.postExecute'\n  | 'commandStack.shape.resize.postExecuted'\n  | 'commandStack.shape.resize.preExecute'\n  | 'commandStack.shape.resize.reverted'\n  | 'commandStack.shape.toggleCollapse.executed'\n  | 'commandStack.shape.toggleCollapse.postExecuted'\n  | 'commandStack.shape.toggleCollapse.reverted'\n  | 'commandStack.spaceTool.postExecuted'\n  | 'commandStack.spaceTool.preExecute'\n  | 'connect.canceled'\n  | 'connect.cleanup'\n  | 'connect.end'\n  | 'connect.ended'\n  | 'connect.hover'\n  | 'connect.move'\n  | 'connect.out'\n  | 'connect.start'\n  | 'connection.added'\n  | 'connection.changed'\n  | 'connection.remove'\n  | 'connection.removed'\n  | 'connectionSegment.move.cancel'\n  | 'connectionSegment.move.cleanup'\n  | 'connectionSegment.move.end'\n  | 'connectionSegment.move.hover'\n  | 'connectionSegment.move.move'\n  | 'connectionSegment.move.out'\n  | 'connectionSegment.move.start'\n  | 'contextPad.close'\n  | 'contextPad.create'\n  | 'create.cleanup'\n  | 'create.end'\n  | 'create.hover'\n  | 'create.move'\n  | 'create.out'\n  | 'create.rejected'\n  | 'create.start'\n  | 'detach'\n  | 'diagram.clear'\n  | 'diagram.destroy'\n  | 'diagram.init'\n  | 'directEditing.activate'\n  | 'directEditing.cancel'\n  | 'directEditing.complete'\n  | 'directEditing.resize'\n  | 'drag.cleanup'\n  | 'drag.init'\n  | 'drag.move'\n  | 'drag.start'\n  | 'element.changed'\n  | 'element.click'\n  | 'element.dblclick'\n  | 'element.hover'\n  | 'element.marker.update'\n  | 'element.mousedown'\n  | 'element.mousemove'\n  | 'element.out'\n  | 'element.paste'\n  | 'element.updateId'\n  | 'elements.changed'\n  | 'elements.delete'\n  | 'elements.paste.rejected'\n  | 'global-connect.canceled'\n  | 'global-connect.cleanup'\n  | 'global-connect.drag.canceled'\n  | 'global-connect.drag.ended'\n  | 'global-connect.ended'\n  | 'global-connect.hover'\n  | 'global-connect.init'\n  | 'global-connect.out'\n  | 'hand.canceled'\n  | 'hand.end'\n  | 'hand.ended'\n  | 'hand.init'\n  | 'hand.move.canceled'\n  | 'hand.move.end'\n  | 'hand.move.ended'\n  | 'hand.move.move'\n  | 'i18n.changed'\n  | 'import.parse.complete'\n  | 'lasso.canceled'\n  | 'lasso.cleanup'\n  | 'lasso.end'\n  | 'lasso.ended'\n  | 'lasso.move'\n  | 'lasso.selection.canceled'\n  | 'lasso.selection.end'\n  | 'lasso.selection.ended'\n  | 'lasso.selection.init'\n  | 'lasso.start'\n  | 'mydrag.move'\n  | 'mydrag.start'\n  | 'palette.create'\n  | 'popupMenu.open'\n  | 'render.connection'\n  | 'render.getConnectionPath'\n  | 'render.getShapePath'\n  | 'render.shape'\n  | 'resize.cleanup'\n  | 'resize.end'\n  | 'resize.move'\n  | 'resize.start'\n  | 'selection.changed'\n  | 'shape.added'\n  | 'shape.changed'\n  | 'shape.move.cleanup'\n  | 'shape.move.end'\n  | 'shape.move.hover'\n  | 'shape.move.move'\n  | 'shape.move.out'\n  | 'shape.move.rejected'\n  | 'shape.move.start'\n  | 'shape.remove'\n  | 'shape.removed'\n  | 'spaceTool.canceled'\n  | 'spaceTool.cleanup'\n  | 'spaceTool.end'\n  | 'spaceTool.ended'\n  | 'spaceTool.move'\n  | 'spaceTool.selection.canceled'\n  | 'spaceTool.selection.cleanup'\n  | 'spaceTool.selection.end'\n  | 'spaceTool.selection.ended'\n  | 'spaceTool.selection.init'\n  | 'spaceTool.selection.move'\n  | 'spaceTool.selection.start'\n  | 'sum'\n  | 'tool-manager.update';\n\ntype EventNameType = string | EventName;\n\nexport interface IEventBus {\n  on(events: Array<EventNameType> | EventNameType, priority: number, callback: Function, callbackScope?: any): void;\n  on(events: Array<string> | string, callback: Function, callbackScope?: any): void;\n\n  once(events: Array<EventNameType> | EventNameType, priority: number, callback: Function, callbackScope: any): void;\n  once(events: Array<EventNameType> | EventNameType, callback: Function, callbackScope: any): void;\n  off(event: EventNameType, callback?: Function): void;\n  fire(nameOrType: EventNameType | {type: EventNameType}, data?: any): any;\n}\n","export * from './IEventBus';\n","export interface IDiagramExportRepositoryContracts {\n  /**\n   * Saves the current diagram from the given format to the disk.\n   *\n   * @param fileContent Content of the file, that should be saved.\n   * @param outputName Name of the file, that should be created.\n   * @param mimeType Mime type of the file, that should be created.\n   */\n  exportDiagram(fileContent: string, outputName: string, mimeType: string): void;\n}\n","export {IDiagramExportRepositoryContracts} from './IDiagramExportRepositoryContracts';\n","import {ISvgConvertService, IXmlConvertService} from './index';\n\nexport interface IDiagramExportService {\n  loadXML(xml: string): IXmlConvertService;\n  loadSVG(svg: string): ISvgConvertService;\n}\n","export interface IExportService {\n  export(filename: string): Promise<void>;\n}\n","import {IExportService} from './index';\n\nexport interface ISvgConvertService {\n  asPNG(): IExportService;\n  asJPEG(): IExportService;\n  asSVG(): IExportService;\n}\n","import {IExportService} from './index';\n\nexport interface IXmlConvertService {\n  asBpmn(): IExportService;\n}\n","export * from './IDiagramExportService';\nexport * from './IXmlConvertService';\nexport * from './ISvgConvertService';\nexport * from './IExportService';\n","export interface IFile {\n  lastModified: number;\n  name: string;\n  path?: string;\n  size: number;\n  type: string;\n  webkitRelativePath?: string;\n}\n","import {IInputTarget} from './index';\n\nexport interface IInputEvent {\n  target: IInputTarget;\n}\n","import {IFile} from './index';\n\nexport interface IInputTarget {\n  files: Array<IFile>;\n}\n","export * from './IFile';\nexport * from './IInputEvent';\nexport * from './IInputTarget';\n","import {DataModels} from '@process-engine/management_api_contracts';\n\nexport interface IBooleanFormField extends DataModels.UserTasks.UserTaskFormField {\n  value: boolean;\n}\n","import {DataModels} from '@process-engine/management_api_contracts';\n\nexport interface IEnumFormField extends DataModels.UserTasks.UserTaskFormField {\n  value: string;\n}\n","import {DataModels} from '@process-engine/management_api_contracts';\n\nexport interface IStringFormField extends DataModels.UserTasks.UserTaskFormField {\n  value: string;\n}\n","export * from './IBooleanFormField';\nexport * from './IEnumFormField';\nexport * from './IStringFormField';\n","export * from './authentication/index';\nexport * from './bpmnmodeler/index';\nexport * from './colorpicker/index';\nexport * from './diagram-validation-service/index';\nexport * from './diagram-creation-service/index';\nexport * from './diffview/index';\nexport * from './dynamic-ui/index';\nexport * from './eventbus/index';\nexport * from './exportService/index';\nexport * from './file-input-event/index';\nexport * from './notification/index';\nexport * from './print/index';\nexport * from './diffview/index';\nexport * from './exportRepository/index';\nexport * from './exportService/index';\nexport * from './propertypanel/index';\nexport * from './form-fields/index';\nexport * from './user-input-validation/index';\nexport * from './inspect-correlation/index';\nexport * from './solution-explorer';\nexport * from './navigation';\nexport * from './diagram/index';\nexport * from './constants';\n","export * from './inspect-panel/index';\n","export enum InspectPanelTab {\n  CorrelationList = 'correlationList',\n  LogViewer = 'LogViewer',\n}\n","import {CorrelationListSortProperty} from './index';\n\nexport interface ICorrelationSortSettings {\n  ascending: boolean;\n  sortProperty: CorrelationListSortProperty;\n}\n","export interface ICorrelationTableEntry {\n  startedAt: string;\n  state: string;\n  user: string;\n  correlationId: string;\n  processInstanceId: string;\n}\n","export enum CorrelationListSortProperty {\n  Number = 'index',\n  StartedAt = 'startedAt',\n  State = 'state',\n  User = 'user',\n  CorrelationId = 'correlationId',\n  ProcessInstanceId = 'processInstanceId',\n}\n","export * from './constants';\nexport * from './ICorrelationTableEntry';\nexport * from './ICorrelationSortSettings';\n","export * from './constants';\nexport * from './correlation-list/index';\nexport * from './log-viewer/index';\n","import {LogSortProperty} from './index';\n\nexport interface ILogSortSettings {\n  ascending: boolean;\n  sortProperty: LogSortProperty;\n}\n","export enum LogSortProperty {\n  FlowNodeId = 'flowNodeId',\n  FlowNodeInstanceId = 'flowNodeInstanceId',\n  LogLevel = 'logLevel',\n  Message = 'message',\n  Time = 'timestamp',\n}\n","export * from './constants';\nexport * from './ILogSortSettings';\n","import {NavigationInstruction} from 'aurelia-router';\n\n/**\n * This interface serves as a type when subscribing to the aurelia router events.\n */\nexport type AureliaNavigationObject = {\n  result: NavigationResult;\n  instruction: NavigationInstruction;\n};\n\ntype NavigationResult = {\n  completed: boolean;\n  status: string;\n};\n","export * from './AureliaNavigationResult';\n","import {NotificationType} from './constants';\n\nexport interface INotification {\n  type: NotificationType;\n  message: string;\n  nonDisappearing: boolean;\n  options?: ToastrOptions;\n}\n","export enum NotificationType {\n  SUCCESS = 'success',\n  INFO = 'info',\n  WARNING = 'warning',\n  ERROR = 'error',\n}\n","export * from './constants';\nexport {INotification} from './INotification';\n","export interface IDiagramPrintService {\n  printDiagram(svgContent?: string): Promise<void>;\n  updateSVG(newSVG: string): void;\n}\n","export {IDiagramPrintService} from './IDiagramPrintService';\n","import {IShape} from '@process-engine/bpmn-elements_contracts';\n\nimport {ISection} from './ISection';\n\nexport interface IIndextab {\n  title: string;\n  path: string;\n  canHandleElement: boolean;\n  sections: Array<ISection>;\n  isSuitableForElement(element: IShape): boolean;\n}\n","import {IShape} from '@process-engine/bpmn-elements_contracts';\n\nimport {IBpmnModeler} from '../bpmnmodeler/IBpmnModeler';\n\nexport interface IPageModel {\n  modeler: IBpmnModeler;\n  elementInPanel: IShape;\n  isEditable: boolean;\n}\n","import {IShape} from '@process-engine/bpmn-elements_contracts';\n\nimport {IPageModel} from '../index';\n\nexport interface ISection {\n  path: string;\n  canHandleElement: boolean;\n  activate(model: IPageModel): void;\n  isSuitableForElement(element: IShape): boolean;\n}\n","export {IPageModel} from './IPageModel';\nexport {ISection} from './ISection';\nexport {IIndextab} from './IIndextab';\n","import {IIdentity} from '@essential-projects/iam_contracts';\nimport {ISolutionExplorerService} from '@process-engine/solutionexplorer.service.contracts';\n\n/**\n * This entry keeps information about an opened solution. It is used to support\n * the HTML view and give an easy access to properties like the uri of the\n * solution.\n */\n\nexport interface ISolutionEntry {\n  service: ISolutionExplorerService;\n  uri: string;\n  fontAwesomeIconClass: string;\n  isOpenDiagramService: boolean;\n  canCloseSolution: boolean;\n  canCreateNewDiagramsInSolution: boolean;\n  authority: string;\n  identity: IIdentity;\n  isLoggedIn: boolean;\n  userName?: string;\n  processEngineVersion?: string;\n  hidden: boolean;\n}\n","import {IDiagram} from '@process-engine/solutionexplorer.contracts';\n\nimport {ISolutionEntry} from './ISolutionEntry';\n\nexport interface ISolutionService {\n  /**\n   * Adds a SolutionEntry to the service.\n   * @param solutionEntry The SolutionEntry to add.\n   */\n  addSolutionEntry(solutionEntry: ISolutionEntry): void;\n\n  /**\n   * Gets a specific SolutionEntry identified by its URI.\n   * @param uri The URI of the searched SolutionEntry.\n   */\n  getSolutionEntryForUri(uri: string): ISolutionEntry;\n\n  /**\n   * Gets a list of all persisted solutions from the last session.\n   */\n  getPersistedEntries(): Array<ISolutionEntry>;\n\n  /**\n   * Gets a list of all currently connected remote solutions.\n   */\n  getRemoteSolutionEntries(): Array<ISolutionEntry>;\n\n  /**\n   * Gets a list of all currently connected solutions.\n   */\n  getAllSolutionEntries(): Array<ISolutionEntry>;\n\n  /**\n   * Deletes a specific solution indetified by its ID.\n   * @param uri The uri of the solution entry to delete.\n   */\n  removeSolutionEntryByUri(uri: string): void;\n\n  /**\n   * Adds a diagram to the service.\n   * @param diagram The diagram to add.\n   */\n  addOpenDiagram(diagram: IDiagram): void;\n\n  /**\n   * Removes an open diagram from the service identified by its URI.\n   * @param diagramUri The uri of the diagram to remove.\n   */\n  removeOpenDiagramByUri(diagramUri: string): void;\n\n  /**\n   * Returns a list of all open diagrams in the service.\n   */\n  getOpenDiagrams(): Array<IDiagram>;\n\n  /**\n   * Persists the currently opened Solutions in the LocalStorage.\n   */\n  persistSolutionsInLocalStorage(): void;\n}\n","export * from './ISolutionEntry';\nexport * from './ISolutionService';\n","export interface IUserInputValidationRule {\n  [name: string]: RegExp;\n}\n","export interface IUserInputValidationRuleset {\n  [ruleName: string]: RegExp;\n}\n","export * from './IUserInputValidationRuleset';\nexport * from './IUserInputValidationRule';\n","const processEngineRoute: string = 'http://localhost:8000';\nconst electronHost: string = 'bpmn-studio:/';\n\nconst isRunningInElectron: boolean = Boolean((window as any).nodeRequire);\n\nexport default {\n  debug: true,\n  testing: true,\n  appHost: isRunningInElectron ? electronHost : `http://${window.location.host}`,\n  processlist: {\n    pageLimit: 10,\n  },\n  openIdConnect: {\n    authority: 'http://localhost:5000',\n    defaultAuthority: 'http://localhost:5000',\n  },\n  processengine: {\n    liveExecutionTrackerPollingIntervalInMs: 1000,\n    solutionExplorerPollingIntervalInMs: 5000,\n    processDefListPollingIntervalInMs: 5000,\n    dashboardPollingIntervalInMs: 1500,\n    updateRemoteSolutionHistoryIntervalInMs: 3000,\n    routes: {\n      processes: `${processEngineRoute}/datastore/ProcessDef`,\n      startProcess: `${processEngineRoute}/processengine/start`,\n      iam: `${processEngineRoute}/iam`,\n      userTasks: `${processEngineRoute}/datastore/UserTask`,\n      importBPMN: `${processEngineRoute}/processengine/create_bpmn_from_xml`,\n    },\n  },\n  events: {\n    differsFromOriginal: 'differsFromOriginal',\n    diagramChangedOutsideTheStudio: 'diagramChangedOutsideTheStudio',\n    xmlChanged: 'xmlChanged',\n    diagramWasSaved: 'diagramWasSaved',\n    deployModals: {\n      showRemoteSolutionSelectionModal: 'deployModals:remoteSolutionSelectionModal:show',\n      showOverwriteDiagramModal: 'deployModals:overwriteDiagramModal:show',\n    },\n    startPage: {\n      openLocalSolution: 'startpage:openlocalsolution',\n      openDiagram: 'startpage:openDiagram',\n      createDiagram: 'startpage:createDiagram',\n    },\n    statusBar: {\n      showDiagramViewButtons: 'statusbar:diagramviewbuttons:show',\n      hideDiagramViewButtons: 'statusbar:diagramviewbuttons:hide',\n      setXmlIdentifier: 'statusbar:xmlIdentifier',\n      showInspectCorrelationButtons: 'statusbar:inspectcorrelationbuttons',\n    },\n    configPanel: {\n      solutionEntryChanged: 'configpanel:solutionentry:changed',\n    },\n    navBar: {\n      showTools: 'navbar:tools:show',\n      hideTools: 'navbar:tools:hide',\n      validationError: 'navbar:validationError:true',\n      noValidationError: 'navbar:validationError:false',\n      inspectNavigateToDashboard: 'navbar:inspectLink:navigateToDashboard',\n      showInspectButtons: 'navbar:tools:showButtonsOnInspect',\n      hideInspectButtons: 'navbar:tools:hideButtonsOnInspect',\n      toggleDashboardView: 'navbar:tools:inspectButtons:toggleDashboardView',\n      toggleHeatmapView: 'navbar:tools:inspectButtons:toggleHeatmapView',\n      toggleInspectCorrelationView: 'navbar:tools:inspectButtons:toggleInspectCorrelationView',\n      updateActiveSolutionAndDiagram: 'navbar:activeSolution:diagram:update',\n    },\n    diagramDetail: {\n      onDiagramDeployed: 'diagramdetail:diagram:ondeployed',\n      printDiagram: 'diagramdetail:diagram:print',\n      saveDiagram: 'diagramdetail:diagram:save',\n      saveDiagramDone: 'diagramdetail:diagram:save:done',\n      saveDiagramAs: 'diagramdetail:diagram:save:as',\n      exportDiagramAs: 'diagramdetail:diagram:exportas',\n      startProcess: 'diagramdetail:process:start',\n      startProcessWithOptions: 'diagramdetail:process:startWithOptions',\n      toggleXMLView: 'design:xmlview:toggle',\n      uploadProcess: 'diagramdetail:process:upload',\n    },\n    bpmnio: {\n      toggleXMLView: 'design:xmlview:toggle',\n      toggleDiffView: 'design:diffview:toggle',\n      showDiffDestinationButton: 'design:diffDestinationButton:toggle',\n      togglePropertyPanel: 'design:propertypanel:toggle',\n      propertyPanelActive: 'design:propertypanel:active',\n      bindKeyboard: 'design:keyboard:bind',\n      unbindKeyboard: 'design:keyboard:unbind',\n    },\n    diffView: {\n      changeDiffMode: 'diffview:diffmode:change',\n      toggleChangeList: 'diffview:changelist:toggle',\n      setDiffDestination: 'diffview:diffDestination:set',\n    },\n    diagramChange: 'diagram:change',\n    solutionExplorerPanel: {\n      toggleSolutionExplorer: 'solutionExplorerPanel:solutionExplorer:toggle',\n    },\n    inspect: {\n      shouldDisableTokenViewerButton: 'inspect:tokenViewerButton:disable',\n      exportDiagramAs: 'inspect:diagram:exportas',\n    },\n    inspectCorrelation: {\n      showInspectPanel: 'inspectCorrelation:inspectPanel:show',\n      showTokenViewer: 'inspectCorrelation:tokenViewer:show',\n      showLogViewer: 'inpsectCorrelation:logViewer:show',\n      noCorrelationsFound: 'inspectCorrelation:diagramViewer:noCorrelationsFound',\n    },\n    solutionExplorer: {\n      updateOpenDiagrams: 'solutioneExplorer:openDiagrams:update',\n    },\n  },\n  baseRoute: processEngineRoute,\n  propertyPanel: {\n    defaultWidth: 250,\n  },\n  colorPickerSettings: {\n    preferredFormat: 'hex',\n    clickoutFiresChange: true,\n    showPalette: true,\n    maxSelectionSize: 8,\n    showInitial: true,\n    showInput: true,\n    allowEmpty: true,\n    showButtons: false,\n    containerClassName: 'colorpicker-container',\n  },\n};\n","import {Aurelia} from 'aurelia-framework';\n\nimport process from 'process';\nimport {NotificationType} from './contracts/index';\nimport environment from './environment';\nimport {NotificationService} from './services/notification-service/notification.service';\n\nimport {oidcConfig} from './open-id-connect-configuration';\n\nexport function configure(aurelia: Aurelia): void {\n  if (navigator.cookieEnabled === false) {\n    // eslint-disable-next-line no-restricted-globals\n    const url: string = location.href;\n    throw new Error(`In order to use the web version of BPMN Studio please enable cookies for this URL: ${url}.`);\n  }\n\n  if ((window as any).nodeRequire) {\n    const ipcRenderer: any = (window as any).nodeRequire('electron').ipcRenderer;\n    const newHost: string = ipcRenderer.sendSync('get_host');\n\n    /**\n     * Currently the internal PE is always connected via http.\n     * This will be subject to change.\n     */\n    const processEngineBaseRouteWithProtocol: string = `http://${newHost}`;\n\n    localStorage.setItem('InternalProcessEngineRoute', processEngineBaseRouteWithProtocol);\n\n    aurelia.container.registerInstance('InternalProcessEngineBaseRoute', processEngineBaseRouteWithProtocol);\n  } else {\n    (window as any).process = process;\n    localStorage.setItem('InternalProcessEngineRoute', environment.baseRoute);\n    aurelia.container.registerInstance('InternalProcessEngineBaseRoute', null);\n  }\n\n  aurelia.use\n    .standardConfiguration()\n    .globalResources('modules/custom_elements/modal/modal.html')\n    .feature('modules/fetch-http-client')\n    .feature('services/dynamic-ui-service')\n    .feature('services/notification-service')\n    .feature('services/user-config-service')\n    .feature('services/diagram-validation-service')\n    .feature('modules/management-api_client')\n    .feature('services/authentication-service')\n    /*\n     * The services/solution-explorer-services has a hard dependency on\n     * EventAggregator and AuthenticationService.\n     */\n    .feature('services/solution-explorer-services')\n    .feature('modules/inspect/token-viewer')\n    .feature('modules/inspect/inspect-correlation')\n    .feature('services/diagram-creation-service')\n    .feature('services/solution-service')\n    .feature('modules/inspect/heatmap')\n    .feature('modules/live-execution-tracker')\n    .plugin('aurelia-bootstrap')\n    .plugin('aurelia-validation')\n    .plugin('aurelia-open-id-connect', () => oidcConfig);\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => {\n    aurelia.setRoot();\n\n    const applicationRunsInElectron: boolean = (window as any).nodeRequire !== undefined;\n    if (applicationRunsInElectron) {\n      const ipcRenderer: any = (window as any).nodeRequire('electron').ipcRenderer;\n      // subscribe to processengine status\n      ipcRenderer.send('add_internal_processengine_status_listener');\n\n      ipcRenderer.send('app_ready');\n\n      // wait for status to be reported\n      ipcRenderer.on('internal_processengine_status', (event: any, status: string, error: string) => {\n        if (status !== 'error') {\n          return;\n        }\n        /* This is the URL to an issue in GitHub, describing\n         * what the user can do about this failure.\n         *\n         * TODO: Implement a proper FAQ section and link to that.\n         */\n        const targetHref: string =\n          \"<a href=\\\"javascript:nodeRequire('open')('https://github.com/process-engine/bpmn-studio/issues/316')\\\">click here</a>\";\n\n        const errorMessage: string = `Failed to start ProcessEngine. For further information ${targetHref}.`;\n        const notificationService: NotificationService = aurelia.container.get('NotificationService');\n\n        notificationService.showNonDisappearingNotification(NotificationType.ERROR, errorMessage);\n      });\n    }\n  });\n}\n","import {EventAggregator} from 'aurelia-event-aggregator';\nimport {inject} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\n\nimport {IIdentity} from '@essential-projects/iam_contracts';\n\nimport {IAuthenticationService} from '../../contracts/authentication/IAuthenticationService';\nimport {AuthenticationStateEvent, ISolutionEntry, ISolutionService} from '../../contracts/index';\n\n@inject(Router, 'SolutionService', 'AuthenticationService', EventAggregator)\nexport class ConfigPanel {\n  public internalSolution: ISolutionEntry;\n  public authority: string;\n  public defaultAuthority: string;\n\n  private router: Router;\n  private solutionService: ISolutionService;\n  private authenticationService: IAuthenticationService;\n  private eventAggregator: EventAggregator;\n\n  constructor(\n    router: Router,\n    solutionService: ISolutionService,\n    authenticationService: IAuthenticationService,\n    eventAggregator: EventAggregator,\n  ) {\n    this.router = router;\n    this.solutionService = solutionService;\n    this.authenticationService = authenticationService;\n    this.eventAggregator = eventAggregator;\n  }\n\n  public async attached(): Promise<void> {\n    const internalSolutionUri: string = window.localStorage.getItem('InternalProcessEngineRoute');\n\n    this.internalSolution = this.solutionService.getSolutionEntryForUri(internalSolutionUri);\n    this.authority = this.internalSolution.authority;\n    this.defaultAuthority = await this.getAuthorityForInternalSolution();\n  }\n\n  public async updateSettings(): Promise<void> {\n    const authorityDoesNotEndWithSlash: boolean = !this.authority.endsWith('/');\n    if (authorityDoesNotEndWithSlash) {\n      this.authority = `${this.authority}/`;\n    }\n\n    const userIsLoggedIn: boolean = await this.authenticationService.isLoggedIn(\n      this.internalSolution.authority,\n      this.internalSolution.identity,\n    );\n\n    if (userIsLoggedIn) {\n      await this.authenticationService.logout(this.internalSolution.authority, this.internalSolution.identity);\n\n      this.internalSolution.identity = this.createDummyIdentity();\n      this.internalSolution.isLoggedIn = false;\n      this.internalSolution.userName = undefined;\n\n      this.internalSolution.service.openSolution(this.internalSolution.uri, this.internalSolution.identity);\n      this.solutionService.persistSolutionsInLocalStorage();\n\n      this.eventAggregator.publish(AuthenticationStateEvent.LOGOUT);\n    }\n\n    this.internalSolution.authority = this.authority;\n\n    this.router.navigateBack();\n  }\n\n  public setDefaultAuthority(): void {\n    this.authority = this.defaultAuthority;\n  }\n\n  public cancelUpdate(): void {\n    this.router.navigateBack();\n  }\n\n  private async getAuthorityForInternalSolution(): Promise<string> {\n    const request: Request = new Request(`${this.internalSolution.uri}/security/authority`, {\n      method: 'GET',\n      mode: 'cors',\n      referrer: 'no-referrer',\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json',\n      },\n    });\n\n    const response: Response = await fetch(request);\n    const authority: string = (await response.json()).authority;\n\n    return authority;\n  }\n\n  public get uriIsValid(): boolean {\n    if (this.uriIsEmpty) {\n      return true;\n    }\n\n    /**\n     * This RegEx checks if the entered URI is valid or not.\n     */\n    const urlRegEx: RegExp = /^(?:http(s)?:\\/\\/)+[\\w.-]?[\\w\\-._~:/?#[\\]@!$&'()*+,;=.]+$/g;\n    const uriIsValid: boolean = urlRegEx.test(this.authority);\n\n    return uriIsValid;\n  }\n\n  public get uriIsEmpty(): boolean {\n    const uriIsEmtpy: boolean = this.authority === undefined || this.authority.length === 0;\n\n    return uriIsEmtpy;\n  }\n\n  private createDummyIdentity(): IIdentity {\n    const accessToken: string = this.createDummyAccessToken();\n    // TODO: Get the identity from the IdentityService of `@process-engine/iam`\n    const identity: IIdentity = {\n      token: accessToken,\n      userId: '', // Provided by the IdentityService.\n    };\n\n    return identity;\n  }\n\n  private createDummyAccessToken(): string {\n    const dummyAccessTokenString: string = 'dummy_token';\n    const base64EncodedString: string = btoa(dummyAccessTokenString);\n\n    return base64EncodedString;\n  }\n}\n",".config-panel {\n  margin: 20px 20px 20px 20px;\n}\n\n.config-panel__title {\n  margin-bottom: 20px;\n}\n\n.config-panel__subtitle {\n  padding-top: 5px;\n}\n\n.config-panel__card {\n  margin-bottom: 20px;\n}\n\n.use-internal-processengine {\n  cursor: pointer;\n  text-decoration: underline;\n}\n\n.config-panel__card__alert {\n  margin-top: 10px;\n  margin-bottom: 0;\n}\n\n.config-panel__card__alert__link {\n  cursor: pointer;\n}\n\n.uri-input--invalid {\n  border: 2px red solid;\n}\n\n.uri-input--invalid:focus {\n  border: 2px red solid;\n}\n",null,"import {bindable, inject} from 'aurelia-framework';\n\nimport {DataModels} from '@process-engine/management_api_contracts';\n\nimport {NotificationType} from '../../contracts/index';\nimport {NotificationService} from '../../services/notification-service/notification.service';\n\n@inject('NotificationService')\nexport class ConfirmWidget {\n  @bindable()\n  public userTaskConfig: DataModels.UserTasks.UserTaskConfig;\n\n  public formFields: Array<DataModels.UserTasks.UserTaskFormField>;\n  public confirmMessage: string;\n\n  private notificationService: NotificationService;\n\n  constructor(notificationService: NotificationService) {\n    this.notificationService = notificationService;\n  }\n\n  public attached(): void {\n    const firstBooleanFormField: DataModels.UserTasks.UserTaskFormField = this.getFirstBooleanFormField();\n    const userTaskHasNoBooleanFormField: boolean = firstBooleanFormField === undefined;\n\n    if (userTaskHasNoBooleanFormField) {\n      const errorMessage: string =\n        'Confirm UserTasks must have a form field of type boolean that should get confirmed.';\n\n      this.notificationService.showNotification(NotificationType.ERROR, errorMessage);\n    }\n\n    this.confirmMessage = firstBooleanFormField.label;\n    this.formFields = this.getAllOtherFormFields(firstBooleanFormField);\n  }\n\n  // TODO: Move this to a UserTaskControlFactory\n  public getFieldControl(field: DataModels.UserTasks.UserTaskFormField): string {\n    switch (field.type) {\n      case DataModels.UserTasks.UserTaskFormFieldType.enum:\n        return 'dropdown';\n      case DataModels.UserTasks.UserTaskFormFieldType.string:\n        return 'textbox';\n      case DataModels.UserTasks.UserTaskFormFieldType.boolean:\n        return 'checkbox';\n      case DataModels.UserTasks.UserTaskFormFieldType.long:\n        return 'number';\n      default: {\n        const notSupportedType: string = field.type !== undefined ? field.type : 'Custom Type';\n        const errorMessage: string =\n          `Not supported form field type: ${notSupportedType}.` +\n          `</br>Please change the form field type with id \"${field.id}\".`;\n\n        this.notificationService.showNotification(NotificationType.ERROR, errorMessage);\n        return null;\n      }\n    }\n  }\n\n  private getAllOtherFormFields(\n    formField: DataModels.UserTasks.UserTaskFormField,\n  ): Array<DataModels.UserTasks.UserTaskFormField> {\n    const booleanFormFieldIndex: number = this.userTaskConfig.formFields.indexOf(formField);\n\n    const otherFormFields: Array<DataModels.UserTasks.UserTaskFormField> = this.userTaskConfig.formFields.slice();\n    otherFormFields.splice(booleanFormFieldIndex, 1);\n\n    return otherFormFields;\n  }\n\n  private getFirstBooleanFormField(): DataModels.UserTasks.UserTaskFormField {\n    const formFields: Array<DataModels.UserTasks.UserTaskFormField> = this.userTaskConfig.formFields;\n\n    return formFields.find((formField: DataModels.UserTasks.UserTaskFormField): boolean => {\n      return formField.type === DataModels.UserTasks.UserTaskFormFieldType.boolean;\n    });\n  }\n}\n",".confirm-widget-confirm-message {\n  margin-top: 50px;\n}\n",null,".modal-backdrop {\n  opacity: 0.3 !important;\n}\n\n.show-modal {\n  display: block !important;\n}\n\n.modal-style {\n  top: 20%;\n}\n\n.modal-content {\n  width: 100%;\n  height: 100%;\n  max-height: 100%\n}\n",null,"import {inject} from 'aurelia-framework';\nimport {EventAggregator, Subscription} from 'aurelia-event-aggregator';\n\nimport environment from '../../environment';\nimport {ISolutionEntry} from '../../contracts';\nimport {SolutionService} from '../../services/solution-service/SolutionService';\n\n@inject(EventAggregator, 'SolutionService')\nexport class DeployModals {\n  public showRemoteSolutionOnDeployModal: boolean = false;\n  public showOverwriteDiagramModal: boolean = false;\n  public remoteSolutions: Array<ISolutionEntry>;\n\n  public saveDiagramAndDeploy: Function;\n\n  public cancelMultipleRemoteSolutionModal: Function;\n  public selectRemoteSolution: Function;\n\n  public cancelOverwriteModal: Function;\n  public overwriteDiagram: Function;\n\n  private solutionService: SolutionService;\n\n  private subscriptions: Array<Subscription>;\n  private eventAggregator: EventAggregator;\n\n  constructor(eventAggregator: EventAggregator, solutionService: SolutionService) {\n    this.eventAggregator = eventAggregator;\n    this.solutionService = solutionService;\n  }\n\n  public attached(): void {\n    this.subscriptions = [\n      this.eventAggregator.subscribe(\n        environment.events.deployModals.showRemoteSolutionSelectionModal,\n        (callback: Function) => {\n          this.handleRemoteSolutionSelection(callback);\n        },\n      ),\n\n      this.eventAggregator.subscribe(\n        environment.events.deployModals.showOverwriteDiagramModal,\n        (callback: Function) => {\n          this.handleOverwriting(callback);\n        },\n      ),\n    ];\n  }\n\n  public detached(): void {\n    this.subscriptions.forEach((subscription: Subscription) => {\n      subscription.dispose();\n    });\n  }\n\n  public handleRemoteSolutionSelection(callback: Function): void {\n    this.updateRemoteSolutions();\n    this.showRemoteSolutionOnDeployModal = true;\n\n    this.cancelMultipleRemoteSolutionModal = (): void => {\n      this.showRemoteSolutionOnDeployModal = false;\n\n      callback();\n    };\n\n    this.selectRemoteSolution = (remoteSolution: ISolutionEntry): void => {\n      this.showRemoteSolutionOnDeployModal = false;\n\n      callback(remoteSolution);\n    };\n  }\n\n  public handleOverwriting(callback: Function): void {\n    this.showOverwriteDiagramModal = true;\n\n    this.cancelOverwriteModal = (): void => {\n      this.showOverwriteDiagramModal = false;\n\n      callback(false);\n    };\n\n    this.overwriteDiagram = (): void => {\n      this.showOverwriteDiagramModal = false;\n\n      callback(true);\n    };\n  }\n\n  private updateRemoteSolutions(): void {\n    this.remoteSolutions = this.solutionService.getRemoteSolutionEntries();\n  }\n}\n","",null,"/* eslint-disable 6river/new-cap */\n/* eslint-disable no-underscore-dangle */\nimport {inject} from 'aurelia-dependency-injection';\nimport {EventAggregator, Subscription} from 'aurelia-event-aggregator';\nimport {bindable, computedFrom} from 'aurelia-framework';\n\nimport {IModdleElement, IShape} from '@process-engine/bpmn-elements_contracts';\nimport * as bundle from '@process-engine/bpmn-js-custom-bundle';\nimport {IDiagram} from '@process-engine/solutionexplorer.contracts';\nimport {diff} from 'bpmn-js-differ';\n\nimport {\n  DiffMode,\n  IBpmnModdle,\n  IBpmnModeler,\n  IBpmnXmlSaveOptions,\n  ICanvas,\n  IChangeListEntry,\n  IChangedElement,\n  IChangedElementList,\n  IColorPickerColor,\n  IDefinition,\n  IDiffChangeListData,\n  IDiffChanges,\n  IDiffElementList,\n  IElementRegistry,\n  IEventFunction,\n  IModeling,\n  ISolutionEntry,\n  IViewbox,\n  NotificationType,\n  defaultBpmnColors,\n} from '../../../contracts/index';\nimport environment from '../../../environment';\nimport {ElementNameService} from '../../../services/elementname-service/elementname.service';\nimport {NotificationService} from '../../../services/notification-service/notification.service';\nimport {SolutionService} from '../../../services/solution-service/SolutionService';\n\n@inject('NotificationService', EventAggregator, 'SolutionService')\nexport class BpmnDiffView {\n  public currentXml: string;\n  public previousXml: string;\n\n  @bindable() public unconvertedPreviousXml: string;\n  @bindable() public unconvertedCurrentXml: string;\n  @bindable() public savedXml: string;\n  @bindable() public processModelId: string;\n  @bindable() public deployedXml: string;\n\n  public xmlChanges: IDiffChanges;\n  public leftCanvasModel: HTMLElement;\n  public rightCanvasModel: HTMLElement;\n  public lowerCanvasModel: HTMLElement;\n  public currentDiffMode: DiffMode = DiffMode.NewVsOld;\n  public showChangeList: boolean;\n  public noChangesExisting: boolean = true;\n  public noChangesReason: string;\n  public totalAmountOfChange: number;\n  public previousXmlIdentifier: string;\n  public currentXmlIdentifier: string;\n  public changeListData: IDiffChangeListData = {\n    removed: [],\n    changed: [],\n    added: [],\n    layoutChanged: [],\n  };\n\n  public showSavedXml: boolean = true;\n\n  private notificationService: NotificationService;\n  private eventAggregator: EventAggregator;\n  private leftViewer: IBpmnModeler;\n  private rightViewer: IBpmnModeler;\n  private lowerViewer: IBpmnModeler;\n  private diffModeler: IBpmnModeler;\n  private currentXmlModeler: IBpmnModeler;\n  private previousXmlModeler: IBpmnModeler;\n  private modeling: IModeling;\n  private elementRegistry: IElementRegistry;\n  private subscriptions: Array<Subscription>;\n  private elementNameService: ElementNameService;\n  private diffDestination: string = 'lastSaved';\n  private diagramName: string | undefined;\n  private solutionService: SolutionService;\n\n  constructor(\n    notificationService: NotificationService,\n    eventAggregator: EventAggregator,\n    solutionService: SolutionService,\n  ) {\n    this.notificationService = notificationService;\n    this.eventAggregator = eventAggregator;\n    this.elementNameService = new ElementNameService();\n    this.solutionService = solutionService;\n  }\n\n  public created(): void {\n    this.leftViewer = this.createNewViewer();\n    this.rightViewer = this.createNewViewer();\n    this.lowerViewer = this.createNewViewer();\n\n    this.diffModeler = new bundle.modeler();\n    this.previousXmlModeler = new bundle.modeler();\n    this.currentXmlModeler = new bundle.modeler();\n\n    this.modeling = this.diffModeler.get('modeling');\n    this.elementRegistry = this.diffModeler.get('elementRegistry');\n\n    this.startSynchronizingViewers();\n  }\n\n  public async attached(): Promise<void> {\n    this.leftViewer.attachTo(this.leftCanvasModel);\n    this.rightViewer.attachTo(this.rightCanvasModel);\n    this.lowerViewer.attachTo(this.lowerCanvasModel);\n\n    this.syncAllViewers();\n\n    this.subscriptions = [\n      this.eventAggregator.subscribe(environment.events.diffView.changeDiffMode, (diffMode: DiffMode) => {\n        this.currentDiffMode = diffMode;\n\n        this.updateDiffView();\n      }),\n\n      this.eventAggregator.subscribe(environment.events.diffView.toggleChangeList, () => {\n        this.showChangeList = !this.showChangeList;\n      }),\n\n      this.eventAggregator.subscribe(environment.events.diffView.setDiffDestination, async (data: Array<string>) => {\n        [this.diffDestination, this.diagramName] = data;\n\n        const diffLastSavedXml: boolean = this.diffDestination === 'lastSaved';\n        if (diffLastSavedXml) {\n          this.setSavedProcessModelAsPreviousXml();\n        } else {\n          const updatingDeployedXmlWasSuccessful: boolean = await this.updateDeployedXml();\n          const diagramNameIsSet: boolean = this.diagramName !== undefined;\n\n          if (updatingDeployedXmlWasSuccessful && diagramNameIsSet) {\n            this.setCustomProcessModelAsPreviousXml();\n\n            return;\n          }\n\n          if (updatingDeployedXmlWasSuccessful) {\n            this.setDeployedProcessModelAsPreviousXml();\n          }\n        }\n      }),\n    ];\n  }\n\n  public detached(): void {\n    for (const subscription of this.subscriptions) {\n      subscription.dispose();\n    }\n  }\n\n  public savedXmlChanged(): void {\n    if (this.showSavedXml) {\n      this.setSavedProcessModelAsPreviousXml();\n    }\n  }\n\n  public async processModelIdChanged(): Promise<void> {\n    const hasNoProcessModelId: boolean = this.processModelId === undefined;\n    if (hasNoProcessModelId) {\n      this.deployedXml = undefined;\n\n      return;\n    }\n\n    const updatingDeploydedXmlWasSuccessfull: boolean = await this.updateDeployedXml();\n    if (updatingDeploydedXmlWasSuccessfull) {\n      return;\n    }\n\n    this.diffDestination = 'lastSaved';\n    this.setSavedProcessModelAsPreviousXml();\n  }\n\n  public deployedXmlChanged(): void {\n    const processModelIsDeployed: boolean = this.deployedXml !== undefined;\n\n    this.eventAggregator.publish(environment.events.bpmnio.showDiffDestinationButton, processModelIsDeployed);\n  }\n\n  public async unconvertedPreviousXmlChanged(): Promise<void> {\n    await this.importXml(this.unconvertedPreviousXml, this.previousXmlModeler);\n\n    this.previousXml = await this.exportXml(this.previousXmlModeler);\n\n    this.importXml(this.previousXml, this.rightViewer);\n\n    await this.updateXmlChanges();\n    this.updateDiffView();\n  }\n\n  public async unconvertedCurrentXmlChanged(): Promise<void> {\n    await this.importXml(this.unconvertedCurrentXml, this.currentXmlModeler);\n\n    this.currentXml = await this.exportXml(this.currentXmlModeler);\n\n    this.importXml(this.currentXml, this.leftViewer);\n\n    await this.updateXmlChanges();\n    this.updateDiffView();\n  }\n\n  public togglePreviousXml(): void {\n    this.showSavedXml = !this.showSavedXml;\n\n    if (this.showSavedXml) {\n      this.setSavedProcessModelAsPreviousXml();\n    } else {\n      this.setDeployedProcessModelAsPreviousXml();\n    }\n  }\n\n  @computedFrom('currentDiffMode')\n  public get diffModeIsNewVsOld(): boolean {\n    return this.currentDiffMode === DiffMode.NewVsOld;\n  }\n\n  @computedFrom('currentDiffMode')\n  public get diffModeIsOldVsNew(): boolean {\n    return this.currentDiffMode === DiffMode.OldVsNew;\n  }\n\n  private syncAllViewers(): void {\n    const lowerCanvas: ICanvas = this.lowerViewer.get('canvas');\n    const leftCanvas: ICanvas = this.leftViewer.get('canvas');\n    const rightCanvas: ICanvas = this.rightViewer.get('canvas');\n\n    const changedViewbox: IViewbox = lowerCanvas.viewbox();\n    leftCanvas.viewbox(changedViewbox);\n    rightCanvas.viewbox(changedViewbox);\n  }\n\n  private setDeployedProcessModelAsPreviousXml(): void {\n    this.unconvertedPreviousXml = this.deployedXml;\n\n    this.previousXmlIdentifier = 'Deployed';\n    this.currentXmlIdentifier = 'Filesystem';\n\n    this.eventAggregator.publish(environment.events.statusBar.setXmlIdentifier, [\n      this.previousXmlIdentifier,\n      this.currentXmlIdentifier,\n    ]);\n  }\n\n  private setCustomProcessModelAsPreviousXml(): void {\n    this.unconvertedPreviousXml = this.deployedXml;\n\n    this.previousXmlIdentifier = this.diagramName;\n    this.currentXmlIdentifier = this.processModelId;\n\n    this.eventAggregator.publish(environment.events.statusBar.setXmlIdentifier, [\n      this.previousXmlIdentifier,\n      this.currentXmlIdentifier,\n    ]);\n\n    this.diagramName = undefined;\n  }\n\n  private setSavedProcessModelAsPreviousXml(): void {\n    this.unconvertedPreviousXml = this.savedXml;\n\n    this.previousXmlIdentifier = 'Old';\n    this.currentXmlIdentifier = 'New';\n\n    this.eventAggregator.publish(environment.events.statusBar.setXmlIdentifier, [\n      this.previousXmlIdentifier,\n      this.currentXmlIdentifier,\n    ]);\n  }\n\n  private async updateDeployedXml(): Promise<boolean> {\n    const activeSolutionEntry: ISolutionEntry = this.solutionService.getSolutionEntryForUri(this.diffDestination);\n\n    const activeSolutionEntryNotFound: boolean = activeSolutionEntry === undefined;\n    if (activeSolutionEntryNotFound) {\n      return false;\n    }\n\n    const diagramName: string = this.diagramName ? this.diagramName : this.processModelId;\n\n    const getXmlFromDeployed: () => Promise<string> = async (): Promise<string> => {\n      try {\n        const diagram: IDiagram = await activeSolutionEntry.service.loadDiagram(diagramName);\n\n        const diagramFound: boolean = diagram !== undefined;\n\n        return diagramFound ? diagram.xml : undefined;\n      } catch {\n        return undefined;\n      }\n    };\n\n    this.deployedXml = await getXmlFromDeployed();\n    const diagramIsNotDeployed: boolean = this.deployedXml === undefined;\n\n    const diffingAgainstDeployed: boolean = this.diffDestination !== 'lastSaved';\n    if (diagramIsNotDeployed && diffingAgainstDeployed) {\n      const errorMessage: string =\n        'Could not diff against the deployed version: This diagram is not deployed to the ProcessEngine.';\n      this.notificationService.showNotification(NotificationType.ERROR, errorMessage);\n\n      return false;\n    }\n\n    return true;\n  }\n\n  private async updateXmlChanges(): Promise<void> {\n    /**\n     * TODO: This is a dirty fix, so that the model parser does not\n     * get an undefined string.\n     *\n     * We need to find out, where this value gets set to undefined\n     * and prevent this issue there.\n     */\n    const previousXmlIsNotDefined: boolean = this.previousXml === undefined;\n    if (previousXmlIsNotDefined) {\n      this.previousXml = this.currentXml;\n    }\n\n    const previousDefinitions: IDefinition = await this.getDefintionsFromXml(this.previousXml);\n    const newDefinitions: IDefinition = await this.getDefintionsFromXml(this.currentXml);\n\n    this.xmlChanges = diff(previousDefinitions, newDefinitions);\n    this.prepareChangesForChangeList();\n  }\n\n  private async getDefintionsFromXml(xml: string): Promise<any> {\n    return new Promise((resolve: Function, reject: Function): void => {\n      const moddle: IBpmnModdle = this.diffModeler.get('moddle');\n\n      moddle.fromXML(xml, (error: Error, definitions: IDefinition) => {\n        if (error) {\n          reject(error);\n        }\n\n        resolve(definitions);\n      });\n    });\n  }\n\n  private getChangeListEntriesFromChanges(\n    elementChanges: IDiffElementList | IChangedElementList,\n  ): Array<IChangeListEntry> {\n    const changeListEntries: Array<IChangeListEntry> = [];\n    const elementIds: Array<string> = Object.keys(elementChanges);\n\n    for (const elementId of elementIds) {\n      const elementChange: any = elementChanges[elementId];\n\n      const isElementAChangedElement: boolean = elementChange.$type === undefined;\n      const changeListEntry: IChangeListEntry = isElementAChangedElement\n        ? this.createChangeListEntry(elementChange.model.name, elementChange.model.$type)\n        : this.createChangeListEntry(elementChange.name, elementChange.$type);\n\n      changeListEntries.push(changeListEntry);\n    }\n\n    return changeListEntries;\n  }\n\n  /*\n   * This function converts the object from the bpmn-differ into an object with arrays\n   * to make it loopable in the html.\n   */\n  private prepareChangesForChangeList(): void {\n    this.changeListData.removed = [];\n    this.changeListData.changed = [];\n    this.changeListData.added = [];\n    this.changeListData.layoutChanged = [];\n\n    const changedElement: IChangedElementList = this.removeElementsWithoutChanges(this.xmlChanges._changed);\n\n    this.changeListData.removed = this.getChangeListEntriesFromChanges(this.xmlChanges._removed);\n    this.changeListData.changed = this.getChangeListEntriesFromChanges(changedElement);\n    this.changeListData.added = this.getChangeListEntriesFromChanges(this.xmlChanges._added);\n    this.changeListData.layoutChanged = this.getChangeListEntriesFromChanges(this.xmlChanges._layoutChanged);\n\n    this.totalAmountOfChange =\n      this.changeListData.removed.length +\n      this.changeListData.changed.length +\n      this.changeListData.added.length +\n      this.changeListData.layoutChanged.length;\n\n    this.noChangesExisting = this.totalAmountOfChange === 0;\n\n    if (this.noChangesExisting) {\n      this.setNoChangesReason();\n    } else {\n      this.noChangesReason = '';\n    }\n  }\n\n  private setNoChangesReason(): void {\n    /*\n     * This Regex removes all newlines and spaces to make sure that both xml\n     * are not formatted.\n     */\n    const whitespaceAndNewLineRegex: RegExp = /\\r?\\n|\\r|\\s/g;\n\n    const unformattedXml: string = this.currentXml.replace(whitespaceAndNewLineRegex, '');\n    const unformattedSaveXml: string = this.previousXml.replace(whitespaceAndNewLineRegex, '');\n\n    const diagramIsUnchanged: boolean = unformattedSaveXml === unformattedXml;\n\n    if (diagramIsUnchanged) {\n      this.noChangesReason = 'The two diagrams are identical.';\n    } else {\n      this.noChangesReason = 'The two diagrams are incomparable.';\n    }\n  }\n\n  private createChangeListEntry(elementName: string, elementType: string): IChangeListEntry {\n    const humanReadableElementName: string = this.elementNameService.getHumanReadableName(elementName);\n    const humanReadableElementType: string = this.elementNameService.getHumanReadableType(elementType);\n\n    const changeListEntry: IChangeListEntry = {\n      name: humanReadableElementName,\n      type: humanReadableElementType,\n    };\n\n    return changeListEntry;\n  }\n\n  private startSynchronizingViewers(): void {\n    const lowerCanvas: ICanvas = this.lowerViewer.get('canvas');\n    const leftCanvas: ICanvas = this.leftViewer.get('canvas');\n    const rightCanvas: ICanvas = this.rightViewer.get('canvas');\n\n    this.setEventFunctions(lowerCanvas, leftCanvas, rightCanvas);\n    this.setEventFunctions(leftCanvas, rightCanvas, lowerCanvas);\n    this.setEventFunctions(rightCanvas, lowerCanvas, leftCanvas);\n  }\n\n  private setEventFunctions(changingCanvas: ICanvas, firstCanvas: ICanvas, secondCanvas: ICanvas): void {\n    const changingCanvasContainer: HTMLElement = changingCanvas._container;\n\n    const adjustViewboxes: IEventFunction = (): void => {\n      const changedViewbox: IViewbox = changingCanvas.viewbox();\n      firstCanvas.viewbox(changedViewbox);\n      secondCanvas.viewbox(changedViewbox);\n    };\n\n    const startCheckingForMouseMovement: IEventFunction = (): void => {\n      window.onmousemove = adjustViewboxes;\n    };\n    const stopCheckingForMousemovement: IEventFunction = (): void => {\n      window.onmousemove = null;\n    };\n\n    changingCanvasContainer.onwheel = adjustViewboxes;\n    changingCanvasContainer.onmousedown = startCheckingForMouseMovement;\n    changingCanvasContainer.onmouseup = stopCheckingForMousemovement;\n  }\n\n  private markAddedElements(addedElements: IDiffElementList): void {\n    const elementsToBeColored: Array<IShape> = this.getElementsToBeColored(addedElements);\n\n    this.colorizeElements(elementsToBeColored, defaultBpmnColors.green);\n  }\n\n  private markRemovedElements(deletedElements: IDiffElementList): void {\n    const elementsToBeColored: Array<IShape> = this.getElementsToBeColored(deletedElements);\n\n    this.colorizeElements(elementsToBeColored, defaultBpmnColors.red);\n  }\n\n  private markElementsWithLayoutChanges(elementsWithLayoutChanges: IDiffElementList): void {\n    const elementsToBeColored: Array<IShape> = this.getElementsToBeColored(elementsWithLayoutChanges);\n\n    this.colorizeElements(elementsToBeColored, defaultBpmnColors.purple);\n  }\n\n  private markChangedElements(changedElements: IChangedElementList): void {\n    const changedElementsWithChanges: IChangedElementList = this.removeElementsWithoutChanges(changedElements);\n\n    const elementsToBeColored: Array<IShape> = this.getChangedElementsToBeColored(changedElementsWithChanges);\n\n    this.colorizeElements(elementsToBeColored, defaultBpmnColors.orange);\n  }\n\n  /*\n   * This function removes all elements without any changes from the changedElement object\n   * and returns an object without these elements.\n   *\n   *  This is needed because the diff function always adds the start event\n   *  to the changed Elements even though it has no changes.\n   *\n   * @param changedElement The _changed object of the object that gets returned by the bpmn-differ.\n   * @returns The same object without the elements that did not get changed.\n   */\n  private removeElementsWithoutChanges(changedElements: IChangedElementList): IChangedElementList {\n    const copyOfChangedElements: IChangedElementList = Object.assign({}, changedElements);\n\n    Object.keys(copyOfChangedElements).forEach((element: string) => {\n      const currentElementHasNoChanges: boolean = Object.keys(copyOfChangedElements[element].attrs).length === 0;\n\n      if (currentElementHasNoChanges) {\n        delete copyOfChangedElements[element];\n      }\n    });\n\n    return copyOfChangedElements;\n  }\n\n  private updateDiffView(): void {\n    if (this.diffModeIsNewVsOld) {\n      this.updateLowerDiff(this.currentXml);\n    } else if (this.diffModeIsOldVsNew) {\n      this.updateLowerDiff(this.previousXml);\n    }\n  }\n\n  private async updateLowerDiff(xml: string): Promise<void> {\n    const xmlIsNotLoaded: boolean = xml === undefined || xml === null;\n\n    if (xmlIsNotLoaded) {\n      const notificationMessage: string =\n        'The xml could not be loaded. Please try to reopen the Diff View or reload the Detail View.';\n      this.notificationService.showNotification(NotificationType.ERROR, notificationMessage);\n\n      return;\n    }\n\n    const addedElements: IDiffElementList = this.xmlChanges._added;\n    const removedElements: IDiffElementList = this.xmlChanges._removed;\n    const changedElements: IChangedElementList = this.xmlChanges._changed;\n    const layoutChangedElements: IDiffElementList = this.xmlChanges._layoutChanged;\n\n    const diffModeIsCurrentVsPrevious: boolean = this.currentDiffMode === DiffMode.NewVsOld;\n\n    await this.importXml(xml, this.diffModeler);\n    this.clearColors();\n\n    this.markElementsWithLayoutChanges(layoutChangedElements);\n    this.markChangedElements(changedElements);\n\n    if (diffModeIsCurrentVsPrevious) {\n      this.markAddedElements(addedElements);\n    } else {\n      this.markRemovedElements(removedElements);\n    }\n\n    const coloredXml: string = await this.exportXml(this.diffModeler);\n\n    await this.importXml(coloredXml, this.lowerViewer);\n  }\n\n  private async importXml(xml: string, viewer: IBpmnModeler): Promise<void> {\n    const xmlIsNotLoaded: boolean = xml === undefined || xml === null;\n    if (xmlIsNotLoaded) {\n      const notificationMessage: string =\n        'The xml could not be loaded. Please try to reopen the Diff View or reload the Detail View.';\n      this.notificationService.showNotification(NotificationType.ERROR, notificationMessage);\n\n      return undefined;\n    }\n\n    const xmlImportPromise: Promise<void> = new Promise((resolve: Function, reject: Function): void => {\n      viewer.importXML(xml, (importXmlError: Error) => {\n        if (importXmlError) {\n          reject(importXmlError);\n\n          return;\n        }\n\n        this.fitDiagramToViewport(viewer);\n\n        resolve();\n      });\n    });\n\n    return xmlImportPromise;\n  }\n\n  private fitDiagramToViewport(viewer: IBpmnModeler): void {\n    const canvas: ICanvas = viewer.get('canvas');\n    const viewbox: IViewbox = canvas.viewbox();\n    const diagramIsVisible: boolean = viewbox.height > 0 && viewbox.width > 0;\n\n    if (diagramIsVisible) {\n      canvas.zoom('fit-viewport', 'auto');\n    }\n  }\n\n  private async exportXml(modeler: IBpmnModeler): Promise<string> {\n    const exportXmlPromise: Promise<string> = new Promise((resolve: Function, reject: Function): void => {\n      const xmlSaveOptions: IBpmnXmlSaveOptions = {\n        format: true,\n      };\n\n      modeler.saveXML(xmlSaveOptions, async (saveXmlError: Error, xml: string) => {\n        if (saveXmlError) {\n          reject(saveXmlError);\n\n          return;\n        }\n\n        resolve(xml);\n      });\n    });\n\n    return exportXmlPromise;\n  }\n\n  private createNewViewer(): IBpmnModeler {\n    return new bundle.viewer({\n      additionalModules: [bundle.ZoomScrollModule, bundle.MoveCanvasModule],\n    });\n  }\n\n  private getChangedElementsToBeColored(changedElementList: IChangedElementList): Array<IShape> {\n    return Object.values(changedElementList)\n      .filter((element: IChangedElement) => {\n        return element.model.$type !== 'bpmn:Collaboration' && element.model.$type !== 'bpmn:Process';\n      })\n      .map((element: IChangedElement) => {\n        const currentElement: IShape = this.elementRegistry.get(element.model.id);\n\n        return currentElement;\n      });\n  }\n\n  private getElementsToBeColored(elements: IDiffElementList): Array<IShape> {\n    return Object.values(elements)\n      .filter((element: IModdleElement) => {\n        return element.$type !== 'bpmn:Collaboration' && element.$type !== 'bpmn:Process';\n      })\n      .map((element: IModdleElement) => {\n        const currentElement: IShape = this.elementRegistry.get(element.id);\n\n        return currentElement;\n      });\n  }\n\n  private clearColors(): void {\n    const elementsToBeColored: Array<IShape> = this.elementRegistry.filter((element: IShape): boolean => {\n      const elementHasFillColor: boolean = element.businessObject.di.fill !== undefined;\n      const elementHasBorderColor: boolean = element.businessObject.di.stroke !== undefined;\n\n      const elementHasColor: boolean = elementHasFillColor || elementHasBorderColor;\n\n      return elementHasColor;\n    });\n\n    this.colorizeElements(elementsToBeColored, defaultBpmnColors.none);\n  }\n\n  private colorizeElements(elementsToBeColored: Array<IShape>, color: IColorPickerColor): void {\n    const noElementsToBeColored: boolean = elementsToBeColored.length === 0;\n\n    if (noElementsToBeColored) {\n      return;\n    }\n\n    this.modeling.setColor(elementsToBeColored, {\n      stroke: color.border,\n      fill: color.fill,\n    });\n  }\n}\n",".diff-view {\n  height: 100%;\n  width: 100%;\n  background: white;\n  bottom: 0;\n}\n\n.left-diff-view {\n  position: relative;\n  float: left;\n  width: 50%;\n  height: 33%;\n}\n\n.right-diff-view {\n  position: relative;\n  width: 50%;\n  height: 33%;\n  overflow: hidden;\n}\n\n.lower-diff-view {\n  position: relative;\n  display: inline-flex;\n  width: 100%;\n  height: 67%;\n}\n\n.left-diff-view__canvasModel {\n  width: 100%;\n  height: 100%;\n  border-bottom: 4px dashed #ccc;\n}\n\n.right-diff-view__canvasModel {\n  width: 100%;\n  height: 100%;\n  border-left: 4px dashed #ccc;\n  border-bottom: 4px dashed #ccc;\n}\n\n.lower-diff-view__canvasModel {\n  width: 100%;\n  height: 100%;\n  flex: 2;\n}\n\n.diff-canvas-title {\n  position: absolute;\n  bottom: 5px;\n  left: 10px;\n  background: rgba(255, 255, 255, 0.9);\n  border-radius: 2px;\n  font-size: 20px;\n  max-width: calc(100% - 80px);\n  white-space: nowrap;\n}\n\n.diff-button-hint {\n  position: fixed;\n  bottom: 22px;\n  left: calc(50% - 115px);\n  display: inline-flex;\n  width: 230px;\n}\n\n.diff-button-hint__text {\n  width: 156px;\n  font-weight: 500;\n  text-align: center;\n}\n\n.diff-legend {\n  position: absolute;\n  bottom: 35px;\n  left: 10px;\n  max-width: 140px;\n  background: whitesmoke;\n  user-select: none;\n}\n\n.diff-legend-entry {\n  display: block;\n  margin: 0 10px;\n}\n\n.diff-legend-entry-first {\n  margin-top: 10px;\n  margin-bottom: 2px;\n  font-size: 16px;\n  font-weight: bold;\n}\n\n.diff-legend-entry-last {\n  margin-bottom: 10px;\n}\n\n.diff-change-list {\n  position: relative;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  width: 100%;\n  height: 99%;\n  min-width: calc(44% + 2px);\n  background: white;\n  border-left: 4px dashed #ccc;\n  z-index: 1;\n}\n\n.no-change-message {\n  position: absolute;\n  margin-left: 10px;\n  margin-top: 10px;\n  font-size: 20px;\n  font-weight: bold;\n}\n\n.change-list-table {\n  width: 100%;\n  margin: 10px;\n}\n\n.change-list-table__entry {\n  height: 35px;\n  padding-right: 10px;\n  max-width: 164px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.change-list-table-wrapper {\n  flex: 1;\n  width: 100%;\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n\n.diff-summary {\n  width: 100%;\n  min-height: 18px;\n  text-align: center;\n  border-top: 4px dashed #ccc;\n}\n\n.diff-summary__change-type {\n  display: inline-block;\n  position: relative;\n}\n\n.diff-mode {\n  margin: 0;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  user-select: none;\n}\n\n.badge-red {\n  background-color: #E53935;\n  color: white;\n}\n\n.badge-orange {\n  background-color: #FB8C00;\n  color: white;\n}\n\n.badge-green {\n  background-color: #43A047;\n  color: white;\n}\n\n.badge-purple {\n  background-color: #8E24AA;\n  color: white;\n}\n",null,"/* eslint-disable max-lines */\n/* eslint-disable 6river/new-cap */\n/* eslint-disable no-underscore-dangle */\nimport {EventAggregator, Subscription} from 'aurelia-event-aggregator';\nimport {bindable, bindingMode, inject, observable} from 'aurelia-framework';\n\nimport {IModdleElement, IPropertiesElement, IShape} from '@process-engine/bpmn-elements_contracts';\nimport * as bundle from '@process-engine/bpmn-js-custom-bundle';\nimport * as bpmnlintConfig from '@process-engine/bpmn-lint_rules';\n\nimport {IDiagram} from '@process-engine/solutionexplorer.contracts';\nimport {\n  IBpmnModeler,\n  IBpmnXmlSaveOptions,\n  ICanvas,\n  IDiagramExportService,\n  IDiagramPrintService,\n  IDiagramState,\n  IEditorActions,\n  IElementRegistry,\n  IEvent,\n  IEventFunction,\n  IInternalEvent,\n  IKeyboard,\n  ILinting,\n  ISolutionService,\n  IValidateIssue,\n  IValidateIssueCategory,\n  IValidateResult,\n  IViewbox,\n  NotificationType,\n} from '../../../contracts/index';\nimport environment from '../../../environment';\nimport {NotificationService} from '../../../services/notification-service/notification.service';\nimport {OpenDiagramStateService} from '../../../services/solution-explorer-services/OpenDiagramStateService';\nimport {PropertyPanel} from '../property-panel/property-panel';\nimport {DiagramExportService, DiagramPrintService} from './services/index';\nimport {UserConfigService} from '../../../services/user-config-service/userconfig.service';\n\nconst sideBarRightSize: number = 35;\n\n@inject('NotificationService', EventAggregator, 'OpenDiagramStateService', 'SolutionService', 'UserConfigService')\nexport class BpmnIo {\n  @bindable public propertyPanelViewModel: PropertyPanel;\n  public modeler: IBpmnModeler;\n  public viewer: IBpmnModeler;\n\n  public resizeButton: HTMLButtonElement;\n  public canvasModel: HTMLDivElement;\n  public propertyPanel: HTMLElement;\n  @bindable({changeHandler: 'diagramChanged'}) public diagramUri: string;\n  @bindable({defaultBindingMode: bindingMode.twoWay}) public xml: string;\n  @bindable({changeHandler: 'nameChanged'}) public name: string;\n  @bindable public isDisplayed: boolean;\n  @observable public propertyPanelWidth: number;\n  public showLinter: boolean;\n  public solutionIsRemote: boolean = false;\n  public savedXml: string;\n  public showPropertyPanel: boolean = false;\n  public colorPickerLoaded: boolean = false;\n  public minCanvasWidth: number = 100;\n  public minPropertyPanelWidth: number = 200;\n  public diagramIsInvalid: boolean = false;\n  public diagramHasChanged: boolean = false;\n  public saveStateForNewUri: boolean = false;\n  public linterIsActive: boolean = true;\n\n  private bpmnLintButton: HTMLElement;\n  private linting: ILinting;\n  private diagramConverter: IBpmnModeler;\n\n  private propertyPanelShouldOpen: boolean = false;\n  private propertyPanelHiddenForSpaceReasons: boolean = false;\n  private propertyPanelHasNoSpace: boolean = false;\n\n  private notificationService: NotificationService;\n  private eventAggregator: EventAggregator;\n  private subscriptions: Array<Subscription>;\n  private diagramExportService: IDiagramExportService;\n  private diagramPrintService: IDiagramPrintService;\n  private openDiagramStateService: OpenDiagramStateService;\n  private solutionService: ISolutionService;\n  private userConfigService: UserConfigService;\n\n  constructor(\n    notificationService: NotificationService,\n    eventAggregator: EventAggregator,\n    openDiagramStateService: OpenDiagramStateService,\n    solutionService: ISolutionService,\n    userConfigService: UserConfigService,\n  ) {\n    this.notificationService = notificationService;\n    this.eventAggregator = eventAggregator;\n    this.openDiagramStateService = openDiagramStateService;\n    this.solutionService = solutionService;\n    this.userConfigService = userConfigService;\n  }\n\n  public created(): void {\n    this.modeler = new bundle.modeler({\n      additionalModules: [\n        bundle.MiniMap,\n        bundle.ZoomScrollModule,\n        bundle.MoveCanvasModule,\n        bundle.resizeAllModule,\n        bundle.lintModule,\n      ],\n      linting: {\n        bpmnlint: bpmnlintConfig,\n      },\n      moddleExtensions: {\n        camunda: bundle.camundaModdleDescriptor,\n      },\n      keyboard: {\n        bindTo: document,\n      },\n    });\n\n    this.diagramConverter = new bundle.modeler({\n      moddleExtensions: {\n        camunda: bundle.camundaModdleDescriptor,\n      },\n    });\n\n    this.linting = this.modeler.get('linting');\n\n    /**\n     * Subscribe to the \"elements.paste.rejected\"-event to show a helpful\n     * message to the user.\n     */\n    this.modeler.on('elements.paste.rejected', () => {\n      this.notificationService.showNotification(\n        NotificationType.INFO,\n        'In order to paste an element you have to place your cursor outside of the element.',\n      );\n    });\n\n    this.addRemoveWithBackspaceKeyboardListener();\n\n    /**\n     * Subscribe to \"commandStack.changed\"-event to have a simple indicator of\n     * when a diagram is changed.\n     */\n    const handlerPriority: number = 1000;\n\n    this.modeler.on(\n      'commandStack.changed',\n      async () => {\n        if (!this.solutionIsRemote) {\n          this.eventAggregator.publish(environment.events.diagramChange);\n        }\n\n        this.xml = await this.getXML();\n      },\n      handlerPriority,\n    );\n\n    this.modeler.on('contextPad.create', (event: IInternalEvent) => {\n      if (this.solutionIsRemote) {\n        return;\n      }\n\n      const elementIsNoParticipant: boolean = event.element.type !== 'bpmn:Participant';\n      if (elementIsNoParticipant) {\n        return;\n      }\n\n      setTimeout(() => {\n        const contextPadWrench: Element = document.querySelector('.bpmn-icon-screw-wrench');\n        contextPadWrench.parentNode.removeChild(contextPadWrench);\n      }, 0);\n    });\n\n    this.modeler.on(\n      'import.done',\n      () => {\n        if (!this.diagramHasState(this.diagramUri)) {\n          this.fitDiagramToViewport();\n        }\n\n        if (!this.solutionIsRemote) {\n          this.validateDiagram();\n          this.linting.update();\n        }\n      },\n      1,\n    );\n\n    this.modeler.on('element.paste', (event: IInternalEvent) => {\n      if (!this.solutionIsRemote) {\n        const elementToPasteIsUserTask: boolean = event.descriptor.type === 'bpmn:UserTask';\n        if (elementToPasteIsUserTask) {\n          return this.renameFormFields(event);\n        }\n      }\n\n      return false;\n    });\n\n    this.diagramPrintService = new DiagramPrintService();\n    this.diagramExportService = new DiagramExportService();\n  }\n\n  public async attached(): Promise<void> {\n    this.linterIsActive = this.userConfigService.getUserConfig('design.activate_linter');\n\n    if (this.diagramHasState(this.diagramUri)) {\n      const diagramState: IDiagramState = this.loadDiagramState(this.diagramUri);\n\n      await this.importXmlIntoModeler(diagramState.data.xml);\n    } else {\n      const xmlIsNotEmpty: boolean = this.xml !== undefined && this.xml !== null;\n\n      if (xmlIsNotEmpty) {\n        await this.importXmlIntoModeler(this.xml);\n\n        this.savedXml = await this.convertXml(this.xml);\n      }\n    }\n\n    // Wait until the HTML is rendered\n    setTimeout(() => {\n      this.bpmnLintButton = document.querySelector('.bpmn-js-bpmnlint-button');\n\n      if (this.bpmnLintButton) {\n        this.bpmnLintButton.style.display = 'none';\n      }\n    }, 0);\n\n    if (this.solutionIsRemote) {\n      this.viewer.importXML(this.xml);\n      this.viewer.attachTo(this.canvasModel);\n    } else {\n      this.modeler.attachTo(this.canvasModel);\n\n      this.movePaletteToLeftToolbar();\n    }\n\n    window.addEventListener('resize', this.resizeEventHandler);\n\n    this.resizeButton.addEventListener('mousedown', (e: Event) => {\n      const windowEvent: Event = e || window.event;\n      windowEvent.cancelBubble = true;\n\n      const mousemoveFunction: IEventFunction = (event: MouseEvent): void => {\n        this.resize(event);\n        document.getSelection().empty();\n      };\n\n      const mouseUpFunction: IEventFunction = (): void => {\n        document.removeEventListener('mousemove', mousemoveFunction);\n        document.removeEventListener('mouseup', mouseUpFunction);\n      };\n\n      document.addEventListener('mousemove', mousemoveFunction);\n      document.addEventListener('mouseup', mouseUpFunction);\n    });\n\n    document.addEventListener('keydown', this.printHotkeyEventHandler);\n\n    if (!this.isRunningInElectron) {\n      document.addEventListener('keydown', this.saveHotkeyEventHandler);\n    }\n\n    this.hideOrShowPpForSpaceReasons();\n\n    this.subscriptions = [\n      this.eventAggregator.subscribe(\n        environment.events.solutionExplorerPanel.toggleSolutionExplorer,\n        (showSolutionExplorer: boolean) => {\n          this.setDjsPaletteLeftStyle(showSolutionExplorer);\n\n          this.hideOrShowPpForSpaceReasons();\n        },\n      ),\n\n      this.eventAggregator.subscribe(`${environment.events.diagramDetail.exportDiagramAs}:BPMN`, async () => {\n        try {\n          const exportName: string = `${this.name}.bpmn`;\n          const xmlToExport: string = await this.getXML();\n\n          await this.diagramExportService\n            .loadXML(xmlToExport)\n            .asBpmn()\n            .export(exportName);\n        } catch {\n          this.notificationService.showNotification(\n            NotificationType.ERROR,\n            'An error occurred while preparing the diagram for exporting',\n          );\n        }\n      }),\n\n      this.eventAggregator.subscribe(`${environment.events.diagramDetail.exportDiagramAs}:SVG`, async () => {\n        try {\n          const exportName: string = `${this.name}.svg`;\n          await this.diagramExportService\n            .loadSVG(await this.getSVG())\n            .asSVG()\n            .export(exportName);\n        } catch (error) {\n          this.notificationService.showNotification(\n            NotificationType.ERROR,\n            'An error occurred while preparing the diagram for exporting',\n          );\n        }\n      }),\n\n      this.eventAggregator.subscribe(`${environment.events.diagramDetail.exportDiagramAs}:PNG`, async () => {\n        try {\n          const exportName: string = `${this.name}.png`;\n          await this.diagramExportService\n            .loadSVG(await this.getSVG())\n            .asPNG()\n            .export(exportName);\n        } catch (error) {\n          this.notificationService.showNotification(\n            NotificationType.ERROR,\n            'An error occurred while preparing the diagram for exporting',\n          );\n        }\n      }),\n\n      this.eventAggregator.subscribe(`${environment.events.diagramDetail.exportDiagramAs}:JPEG`, async () => {\n        try {\n          const exportName: string = `${this.name}.jpeg`;\n          await this.diagramExportService\n            .loadSVG(await this.getSVG())\n            .asJPEG()\n            .export(exportName);\n        } catch (error) {\n          this.notificationService.showNotification(\n            NotificationType.ERROR,\n            'An error occurred while preparing the diagram for exporting',\n          );\n        }\n      }),\n\n      this.eventAggregator.subscribe(`${environment.events.diagramDetail.printDiagram}`, async () => {\n        await this.printHandler();\n      }),\n\n      this.eventAggregator.subscribe(environment.events.diagramDetail.saveDiagram, async () => {\n        this.savedXml = await this.getXML();\n      }),\n\n      this.eventAggregator.subscribe(environment.events.diagramChange, async () => {\n        this.xml = await this.getXML();\n\n        const diagramIsChanged: boolean = !this.areXmlsIdentical(this.xml, this.savedXml);\n\n        this.validateDiagram();\n\n        this.eventAggregator.publish(environment.events.differsFromOriginal, diagramIsChanged);\n      }),\n\n      this.eventAggregator.subscribe(environment.events.navBar.validationError, () => {\n        this.diagramIsInvalid = true;\n      }),\n\n      this.eventAggregator.subscribe(environment.events.navBar.noValidationError, () => {\n        this.diagramIsInvalid = false;\n      }),\n\n      this.eventAggregator.subscribe(environment.events.bpmnio.togglePropertyPanel, () => {\n        this.togglePanel();\n      }),\n\n      this.eventAggregator.subscribe(environment.events.bpmnio.bindKeyboard, () => {\n        const keyboard: IKeyboard = this.modeler.get('keyboard');\n\n        const element: Document | any = document;\n        keyboard.bind(element);\n      }),\n\n      this.eventAggregator.subscribe(environment.events.bpmnio.unbindKeyboard, () => {\n        const keyboard: IKeyboard = this.modeler.get('keyboard');\n\n        keyboard.unbind();\n      }),\n    ];\n\n    const previousPropertyPanelWidth: string = window.localStorage.getItem('propertyPanelWidth');\n\n    /*\n     * Update the property panel width;\n     * if no previous width was found, take the configured one.\n     */\n    this.propertyPanelWidth =\n      previousPropertyPanelWidth !== undefined\n        ? parseInt(previousPropertyPanelWidth)\n        : environment.propertyPanel.defaultWidth;\n\n    const propertyPanelHideState: string = window.localStorage.getItem('propertyPanelHideState');\n    const wasPropertyPanelVisible: boolean = propertyPanelHideState === null || propertyPanelHideState === 'show';\n    this.propertyPanelShouldOpen = wasPropertyPanelVisible;\n    this.togglePanel();\n\n    this.updateViewboxStateOnChange();\n  }\n\n  public detached(): void {\n    this.modeler.detach();\n    this.modeler.destroy();\n\n    this.diagramConverter.destroy();\n\n    const viewerIsInitialized: boolean = this.viewer !== undefined;\n    if (viewerIsInitialized) {\n      this.viewer.destroy();\n      this.viewer.detach();\n    }\n\n    window.removeEventListener('resize', this.resizeEventHandler);\n    document.removeEventListener('keydown', this.printHotkeyEventHandler);\n\n    if (!this.isRunningInElectron) {\n      document.removeEventListener('keydown', this.saveHotkeyEventHandler);\n    }\n\n    for (const subscription of this.subscriptions) {\n      subscription.dispose();\n    }\n  }\n\n  public movePaletteToLeftToolbar(): void {\n    const bpmnIoPaletteContainer: Element = this.canvasModel.getElementsByClassName('djs-palette')[0];\n\n    if (bpmnIoPaletteContainer.className.includes('djs-palette-override')) {\n      return;\n    }\n\n    bpmnIoPaletteContainer.className += ' djs-palette-override';\n\n    const showSolutionExplorer: boolean = localStorage.getItem('SolutionExplorerVisibility') !== 'false';\n    this.setDjsPaletteLeftStyle(showSolutionExplorer);\n  }\n\n  public async saveCurrentXML(): Promise<void> {\n    this.savedXml = await this.getXML();\n  }\n\n  public async xmlChanged(newValue: string, oldValue?: string): Promise<void> {\n    if (this.diagramHasChanged) {\n      this.savedXml = await this.convertXml(newValue);\n\n      if (this.solutionIsRemote) {\n        this.viewer.importXML(this.xml);\n      }\n\n      if (this.diagramHasState(this.diagramUri)) {\n        this.recoverDiagramState();\n      } else {\n        this.importXmlIntoModeler(this.xml);\n      }\n\n      const diagramState: IDiagramState = this.loadDiagramState(this.diagramUri);\n      const diagramContainsChanges: boolean = diagramState !== null && diagramState.metadata.isChanged;\n\n      this.eventAggregator.publish(environment.events.differsFromOriginal, diagramContainsChanges);\n    }\n\n    const oldValueExists: boolean = oldValue !== undefined;\n    if (!this.diagramHasChanged && oldValueExists && !this.solutionIsRemote) {\n      this.saveDiagramState(this.diagramUri);\n    }\n\n    this.diagramHasChanged = false;\n  }\n\n  public isDisplayedChanged(): void {\n    if (this.isDisplayed && this.diagramHasState(this.diagramUri)) {\n      this.recoverDiagramState();\n    }\n  }\n\n  public async diagramChanged(newUri: string, previousUri: string): Promise<void> {\n    this.diagramHasChanged = true;\n\n    const previousDiagramExists: boolean = previousUri !== undefined;\n    if (!this.solutionIsRemote && previousDiagramExists) {\n      if (this.saveStateForNewUri) {\n        this.saveStateForNewUri = false;\n\n        const previousDiagramWasNoNewDiagram: boolean = !previousUri.startsWith('about:open-diagrams');\n        if (previousDiagramWasNoNewDiagram) {\n          await this.saveDiagramState(newUri);\n        }\n      } else {\n        const previousDiagramIsNotDeleted: boolean = this.solutionService\n          .getOpenDiagrams()\n          .some((diagram: IDiagram) => diagram.uri === previousUri);\n\n        if (previousDiagramIsNotDeleted) {\n          await this.saveDiagramState(previousUri);\n        }\n      }\n    }\n\n    this.solutionIsRemote = this.diagramUri.startsWith('http');\n    if (this.solutionIsRemote) {\n      const viewerNotInitialized: boolean = this.viewer === undefined;\n      if (viewerNotInitialized) {\n        this.viewer = new bundle.viewer({\n          additionalModules: [bundle.ZoomScrollModule, bundle.MoveCanvasModule, bundle.MiniMap],\n        });\n\n        this.viewer.on('selection.changed', (event: IEvent) => {\n          const nothingIsSelected: boolean = event.newSelection.length === 0;\n          if (nothingIsSelected) {\n            return;\n          }\n\n          const selectedElement: IShape = event.newSelection[0];\n          const elementRegistry: IElementRegistry = this.modeler.get('elementRegistry');\n          const modelerShape: IShape = elementRegistry.get(selectedElement.id);\n\n          this.modeler.get('selection').select(modelerShape);\n        });\n\n        this.viewer.on('import.done', () => {\n          if (!this.diagramHasState(this.diagramUri)) {\n            this.fitDiagramToViewport();\n          }\n        });\n      }\n\n      const xmlExists: boolean = this.xml !== undefined;\n      if (xmlExists) {\n        this.xmlChanged(this.xml);\n        this.propertyPanelViewModel.selectPreviouslySelectedOrFirstElement();\n      }\n\n      setTimeout(() => {\n        this.viewer.attachTo(this.canvasModel);\n\n        const xmlIsNotEmpty: boolean = this.xml !== undefined && this.xml !== null;\n        if (xmlIsNotEmpty) {\n          this.viewer.importXML(this.xml);\n        }\n\n        this.linting.deactivateLinting();\n      }, 0);\n    } else {\n      setTimeout(() => {\n        this.modeler.attachTo(this.canvasModel);\n\n        const xmlExists: boolean = this.xml !== undefined;\n        if (xmlExists) {\n          this.xmlChanged(this.xml);\n          this.propertyPanelViewModel.selectPreviouslySelectedOrFirstElement();\n        }\n\n        this.movePaletteToLeftToolbar();\n        this.bpmnLintButton = document.querySelector('.bpmn-js-bpmnlint-button');\n\n        if (this.bpmnLintButton) {\n          this.bpmnLintButton.style.display = 'none';\n        }\n      }, 0);\n    }\n  }\n\n  public nameChanged(newValue: string): void {\n    if (this.modeler !== undefined && this.modeler !== null) {\n      this.name = newValue;\n    }\n  }\n\n  public propertyPanelWidthChanged(newValue: number): void {\n    if (newValue !== undefined) {\n      window.localStorage.setItem('propertyPanelWidth', `${this.propertyPanelWidth}`);\n    }\n  }\n\n  private diagramHasState(uri: string): boolean {\n    const diagramState: IDiagramState = this.loadDiagramState(uri);\n\n    return diagramState !== null;\n  }\n\n  private loadDiagramState(diagramUri: string): IDiagramState {\n    return this.openDiagramStateService.loadDiagramState(diagramUri);\n  }\n\n  private async recoverDiagramState(): Promise<void> {\n    const diagramState: IDiagramState = this.loadDiagramState(this.diagramUri);\n\n    const diagramHasNoState: boolean = diagramState === null;\n    if (diagramHasNoState) {\n      return;\n    }\n\n    const xml: string = diagramState.data.xml;\n    await this.importXmlIntoModeler(xml);\n\n    const viewbox: IViewbox = diagramState.metadata.location;\n    const viewboxIsSet: boolean = viewbox !== undefined;\n    if (viewboxIsSet) {\n      this.modeler.get('canvas').viewbox(viewbox);\n    } else {\n      this.fitDiagramToViewport();\n    }\n  }\n\n  private async validateDiagram(): Promise<void> {\n    if (!this.linterIsActive) {\n      return;\n    }\n\n    const validationResult: IValidateResult = await this.linting.lint();\n    this.linting.update();\n\n    let validationResultContainsErrors: boolean = false;\n\n    Object.entries(validationResult).forEach(([key, validationIssues]: [string, Array<IValidateIssue>]) => {\n      const issuesContainError: boolean = validationIssues.some((issue: IValidateIssue) => {\n        return issue.category === IValidateIssueCategory.error;\n      });\n\n      if (issuesContainError) {\n        validationResultContainsErrors = true;\n      }\n    });\n\n    this.diagramIsInvalid = validationResultContainsErrors;\n  }\n\n  public togglePanel(): void {\n    if (this.propertyPanelShouldOpen) {\n      if (this.propertyPanelHasNoSpace) {\n        this.notificationService.showNotification(\n          NotificationType.ERROR,\n          'There is not enough space for the property panel!',\n        );\n        return;\n      }\n\n      document.getElementById('toggleButtonPropertyPanel').classList.add('design-layout__tool--active');\n      this.showPropertyPanel = true;\n      this.eventAggregator.publish(environment.events.bpmnio.propertyPanelActive, true);\n      this.propertyPanelShouldOpen = false;\n      window.localStorage.setItem('propertyPanelHideState', 'show');\n    } else {\n      document.getElementById('toggleButtonPropertyPanel').classList.remove('design-layout__tool--active');\n      this.showPropertyPanel = false;\n      this.eventAggregator.publish(environment.events.bpmnio.propertyPanelActive, false);\n      this.propertyPanelShouldOpen = true;\n      window.localStorage.setItem('propertyPanelHideState', 'hide');\n    }\n  }\n\n  public resize(event: MouseEvent): void {\n    const mousePosition: number = event.clientX;\n\n    this.setNewPropertyPanelWidthFromMousePosition(mousePosition);\n  }\n\n  public async getXML(): Promise<string> {\n    const returnPromise: Promise<string> = new Promise((resolve: Function, reject: Function): void => {\n      const xmlSaveOptions: IBpmnXmlSaveOptions = {\n        format: true,\n      };\n\n      this.modeler.saveXML(xmlSaveOptions, (error: Error, result: string) => {\n        if (error) {\n          reject(error);\n\n          return;\n        }\n\n        resolve(result);\n      });\n    });\n\n    return returnPromise;\n  }\n\n  public toggleLinter(): void {\n    this.showLinter = !this.showLinter;\n    this.bpmnLintButton = document.querySelector('.bpmn-js-bpmnlint-button');\n\n    if (this.showLinter) {\n      this.bpmnLintButton.style.display = 'block';\n\n      this.linting.activateLinting();\n    } else {\n      this.bpmnLintButton.style.display = 'none';\n\n      this.linting.deactivateLinting();\n    }\n  }\n\n  public async saveDiagramState(diagramUri: string): Promise<void> {\n    const savedXml: string = this.savedXml;\n    const modelerCanvas: ICanvas = this.modeler.get('canvas');\n\n    const isUnsavedDiagram: boolean = diagramUri.startsWith('about:open-diagrams');\n    const currentViewbox: IViewbox = modelerCanvas.viewbox();\n    const diagramIsVisible: boolean = currentViewbox.width > 0 && currentViewbox.height > 0;\n\n    const xml: string = await this.getXML();\n    const viewbox: IViewbox = diagramIsVisible ? currentViewbox : undefined;\n    const selectedElements: Array<IShape> = this.modeler.get('selection')._selectedElements;\n    const isChanged: boolean = isUnsavedDiagram || !this.areXmlsIdentical(xml, savedXml);\n\n    const diagramState: IDiagramState | null = this.openDiagramStateService.loadDiagramState(diagramUri);\n    const diagramStateExists: boolean = diagramState !== null;\n    if (diagramStateExists) {\n      diagramState.data.xml = xml;\n      diagramState.metadata.selectedElements = selectedElements;\n      diagramState.metadata.isChanged = isChanged;\n\n      if (viewbox) {\n        diagramState.metadata.location = viewbox;\n      }\n\n      this.openDiagramStateService.updateDiagramState(diagramUri, diagramState);\n    } else {\n      this.openDiagramStateService.saveDiagramState(diagramUri, xml, viewbox, selectedElements, isChanged);\n    }\n  }\n\n  private get isRunningInElectron(): boolean {\n    const isRunningInElectron: boolean = Boolean((window as any).nodeRequire);\n\n    return isRunningInElectron;\n  }\n\n  private updateViewboxStateOnChange(): void {\n    this.modeler.on('canvas.viewbox.changed', () => {\n      this.updateViewboxState();\n    });\n  }\n\n  private updateViewboxState(): void {\n    const modelerCanvas: ICanvas = this.modeler.get('canvas');\n    const viewbox: IViewbox = modelerCanvas.viewbox();\n\n    const diagramState: IDiagramState | null = this.openDiagramStateService.loadDiagramState(this.diagramUri);\n\n    const diagramHasNoState: boolean = !this.diagramHasState(this.diagramUri);\n    const diagramIsVisible: boolean = viewbox.width > 0 && viewbox.height > 0;\n    if (!diagramIsVisible || diagramHasNoState) {\n      return;\n    }\n\n    diagramState.metadata.location = viewbox;\n\n    this.openDiagramStateService.updateDiagramState(this.diagramUri, diagramState);\n  }\n\n  private areXmlsIdentical(firstXml: string, secondXml: string): boolean {\n    /*\n     * This Regex removes all newlines and spaces to make sure that both xml\n     * are not formatted.\n     */\n    const whitespaceAndNewLineRegex: RegExp = /\\r?\\n|\\r|\\s/g;\n\n    const unformattedXml: string = firstXml.replace(whitespaceAndNewLineRegex, '');\n    const unformattedSaveXml: string = secondXml.replace(whitespaceAndNewLineRegex, '');\n\n    return unformattedSaveXml === unformattedXml;\n  }\n\n  private importXmlIntoModeler(xml: string): Promise<void> {\n    return new Promise((resolve: Function, reject: Function): void => {\n      this.modeler.importXML(xml, (error: Error) => {\n        const errorOccured: boolean = error !== undefined;\n        if (errorOccured) {\n          reject();\n\n          return;\n        }\n\n        resolve();\n      });\n    });\n  }\n\n  private convertXml(xml: string): Promise<string> {\n    return new Promise((resolve: Function, reject: Function): void => {\n      this.diagramConverter.importXML(xml, (importError: Error) => {\n        const importErrorOccured: boolean = importError !== undefined;\n        if (importErrorOccured) {\n          reject(importError);\n\n          return;\n        }\n\n        this.diagramConverter.saveXML({format: true}, (exportError: Error, convertedXml: string) => {\n          const exportErrorOccured: boolean = exportError !== undefined;\n          if (exportErrorOccured) {\n            reject(exportError);\n\n            return;\n          }\n\n          resolve(convertedXml);\n        });\n      });\n    });\n  }\n\n  private fitDiagramToViewport(): void {\n    const modelerCanvas: ICanvas = this.modeler.get('canvas');\n    const modelerViewbox: IViewbox = modelerCanvas.viewbox();\n    const modelerDiagramIsVisible: boolean = modelerViewbox.height > 0 && modelerViewbox.width > 0;\n\n    if (this.solutionIsRemote) {\n      const viewerCanvas: ICanvas = this.viewer.get('canvas');\n      const viewerViewbox: IViewbox = viewerCanvas.viewbox();\n      const viewerDiagramIsVisible: boolean = viewerViewbox.height > 0 && viewerViewbox.width > 0;\n\n      if (viewerDiagramIsVisible) {\n        viewerCanvas.zoom('fit-viewport', 'auto');\n      }\n    } else if (modelerDiagramIsVisible) {\n      modelerCanvas.zoom('fit-viewport', 'auto');\n    }\n  }\n\n  private renameFormFields(event: IInternalEvent): IInternalEvent {\n    const allFields: Array<IPropertiesElement> = event.descriptor.businessObject.extensionElements.values;\n\n    const formDataObject: IPropertiesElement = allFields.find((field: IModdleElement) => {\n      return field.$type === 'camunda:FormData';\n    });\n\n    const noFieldsSpecified: boolean = formDataObject.fields === undefined || formDataObject.fields === null;\n    if (noFieldsSpecified) {\n      return undefined;\n    }\n\n    formDataObject.fields.forEach((formField: IModdleElement) => {\n      formField.id = `Form_${this.generateRandomId()}`;\n    });\n\n    return event;\n  }\n\n  private generateRandomId(): string {\n    let randomId: string = '';\n    const possible: string = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    const randomIdLength: number = 8;\n    for (let i: number = 0; i < randomIdLength; i++) {\n      randomId += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n\n    return randomId;\n  }\n\n  private setNewPropertyPanelWidthFromMousePosition(mousePosition: number): void {\n    const propertyPanelMaxWidth: number = this.propertyPanel.parentElement.offsetWidth - this.minCanvasWidth;\n    const mousePositionFromRight: number = document.body.clientWidth - mousePosition;\n    const resizedWidth: number = mousePositionFromRight - sideBarRightSize;\n\n    /*\n     * This is needed to stop the width from increasing too far\n     * the property panel would not be displayed with that width,\n     * but when increasing the browser width, the property panel\n     * then may also increase.\n     */\n    const newPropertyPanelWidth: number = Math.min(resizedWidth, propertyPanelMaxWidth);\n\n    this.propertyPanelWidth = newPropertyPanelWidth;\n  }\n\n  private hidePropertyPanelForSpaceReasons(): void {\n    this.propertyPanelHasNoSpace = true;\n    const propertyPanelIsOpen: boolean = !this.propertyPanelShouldOpen;\n\n    if (propertyPanelIsOpen) {\n      this.propertyPanelHiddenForSpaceReasons = true;\n      this.togglePanel();\n    }\n  }\n\n  private showPropertyPanelForSpaceReasons(): void {\n    this.propertyPanelHasNoSpace = false;\n    this.propertyPanelHiddenForSpaceReasons = false;\n\n    this.propertyPanelShouldOpen = true;\n    this.togglePanel();\n  }\n\n  private resizeEventHandler = (event: MouseEvent): void => {\n    this.hideOrShowPpForSpaceReasons();\n\n    const mousePosition: number = event.clientX;\n\n    this.setNewPropertyPanelWidthFromMousePosition(mousePosition);\n  };\n\n  private hideOrShowPpForSpaceReasons(): void {\n    const minModelerWidthForPropertyPanel: number = this.minCanvasWidth + this.minPropertyPanelWidth;\n    const modelerWidth: number = this.propertyPanel.parentElement.offsetWidth;\n\n    if (modelerWidth === 0) {\n      return;\n    }\n\n    this.propertyPanelHasNoSpace = modelerWidth < minModelerWidthForPropertyPanel;\n    if (this.propertyPanelHasNoSpace) {\n      this.hidePropertyPanelForSpaceReasons();\n    } else if (this.propertyPanelHiddenForSpaceReasons) {\n      this.showPropertyPanelForSpaceReasons();\n    }\n  }\n\n  private setDjsPaletteLeftStyle(solutionExplorerIsActive: boolean): void {\n    const bpmnIoPaletteContainer: HTMLElement = this.canvasModel.getElementsByClassName(\n      'djs-palette',\n    )[0] as HTMLElement;\n    const djsPaletteLeft: number = solutionExplorerIsActive ? 250 : 0;\n\n    bpmnIoPaletteContainer.style.left = `${djsPaletteLeft}px`;\n  }\n\n  /**\n   * Handles an incoming printDiagram message.\n   */\n  private async printHandler(): Promise<void> {\n    try {\n      const svgToPrint: string = await this.getSVG();\n      this.diagramPrintService.printDiagram(svgToPrint);\n    } catch (error) {\n      this.notificationService.showNotification(\n        NotificationType.ERROR,\n        'An error while trying to print the diagram occurred.',\n      );\n    }\n  }\n\n  /**\n   * Handles a key down event and saves the diagram, if the user presses a CRTL + s key combination.\n   *\n   * If using macOS, this combination will be CMD + s.\n   *\n   * Saving is triggered by emitting @see environment.events.diagramDetail.saveDiagram\n   *\n   * @param event Passed key event.\n   * @return void\n   */\n  private saveHotkeyEventHandler = (event: KeyboardEvent): void => {\n    // On macOS the 'common control key' is the meta instead of the control key. So on a mac we need to find\n    // out, if the meta key instead of the control key is pressed.\n    const currentPlatformIsMac: boolean = this.checkIfCurrentPlatformIsMac();\n    const metaKeyIsPressed: boolean = currentPlatformIsMac ? event.metaKey : event.ctrlKey;\n    const shiftKeyIsPressed: boolean = event.shiftKey;\n\n    /*\n     * If both keys (meta and s) are pressed, save the diagram.\n     * A diagram is saved, by throwing a saveDiagram event.\n     *\n     * @see environment.events.diagramDetail.saveDiagram\n     */\n    const sKeyIsPressed: boolean = event.key === 's';\n    const userWantsToSave: boolean = metaKeyIsPressed && sKeyIsPressed && !shiftKeyIsPressed;\n    const userWantsToSaveAs: boolean = metaKeyIsPressed && sKeyIsPressed && shiftKeyIsPressed;\n\n    if (userWantsToSave) {\n      event.preventDefault();\n\n      this.eventAggregator.publish(environment.events.diagramDetail.saveDiagram);\n      return;\n    }\n\n    if (userWantsToSaveAs) {\n      event.preventDefault();\n      this.eventAggregator.publish(environment.events.diagramDetail.saveDiagramAs);\n    }\n  };\n\n  /**\n   * On macOS it is typically to remove elements with the backspace instead\n   * of the delete key. This Method binds the removal of a selected\n   * element to the backspace key, if the current platform is macOS.\n   */\n  private addRemoveWithBackspaceKeyboardListener(): void {\n    const currentPlatformIsNotMac: boolean = !this.checkIfCurrentPlatformIsMac();\n\n    if (currentPlatformIsNotMac) {\n      return;\n    }\n\n    const keyboard: IKeyboard = this.modeler.get('keyboard');\n    const editorActions: IEditorActions = this.modeler.get('editorActions');\n    const backSpaceKeyCode: number = 8;\n\n    const removeSelectedElements = (key: IInternalEvent, modifiers: KeyboardEvent): boolean => {\n      const backspaceWasPressed: boolean = key.keyEvent.keyCode === backSpaceKeyCode;\n\n      if (backspaceWasPressed) {\n        editorActions.trigger('removeSelection');\n\n        return true;\n      }\n\n      return false;\n    };\n\n    keyboard.addListener(removeSelectedElements);\n  }\n\n  /**\n   * Handles a key down event and prints the diagram, when the user presses CRTL + p.\n   *\n   * If using macOS, this combination will be CMD + p.\n   *\n   * Printing is triggered by emitting @see environment.events.diagramDetail.printDiagram\n   *\n   * @param event Passed key event.\n   * @return void\n   */\n  private printHotkeyEventHandler = (event: KeyboardEvent): void => {\n    // On macOS the 'common control key' is the meta instead of the control key. So on a mac we need to find\n    // out, if the meta key instead of the control key is pressed.\n    const currentPlatformIsMac: boolean = this.checkIfCurrentPlatformIsMac();\n    const metaKeyIsPressed: boolean = currentPlatformIsMac ? event.metaKey : event.ctrlKey;\n\n    /*\n     * If both keys (meta and p) are pressed, print the diagram.\n     * A diagram is printed, by throwing a printDiagram event.\n     *\n     * @see environment.events.diagramDetail.printDiagram\n     */\n    const pKeyIsPressed: boolean = event.key === 'p';\n    const userWantsToPrint: boolean = metaKeyIsPressed && pKeyIsPressed;\n\n    if (userWantsToPrint) {\n      // Prevent the browser from handling the default action for CMD/CTRL + p.\n      event.preventDefault();\n\n      // TODO: Handle the promise properly\n      this.getSVG().then((svg: string): void => {\n        this.diagramPrintService.printDiagram(svg);\n      });\n    }\n  };\n\n  /**\n   * Checks, if the current platform is a macOS.\n   *\n   * @returns true, if the current platform is macOS\n   */\n  private checkIfCurrentPlatformIsMac = (): boolean => {\n    const macRegex: RegExp = /.*mac*./i;\n    const currentPlatform: string = navigator.platform;\n    const currentPlatformIsMac: boolean = macRegex.test(currentPlatform);\n\n    return currentPlatformIsMac;\n  };\n\n  private async getSVG(): Promise<string> {\n    const returnPromise: Promise<string> = new Promise((resolve: Function, reject: Function): void => {\n      if (this.solutionIsRemote) {\n        this.viewer.saveSVG({}, (error: Error, result: string) => {\n          if (error) {\n            reject(error);\n          }\n\n          resolve(result);\n        });\n      } else {\n        this.modeler.saveSVG({}, (error: Error, result: string) => {\n          if (error) {\n            reject(error);\n          }\n\n          resolve(result);\n        });\n      }\n    });\n\n    return returnPromise;\n  }\n}\n",".modeler {\n  display: flex;\n  flex: 1;\n  height: 100%;\n}\n\n.modeler__diagram {\n  flex: 1;\n}\n\n.modeler__properties {\n  position: relative;\n  display: flex;\n  width: 250px;\n  height: 100%;\n  flex-direction: column;\n  overflow-y: scroll;\n  background: rgb(220, 219, 219);\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n}\n\n.canvasModel {\n  height: 100%;\n}\n\n.modeler .label {\n  color: black;\n}\n\n.resize-div {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: -3px;\n  width: 6px;\n}\n\n.resize-div:hover {\n  cursor: col-resize;\n}\n\n/*\n * TOOLS\n *\n*/\n\n.tool__right {\n  display: block;\n  padding: 2px;\n  text-align: center;\n}\n\n.tool--deactivated {\n  display: block;\n  padding: 2px;\n  opacity: 0.2;\n  color: #5e5e5e;\n  text-align: center;\n}\n\n/*\n * WINDOW\n *\n*/\n\n.bpmn-io-layout {\n  display: flex;\n  flex: 1;\n  background: white;\n  flex-direction: row;\n  align-items: stretch;\n}\n\n.bpmn-io-layout__tools-left {\n  width: 36px;\n  min-width: 36px;\n  overflow-y: auto;\n  overflow-x: hidden;\n  border-right: 2px solid #dcdbdb;\n  -ms-overflow-style: none;\n}\n\n.bpmn-io-layout__tools-left::-webkit-scrollbar {\n  display: none;\n}\n\n.bpmn-io-layout__tools-right {\n  border-left: 2px solid #dcdbdb;\n}\n\n.bpmn-io-layout__tools-left,\n.bpmn-io-layout__tools-right {\n  width: 36px;\n  background-color: #f7f7f7;\n}\n\n.panel {\n  background-color: #f7f7f7;\n  border-left: 1px solid #eee;\n  border-right: 1px solid #eee;\n}\n\n.panel:last-child {\n  margin-bottom: 2px;\n  border-bottom: none;\n}\n\n.bpmn-io-layout__main {\n  display: flex;\n  flex: 1 100%;\n}\n\n/*\n * MENUES\n *\n*/\n\n.menu-bar__menu-left--tool {\n  background-color: inherit;\n  border: none;\n}\n\n.djs-palette-override {\n  position: fixed !important;\n  top: 70px !important;\n  width: 36px !important;\n  background: transparent !important;\n  border: none !important;\n\n  .entry,\n  .djs-palette-toggle {\n    width: 32px;\n    height: 32px;\n    margin-left: 1px;\n    cursor: default;\n    font-size: 20px;\n    line-height: 24px;\n  }\n\n  .entry {\n    /*\n     * This is used instead of the global button class because the\n     * button class does not use '!important' which is needed in this case\n     * to override the existing properties, given by bpmn.io.\n     */\n    color: #333 !important;\n    opacity: 0.5 !important;\n  }\n\n  .highlighted-entry,\n  .entry:hover {\n    color: #333 !important;\n    opacity: 1 !important;\n  }\n\n  .djs-palette-toggle {\n    display: none !important;\n  }\n\n  .djs-palette-entries .separator {\n    margin: 5px 0;\n    padding: 0;\n  }\n}\n\n/*\n * Color Picker\n*/\n\n.red {\n  color: #e53935;\n}\n\n.blue {\n  color: #1e88e5;\n}\n\n.orange {\n  color: #fb8c00;\n}\n\n.green {\n  color: #43a047;\n}\n\n.purple {\n  color: #8e24aa;\n}\n\n.none {\n  color: transparent;\n}\n\n/*\n * !important is needed to override the default\n * styling of the used color-picker component.\n */\n.colorpicker-container {\n  background: white !important;\n  border: solid 1px #ccc !important;\n}\n\n.bpmn-js-bpmnlint-button {\n  // Overwriting existing style of the plugin\n  top: unset;\n\n  bottom: 20px;\n  left: 55px;\n  height: 30px;\n  cursor: default;\n  pointer-events: none;\n}\n\n.linter-toggle {\n  position: relative;\n  display: inline-block;\n  bottom: 50px;\n  left: 15px;\n}\n\n.linter-toggle__button {\n  width: 31px;\n  height: 31px;\n  padding: 0;\n  border: solid 1px #ccc;\n  border-radius: 2px;\n\n  background-color: rgba(255, 255, 255, 0.9);\n\n  &:hover {\n    background-color: #f7f7f7;\n  }\n}\n\n.linter-toggle__button--invalid-diagram {\n  background-color: rgba(204, 51, 0, 0.95);\n  color: white;\n\n  &:hover {\n    background-color: rgb(230, 77, 26);\n    color: white;\n  }\n}\n\n.bpmn-js-bpmnlint-process-issues {\n  //Overwriting the existing style of the plugin\n  top: unset;\n  right: unset;\n\n  bottom: 20px;\n  left: 240px;\n}\n\n/*\n * This fixes the style of the bpmnlint icons.\n * Child combinators are used because these icons do not have a class.\n */\n.bpmn-js-bpmnlint-issues > .icons > .icon {\n  z-index: -1;\n}\n\n.bpmn-js-bpmnlint-issues > .icons > .icon > svg {\n  margin-top: -3px;\n}\n\n.bpmn-js-bpmnlint-button > svg {\n  margin-top: -4px;\n}\n.bpmn-js-bpmnlint-issues > .group > .header {\n  padding: 2px;\n}\n\n.bpmn-js-bpmnlint-issues > .group > .header > svg {\n  margin-top: -3px;\n  margin-left: 2px;\n  margin-bottom: 0px;\n}\n",null,"import download from 'downloadjs';\nimport {IDiagramExportRepositoryContracts} from '../../../../contracts/exportRepository';\n\nexport class DiagramExportRepository implements IDiagramExportRepositoryContracts {\n  public exportDiagram(fileContent: string, outputName: string, mimeType: string): void {\n    download(fileContent, outputName, mimeType);\n  }\n}\n","import {IDiagramExportService, ISvgConvertService, IXmlConvertService} from '../../../../contracts/index';\nimport {DiagramSvgConverter} from './diagram.svg.converter';\nimport {DiagramXmlConverter} from './diagram.xml.converter';\n\nexport class DiagramExportService implements IDiagramExportService {\n  public loadXML(xml: string): IXmlConvertService {\n    return new DiagramXmlConverter(xml);\n  }\n\n  public loadSVG(svg: string): ISvgConvertService {\n    return new DiagramSvgConverter(svg);\n  }\n}\n","import * as print from 'print-js';\nimport {IDiagramPrintService} from '../../../../contracts';\n\nexport class DiagramPrintService implements IDiagramPrintService {\n  private svg: string;\n\n  constructor(svg?: string) {\n    this.svg = svg;\n  }\n\n  /**\n   * Prepares the current diagram for printing and opens the system's print\n   * dialogue.\n   *\n   * @param [svg] SVG content that should be printed\n   * @throws Error if no source SVG was defined.\n   */\n  public async printDiagram(svg?: string): Promise<void> {\n    let svgToPrint: string;\n\n    if (svg !== undefined) {\n      svgToPrint = svg;\n    } else if (this.svg !== undefined && this.svg !== null) {\n      svgToPrint = this.svg;\n    } else {\n      // eslint-disable-next-line prefer-promise-reject-errors\n      return Promise.reject('No SVG for printing defined');\n    }\n\n    const png: string = await this.generateImageFromSVG('png', svgToPrint);\n\n    const printOptions: {printable: string; type?: string} = {\n      printable: png,\n      type: 'image',\n    };\n\n    print.default(printOptions);\n    return Promise.resolve();\n  }\n\n  public updateSVG(newSVG: string): void {\n    this.svg = newSVG;\n  }\n\n  /**\n   * Converts the given xml into an image. The returning value is a DataURL that\n   * points to the created image.\n   *\n   * @param desiredImageType Output type of the image.\n   * @param svg SVG that should be converted into an image with the desired format.\n   * @returns A DataURL that points to the created image.\n   */\n  private async generateImageFromSVG(desiredImageType: string, svg: string): Promise<string> {\n    const encoding: string = `image/${desiredImageType}`;\n    const canvas: HTMLCanvasElement = document.createElement('canvas');\n    const context: CanvasRenderingContext2D = canvas.getContext('2d');\n\n    // eslint-disable-next-line no-useless-escape\n    const svgWidth: number = parseInt(svg.match(/<svg[^>]*width\\s*=\\s*\\\"?(\\d+)\\\"?[^>]*>/)[1]);\n    // eslint-disable-next-line no-useless-escape\n    const svgHeight: number = parseInt(svg.match(/<svg[^>]*height\\s*=\\s*\\\"?(\\d+)\\\"?[^>]*>/)[1]);\n\n    // For a print, we use 300 dpi\n    const targetDPI: number = 300;\n\n    /*\n     * TODO: Figure out, how to obtain the desired format of the print before\n     * printing. In the current implementation, I assume that we print to a\n     * DIN A4 Paper, which has a diagonal size of 14.17 inches.\n     */\n    const dinA4DiagonalSizeInch: number = 14.17;\n    const pixelRatio: number = this.calculatePixelRatioForDPI(svgWidth, svgHeight, targetDPI, dinA4DiagonalSizeInch);\n\n    canvas.width = svgWidth * pixelRatio;\n    canvas.height = svgHeight * pixelRatio;\n\n    // Make the background white for every format\n    context.fillStyle = 'white';\n    context.fillRect(0, 0, canvas.width, canvas.height);\n\n    // Draw the image to the canvas\n    const imageDataURL: string = await this.drawSVGToCanvas(svg, canvas, context, encoding);\n\n    return imageDataURL;\n  }\n\n  /**\n   * Calculate the pixel ratio for the given DPI.\n   * The Pixel Ratio is the factor which is needed, to extend the\n   * width and height of a canvas to match a rendered resolution\n   * with the targeting DPI.\n   *\n   * @param svgWidth With of the diagrams canvas element.\n   * @param svgHeight Height of the diagrams canvas element.\n   * @param targetDPI DPI of the output.\n   * @param diagonalSize Diagonal Size of the printed document.\n   */\n  private calculatePixelRatioForDPI(\n    svgWidth: number,\n    svgHeight: number,\n    targetDPI: number,\n    diagonalSize: number,\n  ): number {\n    const svgWidthSquared: number = svgWidth ** 2;\n    const svgHeightSquared: number = svgHeight ** 2;\n\n    const diagonalResolution: number = Math.sqrt(svgWidthSquared + svgHeightSquared);\n\n    const originalDPI: number = diagonalResolution / diagonalSize;\n    const pixelRatio: number = targetDPI / originalDPI;\n\n    return pixelRatio;\n  }\n\n  /**\n   * Draws a given SVG image to a Canvas and converts it to an image.\n   *\n   * @param svgContent SVG Content that should be drawn to the image.\n   * @param canvas Canvas, in which the SVG image should be drawn.\n   * @param context Context of the Canvas.\n   * @param encoding Encoding of the output image.\n   * @returns The URL which points to the rendered image.\n   */\n  private async drawSVGToCanvas(\n    svgContent: string,\n    canvas: HTMLCanvasElement,\n    context: CanvasRenderingContext2D,\n    encoding: string,\n  ): Promise<string> {\n    const imageElement: HTMLImageElement = document.createElement('img');\n\n    /*\n     * This makes sure, that the base64 encoded SVG does not contain any\n     * escaped html characters (such as &lt; instead of <).\n     *\n     * TODO: The unescape Method is marked as deprecated.\n     * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/unescape\n     *\n     * The problem is, that the replacement method decodeURI does not work in this case\n     * (it behaves kinda different in some situations).\n     * Event the MDN use the unescape method to solve this kind of problem:\n     * https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/btoa#Unicode_strings\n     *\n     * There is an npm packet that implements the original unescape function.\n     * Maybe we can use this to make sure that this won't cause any\n     * problems in the future.\n     */\n    const encodedSVG: string = btoa(unescape(encodeURIComponent(svgContent)));\n    imageElement.setAttribute('src', `data:image/svg+xml;base64, ${encodedSVG}`);\n\n    const loadImagePromise: Promise<string> = new Promise((resolve: Function, reject: Function): void => {\n      imageElement.onload = (): void => {\n        context.drawImage(imageElement, 0, 0, canvas.width, canvas.height);\n        const encodedImageURL: string = canvas.toDataURL(encoding);\n        resolve(encodedImageURL);\n      };\n\n      imageElement.onerror = (errorEvent: ErrorEvent): void => {\n        reject(errorEvent);\n      };\n    });\n\n    return loadImagePromise;\n  }\n}\n","import {IExportService, ISvgConvertService} from '../../../../contracts/index';\nimport {ExportService} from './export.service';\n\nexport class DiagramSvgConverter implements ISvgConvertService {\n  private enqueuedPromises: Array<Promise<string>> = [];\n  private svgContent: string;\n\n  constructor(svgContent: string) {\n    this.svgContent = svgContent;\n  }\n\n  public asPNG(): IExportService {\n    const pngExporterPromise: Promise<string> = this.pngExporter();\n    const mimeType: string = 'image/png';\n\n    this.enqueuedPromises.push(pngExporterPromise);\n\n    return new ExportService(mimeType, this.enqueuedPromises);\n  }\n\n  public asJPEG(): IExportService {\n    const jpegExporterPromise: Promise<string> = this.jpegExporter();\n    const mimeType: string = 'image/jpeg';\n\n    this.enqueuedPromises.push(jpegExporterPromise);\n\n    return new ExportService(mimeType, this.enqueuedPromises);\n  }\n\n  public asSVG(): IExportService {\n    const mimeType: string = 'image/svg+xml';\n    const svgExporterPromise: Promise<string> = new Promise((resolve: Function): void => {\n      resolve(this.svgContent);\n    });\n\n    this.enqueuedPromises.push(svgExporterPromise);\n\n    return new ExportService(mimeType, this.enqueuedPromises);\n  }\n\n  /**\n   * Exports the current diagram as a PNG image.\n   */\n  private pngExporter = async (): Promise<string> => {\n    return this.generateImageFromSVG('png', this.svgContent);\n  };\n\n  /**\n   * Exports the current diagram as a jpeg image.\n   */\n  private jpegExporter = async (): Promise<string> => {\n    return this.generateImageFromSVG('jpeg', this.svgContent);\n  };\n\n  /**\n   * Converts the given xml into an image. The returning value is a DataURL that\n   * points to the created image.\n   *\n   * @param desiredImageType Output type of the image.\n   * @param svg SVG that should be converted into an image with the desired format.\n   * @returns A DataURL that points to the created image.\n   */\n  private async generateImageFromSVG(desiredImageType: string, svg: string): Promise<string> {\n    const encoding: string = `image/${desiredImageType}`;\n    const canvas: HTMLCanvasElement = document.createElement('canvas');\n    const context: CanvasRenderingContext2D = canvas.getContext('2d');\n\n    // eslint-disable-next-line no-useless-escape\n    const svgWidth: number = parseInt(svg.match(/<svg[^>]*width\\s*=\\s*\\\"?(\\d+)\\\"?[^>]*>/)[1]);\n    // eslint-disable-next-line no-useless-escape\n    const svgHeight: number = parseInt(svg.match(/<svg[^>]*height\\s*=\\s*\\\"?(\\d+)\\\"?[^>]*>/)[1]);\n\n    // For a print, we use 300 dpi\n    const targetDPI: number = 300;\n\n    /*\n     * TODO: Figure out, how to obtain the desired format of the print before\n     * printing. In the current implementation, I assume that we print to a\n     * DIN A4 Paper, which has a diagonal size of 14.17 inches.\n     */\n    const dinA4DiagonalSizeInch: number = 14.17;\n    const pixelRatio: number = this.calculatePixelRatioForDPI(svgWidth, svgHeight, targetDPI, dinA4DiagonalSizeInch);\n\n    canvas.width = svgWidth * pixelRatio;\n    canvas.height = svgHeight * pixelRatio;\n\n    // Make the background white for every format\n    context.fillStyle = 'white';\n    context.fillRect(0, 0, canvas.width, canvas.height);\n\n    // Draw the image to the canvas\n    const imageDataURL: string = await this.drawSVGToCanvas(svg, canvas, context, encoding);\n\n    return imageDataURL;\n  }\n\n  /**\n   * Calculate the pixel ratio for the given DPI.\n   * The Pixel Ratio is the factor which is needed, to extend the\n   * the width and height of a canvas to match a rendered resolution\n   * with the targeting DPI.\n   *\n   * @param svgWidth With of the diagrams canvas element.\n   * @param svgHeight Height of the diagrams canvas element.\n   * @param targetDPI DPI of the output.\n   * @param diagonalSize Diagonal Size of the printed document.\n   * @returns The needed pixel ratio for the current dimensions to achieve the\n   * desired DPI.\n   */\n  private calculatePixelRatioForDPI(\n    svgWidth: number,\n    svgHeight: number,\n    targetDPI: number,\n    diagonalSize: number,\n  ): number {\n    const square: Function = (num: number): number => num * num;\n\n    const svgWidthSquared: number = square(svgWidth);\n    const svgHeightSquared: number = square(svgHeight);\n\n    const diagonalResolution: number = Math.sqrt(svgWidthSquared + svgHeightSquared);\n\n    const originalDPI: number = diagonalResolution / diagonalSize;\n    const pixelRatio: number = targetDPI / originalDPI;\n\n    return pixelRatio;\n  }\n\n  /**\n   * Draws a given SVG image to a Canvas and converts it to an image.\n   *\n   * @param svgContent SVG Content that should be drawn to the image.\n   * @param canvas Canvas, in which the SVG image should be drawn.\n   * @param context Context of the Canvas.\n   * @param encoding Encoding of the output image.\n   * @returns The URL which points to the rendered image.\n   */\n  private async drawSVGToCanvas(\n    svgContent: string,\n    canvas: HTMLCanvasElement,\n    context: CanvasRenderingContext2D,\n    encoding: string,\n  ): Promise<string> {\n    const imageElement: HTMLImageElement = document.createElement('img');\n\n    /*\n     * This makes sure, that the base64 encoded SVG does not contain any\n     * escaped html characters (such as &lt; instead of <).\n     *\n     * TODO: The unescape Method is marked as deprecated.\n     * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/unescape\n     *\n     * The problem is, that the replacement method decodeURI does not work in this case\n     * (it behaves kinda different in some situations).\n     * Event the MDN use the unescape method to solve this kind of problem:\n     * https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/btoa#Unicode_strings\n     *\n     * There is an npm packet that implements the original unescape function.\n     * Maybe we can use this to make sure that this won't cause any\n     * problems in the future.\n     */\n    const encodedSVG: string = btoa(unescape(encodeURIComponent(svgContent)));\n    imageElement.setAttribute('src', `data:image/svg+xml;base64, ${encodedSVG}`);\n\n    const loadImagePromise: Promise<string> = new Promise((resolve: Function, reject: Function): void => {\n      imageElement.onload = (): void => {\n        context.drawImage(imageElement, 0, 0, canvas.width, canvas.height);\n        const encodedImageURL: string = canvas.toDataURL(encoding);\n        resolve(encodedImageURL);\n      };\n\n      imageElement.onerror = (errorEvent: ErrorEvent): void => {\n        reject(errorEvent);\n      };\n    });\n\n    return loadImagePromise;\n  }\n}\n","import {IExportService, IXmlConvertService} from '../../../../contracts/index';\n\nimport {ExportService} from './export.service';\n\nexport class DiagramXmlConverter implements IXmlConvertService {\n  private xmlContent: string;\n  private enqueuedPromises: Array<Promise<string>> = [];\n\n  constructor(xmlContent: string) {\n    this.xmlContent = xmlContent;\n  }\n\n  public asBpmn(): IExportService {\n    const formatterPromise: Promise<string> = this.bpmnExporter();\n    const mimeType: string = 'application/bpmn20-xml';\n\n    this.enqueuedPromises.push(formatterPromise);\n\n    return new ExportService(mimeType, this.enqueuedPromises);\n  }\n\n  /**\n   * Formats the current loaded xml.\n   */\n  private bpmnExporter = async (): Promise<string> => {\n    return Promise.resolve(this.xmlContent);\n  };\n}\n","import {IExportService} from '../../../../contracts/index';\nimport {DiagramExportRepository} from '../repositories/DiagramExportRepository';\n\nexport class ExportService implements IExportService {\n  private enqueuedPromises: Array<Promise<string>>;\n  private exportDiagramRepository: DiagramExportRepository;\n  private currentMimeType: string;\n\n  constructor(currentMimeType: string, enqueuedPromises: Array<Promise<string>>) {\n    this.currentMimeType = currentMimeType;\n    this.enqueuedPromises = enqueuedPromises;\n    this.exportDiagramRepository = new DiagramExportRepository();\n  }\n\n  public async export(filename: string): Promise<void> {\n    /*\n     * Wait, until all queued functions are executed\n     */\n    const contentToExport: string = await this.enqueuedPromises.reduce(\n      (lastPromise: Promise<string>, currentPromise: Promise<string>): Promise<string> => {\n        return lastPromise.then((result: string) => {\n          return currentPromise;\n        });\n      },\n    );\n\n    /*\n     * If all exporters are finished, save the diagram to disk using the\n     * defined export repository.\n     */\n    this.exportDiagramRepository.exportDiagram(contentToExport, filename, this.currentMimeType);\n\n    /*\n     * After exporting, we can reset the queued promises.\n     */\n    this.enqueuedPromises = [];\n  }\n}\n","export {DiagramExportService} from './diagram.export.service';\nexport {DiagramPrintService} from './diagram.print.service';\n","import {bindingMode} from 'aurelia-binding';\nimport {bindable} from 'aurelia-framework';\nimport * as hljs from 'highlight.js';\nimport 'highlightjs-line-numbers.js';\n\nconst highlightEngine: hljs = hljs as hljs;\n\nexport class BpmnXmlView {\n  public codeElement: HTMLElement;\n  @bindable() public xml: string;\n  @bindable({defaultBindingMode: bindingMode.oneWay}) public newXML: string;\n  public highlighted: boolean = false;\n\n  public async attached(): Promise<void> {\n    highlightEngine.configure({\n      languages: ['xml'],\n    });\n\n    setTimeout(async () => {\n      if (this.codeElement) {\n        await this.highlight();\n      }\n    }, 0);\n  }\n\n  public async xmlChanged(): Promise<void> {\n    this.highlighted = false;\n    if (this.codeElement) {\n      await this.highlight();\n    }\n  }\n\n  public async highlight(): Promise<void> {\n    this.newXML = this.xml;\n    await highlightEngine.lineNumbersBlock(this.codeElement);\n    await highlightEngine.highlightBlock(this.codeElement);\n\n    setTimeout(() => {\n      this.highlighted = true;\n    }, 0);\n  }\n}\n",".xml-view__xml {\n  margin: 0;\n  background-color: unset;\n  border: none;\n  font-size: 14px;\n  font-family: monospace;\n  line-height: 14px;\n  word-break: unset;\n  word-wrap: unset;\n}\n\n.xml-view {\n  display: flex;\n  height: 100%;\n}\n\n.hljs-tag {\n  white-space: normal;\n}\n\ntd.hljs-ln-numbers {\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n\n  text-align: right;\n  color: #ccc;\n  border-right: 1px solid #CCC;\n  vertical-align: top;\n  padding-right: 5px;\n}\n\ntd.hljs-ln-code {\n  padding-left: 10px;\n}\n",null,"/**\n * We are disabling this rule here because we need this kind of statement in the\n * functions used in the promise of the modal.\n */\n\nimport {EventAggregator, Subscription} from 'aurelia-event-aggregator';\nimport {bindable, bindingMode, inject, observable} from 'aurelia-framework';\nimport {NavigationInstruction, Router, activationStrategy} from 'aurelia-router';\n\nimport * as fs from 'fs';\n\nimport {IDiagram, ISolution} from '@process-engine/solutionexplorer.contracts';\n\nimport {IDiagramState, ISolutionEntry, ISolutionService, NotificationType} from '../../contracts/index';\nimport environment from '../../environment';\nimport {NotificationService} from '../../services/notification-service/notification.service';\nimport {DiagramDetail} from './diagram-detail/diagram-detail';\nimport {OpenDiagramStateService} from '../../services/solution-explorer-services/OpenDiagramStateService';\n\nexport interface IDesignRouteParameters {\n  view?: string;\n  diagramName?: string;\n  diagramUri?: string;\n  solutionUri?: string;\n}\n\ntype DiagramWithSolution = {\n  diagram: IDiagram;\n  solutionName: string;\n  solutionUri: string;\n};\n\n@inject(EventAggregator, 'SolutionService', Router, 'NotificationService', 'OpenDiagramStateService')\nexport class Design {\n  @observable() public activeDiagram: IDiagram;\n  @bindable() public activeSolutionEntry: ISolutionEntry;\n  @bindable() public xmlForDiff: string;\n  @bindable({defaultBindingMode: bindingMode.oneWay}) public xml: string;\n\n  public showSelectDiagramModal: boolean = false;\n  public showDetail: boolean = true;\n  public showXML: boolean = false;\n  public showDiff: boolean = false;\n  public propertyPanelShown: boolean = false;\n  public showPropertyPanelButton: boolean = true;\n  public showDiffDestinationButton: boolean = false;\n  public design: Design = this;\n\n  public diagramDetail: DiagramDetail;\n  public filteredSolutions: Array<ISolution> = [];\n  public diagramArray: Array<IDiagram | object> = [];\n  public selectedDiagram: DiagramWithSolution;\n\n  private eventAggregator: EventAggregator;\n  private notificationService: NotificationService;\n  private solutionService: ISolutionService;\n  private subscriptions: Array<Subscription>;\n  private router: Router;\n  private routeView: string;\n  private ipcRenderer: any;\n  private openDiagramStateService: OpenDiagramStateService;\n\n  constructor(\n    eventAggregator: EventAggregator,\n    solutionService: ISolutionService,\n    router: Router,\n    notificationService: NotificationService,\n    openDiagramStateService: OpenDiagramStateService,\n  ) {\n    this.eventAggregator = eventAggregator;\n    this.solutionService = solutionService;\n    this.router = router;\n    this.notificationService = notificationService;\n    this.openDiagramStateService = openDiagramStateService;\n  }\n\n  // TODO: Refactor this function\n  // eslint-disable-next-line complexity\n  public async activate(routeParameters: IDesignRouteParameters): Promise<void> {\n    const solutionIsSet: boolean = routeParameters.solutionUri !== undefined;\n    const diagramNameIsSet: boolean = routeParameters.diagramName !== undefined;\n\n    const routerAndInstructionIsNotNull: boolean = this.router !== null && this.router.currentInstruction !== null;\n\n    const diagramNamesAreDifferent: boolean = routerAndInstructionIsNotNull\n      ? routeParameters.diagramName !== this.router.currentInstruction.params.diagramName\n      : true;\n\n    const diagramUrisAreDifferent: boolean = routerAndInstructionIsNotNull\n      ? routeParameters.diagramUri !== this.router.currentInstruction.queryParams.diagramUri ||\n        routeParameters.diagramUri === undefined\n      : false;\n\n    const solutionIsDifferent: boolean = routerAndInstructionIsNotNull\n      ? routeParameters.solutionUri !== this.router.currentInstruction.queryParams.solutionUri\n      : true;\n\n    const routeFromOtherView: boolean = routerAndInstructionIsNotNull\n      ? this.router.currentInstruction.config.name !== 'design'\n      : true;\n\n    const navigateToAnotherDiagram: boolean =\n      diagramNamesAreDifferent || diagramUrisAreDifferent || routeFromOtherView || solutionIsDifferent;\n\n    const isRunningInElectron: boolean = Boolean((window as any).nodeRequire);\n    if (isRunningInElectron) {\n      this.ipcRenderer = (window as any).nodeRequire('electron').ipcRenderer;\n    }\n\n    if (solutionIsSet) {\n      this.activeSolutionEntry = this.solutionService.getSolutionEntryForUri(routeParameters.solutionUri);\n\n      /**\n       * We have to open the solution here again since if we come here after a\n       * reload the solution might not be opened yet.\n       */\n      await this.activeSolutionEntry.service.openSolution(\n        this.activeSolutionEntry.uri,\n        this.activeSolutionEntry.identity,\n      );\n\n      const solutionIsRemote: boolean = this.activeSolutionEntry.uri.startsWith('http');\n      if (solutionIsRemote) {\n        if (isRunningInElectron) {\n          this.ipcRenderer.send('menu_hide-diagram-entries');\n        }\n\n        this.eventAggregator.publish(environment.events.configPanel.solutionEntryChanged, this.activeSolutionEntry);\n      } else if (isRunningInElectron) {\n        this.ipcRenderer.send('menu_show-all-menu-entries');\n      }\n\n      if (diagramNameIsSet) {\n        await this.setActiveDiagram(routeParameters.diagramName, routeParameters.diagramUri);\n      }\n\n      const diagramNotFound: boolean = this.activeDiagram === undefined;\n      if (diagramNotFound) {\n        this.router.navigateToRoute('start-page');\n        this.notificationService.showNotification(NotificationType.INFO, 'Diagram could not be opened!');\n      }\n\n      if (navigateToAnotherDiagram) {\n        this.xml = this.activeDiagram.xml;\n      }\n    }\n\n    const routeViewIsDetail: boolean = routeParameters.view === 'detail';\n    const routeViewIsXML: boolean = routeParameters.view === 'xml';\n    const routeViewIsDiff: boolean = routeParameters.view === 'diff';\n    this.routeView = routeParameters.view;\n\n    if (routeViewIsDetail) {\n      this.showDetail = true;\n      this.showXML = false;\n      this.showDiff = false;\n      this.showPropertyPanelButton = true;\n      this.showDiffDestinationButton = false;\n\n      this.eventAggregator.publish(environment.events.bpmnio.bindKeyboard);\n    } else if (routeViewIsXML) {\n      this.showDetail = false;\n      this.showXML = true;\n      this.showDiff = false;\n      this.showDiffDestinationButton = false;\n      this.showPropertyPanelButton = false;\n\n      this.eventAggregator.publish(environment.events.bpmnio.unbindKeyboard);\n    } else if (routeViewIsDiff) {\n      this.eventAggregator.publish(environment.events.bpmnio.unbindKeyboard);\n\n      const diagramState: IDiagramState | null = this.openDiagramStateService.loadDiagramState(this.activeDiagram.uri);\n      const diagramHasState: boolean = diagramState !== null;\n      if (diagramHasState) {\n        this.xmlForDiff = diagramState.data.xml;\n      } else {\n        this.xmlForDiff = this.activeDiagram.xml;\n      }\n\n      this.showDiffView();\n    }\n\n    this.eventAggregator.publish(environment.events.navBar.noValidationError);\n  }\n\n  public async attached(): Promise<void> {\n    const routeViewIsDiff: boolean = this.routeView === 'diff';\n    const routeViewIsXML: boolean = this.routeView === 'xml';\n\n    if (routeViewIsDiff) {\n      this.showDiffView();\n    }\n\n    if (routeViewIsDiff || routeViewIsXML) {\n      this.eventAggregator.publish(environment.events.bpmnio.unbindKeyboard);\n    }\n\n    this.subscriptions = [\n      this.eventAggregator.subscribe(environment.events.bpmnio.propertyPanelActive, (showPanel: boolean) => {\n        this.propertyPanelShown = showPanel;\n      }),\n    ];\n\n    const isRunningInElectron: boolean = Boolean((window as any).nodeRequire);\n    if (isRunningInElectron) {\n      this.ipcRenderer.send('menu_show-all-menu-entries');\n    }\n\n    this.eventAggregator.publish(environment.events.statusBar.showDiagramViewButtons);\n  }\n\n  public detached(): void {\n    this.eventAggregator.publish(environment.events.statusBar.hideDiagramViewButtons);\n    this.subscriptions.forEach((subscription: Subscription) => subscription.dispose());\n\n    const isRunningInElectron: boolean = Boolean((window as any).nodeRequire);\n    if (isRunningInElectron) {\n      this.ipcRenderer.send('menu_hide-diagram-entries');\n    }\n  }\n\n  public determineActivationStrategy(): string {\n    return activationStrategy.invokeLifecycle;\n  }\n\n  public setDiffDestination(diffDestination: string, diagramName?: string): void {\n    this.eventAggregator.publish(environment.events.diffView.setDiffDestination, [diffDestination, diagramName]);\n\n    this.showSelectDiagramModal = false;\n  }\n\n  public async openSelectDiagramModal(): Promise<void> {\n    this.diagramArray = [];\n\n    const allSolutions: Array<ISolutionEntry> = this.solutionService.getAllSolutionEntries();\n\n    const loadedSolutionPromises: Array<Promise<ISolution>> = allSolutions.map(async (value: ISolutionEntry) => {\n      const loadedSolution: ISolution = await value.service.loadSolution();\n\n      return loadedSolution;\n    });\n\n    const loadedSolutions: Array<ISolution> = await Promise.all(loadedSolutionPromises);\n    this.filteredSolutions = loadedSolutions.filter((solution: ISolution) => {\n      return solution.diagrams.length !== 0;\n    });\n\n    loadedSolutions.forEach((solution: ISolution) => {\n      solution.diagrams.forEach((diagram: IDiagram) => {\n        const diagramWithSolutionName: DiagramWithSolution = {\n          diagram,\n          solutionName: solution.name,\n          solutionUri: solution.uri,\n        };\n\n        this.diagramArray.push(diagramWithSolutionName);\n      });\n    });\n\n    const lastSaved: DiagramWithSolution = {\n      diagram: this.activeDiagram,\n      solutionName: 'Last Saved',\n      solutionUri: 'lastSaved',\n    };\n\n    this.diagramArray.unshift(lastSaved);\n\n    const openedDiagramIndex: number = this.diagramArray.findIndex((diagram: DiagramWithSolution) => {\n      const diagramIsOpenedDiagram: boolean =\n        diagram.solutionUri === this.activeSolutionEntry.uri && diagram.diagram.name === this.activeDiagram.name;\n      return diagramIsOpenedDiagram;\n    });\n\n    this.diagramArray.splice(openedDiagramIndex, 1);\n\n    this.showSelectDiagramModal = true;\n  }\n\n  public cancelDialog(): void {\n    this.showSelectDiagramModal = false;\n  }\n\n  public togglePanel(): void {\n    this.eventAggregator.publish(environment.events.bpmnio.togglePropertyPanel);\n  }\n\n  public deactivate(): void {\n    this.diagramDetail.deactivate();\n  }\n\n  public activeDiagramChanged(newValue: IDiagram, oldValue: IDiagram): void {\n    const noOldValue: boolean = oldValue === undefined;\n    if (noOldValue) {\n      return;\n    }\n\n    const activeDiagramDidNotChange: boolean = newValue.id === oldValue.id && newValue.uri === oldValue.uri;\n    if (activeDiagramDidNotChange) {\n      return;\n    }\n\n    this.xml = newValue.xml;\n    this.xmlForDiff = newValue.xml;\n  }\n\n  public get connectedRemoteSolutions(): Array<ISolutionEntry> {\n    const remoteSolutions: Array<ISolutionEntry> = this.solutionService.getRemoteSolutionEntries();\n\n    const remoteSolutionsWithoutActive: Array<ISolutionEntry> = remoteSolutions.filter(\n      (remoteSolution: ISolutionEntry) => {\n        return remoteSolution.uri !== this.activeSolutionEntry.uri && remoteSolution.fontAwesomeIconClass !== 'fa-bolt';\n      },\n    );\n\n    return remoteSolutionsWithoutActive;\n  }\n\n  public get remoteSolutions(): Array<ISolutionEntry> {\n    const remoteSolutions: Array<ISolutionEntry> = this.solutionService.getRemoteSolutionEntries();\n\n    const remoteSolutionsWithoutActive: Array<ISolutionEntry> = remoteSolutions.filter(\n      (remoteSolution: ISolutionEntry) => {\n        return remoteSolution.uri !== this.activeSolutionEntry.uri;\n      },\n    );\n\n    return remoteSolutionsWithoutActive;\n  }\n\n  public get showRemoteSolutionOnDeployModal(): boolean {\n    return this.diagramDetail.showRemoteSolutionOnDeployModal;\n  }\n\n  public get showSaveForStartModal(): boolean {\n    return this.diagramDetail.showSaveForStartModal;\n  }\n\n  public get showStartWithOptionsModal(): boolean {\n    return this.diagramDetail.showStartWithOptionsModal;\n  }\n\n  public get showStartEventModal(): boolean {\n    return this.diagramDetail.showStartEventModal;\n  }\n\n  public get diagramHasChanged(): boolean {\n    return this.diagramDetail.diagramHasChanged;\n  }\n\n  private async setActiveDiagram(diagramName: string, diagramUri: string): Promise<void> {\n    const isOpenDiagram: boolean = this.activeSolutionEntry.uri === 'about:open-diagrams';\n    if (isOpenDiagram) {\n      const persistedDiagrams: Array<IDiagram> = this.solutionService.getOpenDiagrams();\n\n      const persistedActiveDiagram = persistedDiagrams.find((diagram: IDiagram) => {\n        return diagram.name === diagramName && (diagram.uri === diagramUri || diagramUri === undefined);\n      });\n\n      let savedXml: string;\n      const diagramIsSavedLocally: boolean = !persistedActiveDiagram.uri.startsWith('about:open-diagrams');\n      if (diagramIsSavedLocally) {\n        try {\n          const uri = persistedActiveDiagram.uri.substring(0, persistedActiveDiagram.uri.lastIndexOf('/'));\n\n          const solutionEntry: ISolutionEntry = this.solutionService.getSolutionEntryForUri(uri);\n          const diagramFromSolution: IDiagram = await solutionEntry.service.loadDiagram(diagramName);\n          savedXml = diagramFromSolution.xml;\n        } catch {\n          savedXml = fs.readFileSync(persistedActiveDiagram.uri, 'utf8');\n        }\n      }\n\n      persistedActiveDiagram.xml = savedXml !== undefined ? savedXml : persistedActiveDiagram.xml;\n\n      this.activeDiagram = persistedActiveDiagram;\n    } else {\n      this.activeDiagram = await this.activeSolutionEntry.service.loadDiagram(diagramName);\n    }\n  }\n\n  private showDiffView(): void {\n    this.showDiff = true;\n    this.showDetail = false;\n    this.showXML = false;\n    this.showPropertyPanelButton = false;\n    this.showDiffDestinationButton = true;\n  }\n\n  /**\n   * This function checks, if the 'Save unsaved changes' Modal can be\n   * suppressed.\n   *\n   * This is the case, if the user basically navigates between the detail,\n   * the xml and the diff view, since the current xml will passed between\n   * these views.\n   *\n   * Therefore, the following paths will suppress the modal:\n   *  * detail  <-->   xml\n   *  * detail  <-->   diff\n   *  * diff    <-->   xml\n   *\n   * @param destinationInstruction The current router instruction which contains\n   * the destination router parameters.\n   */\n  private modalCanBeSuppressed(destinationInstruction: NavigationInstruction): boolean {\n    const oldView: string = this.router.currentInstruction.params.view;\n    const destinationView: string = destinationInstruction.params.view;\n\n    const navigatingBetween: Function = (routeA: string, routeB: string): boolean =>\n      (routeA === oldView || routeA === destinationView) && (routeB === oldView || routeB === destinationView);\n\n    const shouldModalBeSuppressed: boolean =\n      navigatingBetween('diff', 'xml') || navigatingBetween('diff', 'detail') || navigatingBetween('xml', 'detail');\n\n    return shouldModalBeSuppressed;\n  }\n}\n",".design {\n  display: flex;\n  flex: 1;\n}\n\nbpmn-xml-view {\n  height: 100%;\n  margin-right: 36px;\n}\n\ndiagram-detail {\n  display: flex;\n  flex: 1;\n  height: 100%;\n  margin-right: 36px;\n}\n\n.design__diff-destination-button {\n  margin: auto;\n  background: inherit;\n  border: none;\n  opacity: 0.5;\n}\n\n.design__diff-destination-button--disabled {\n  opacity: 0.2 !important;\n}\n\n.design__diff-destination-button:hover {\n  opacity: 1;\n}\n\nbpmn-diff-view {\n  flex: 1;\n  height: 100%;\n  margin-right: 36px;\n}\n\n.design-layout__tools-right {\n  position: absolute;\n  width: 36px;\n  top: 42px;\n  right: 0px;\n  bottom: 20px;\n  background-color: #f7f7f7;\n  border-left: 2px solid #dcdbdb;\n}\n\n.design-layout__tool {\n  display: block;\n  padding: 5px;\n  text-align: center;\n}\n\n.design-layout__tool:hover {\n  opacity: 1;\n}\n\n.design-layout__tool--active {\n  opacity: 1;\n}\n\n.design-layout__tool--disabled {\n  display: block;\n  padding: 2px;\n  text-align: center;\n  opacity: 0.2 !important;\n  cursor: default;\n}\n\n.design-layout__tool--disabled:hover {\n  opacity: 0.2;\n  cursor: default;\n}\n\n.design-modal__textarea {\n  height: 120px;\n  max-height: 200px;\n  min-height: 30px;\n}\n\n.diagram-list_dropdown {\n  max-width: 100%;\n}\n\n.design__diff-view-dropdown {\n  position: absolute;\n  will-change: transform;\n  top: 0px;\n  transform: translate3d(-147px, 31px, 0px);\n}\n",null,"import {EventAggregator, Subscription} from 'aurelia-event-aggregator';\nimport {bindable, bindingMode, computedFrom, inject, observable} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {ValidateEvent, ValidationController} from 'aurelia-validation';\n\nimport {\n  IConnection,\n  IExtensionElement,\n  IFormElement,\n  IModdleElement,\n  IShape,\n} from '@process-engine/bpmn-elements_contracts';\n\nimport {DataModels, IManagementApi} from '@process-engine/management_api_contracts';\nimport {IDiagram} from '@process-engine/solutionexplorer.contracts';\n\nimport {IElementRegistry, ISolutionEntry, IUserInputValidationRule, NotificationType} from '../../../contracts/index';\n\nimport environment from '../../../environment';\nimport {NotificationService} from '../../../services/notification-service/notification.service';\nimport {BpmnIo} from '../bpmn-io/bpmn-io';\nimport {DeployDiagramService} from '../../../services/deploy-diagram-service/deploy-diagram.service';\nimport {SaveDiagramService} from '../../../services/save-diagram-service/save-diagram.service';\nimport {exposeFunctionForTesting} from '../../../services/expose-functionality-module/expose-functionality-module';\n\n@inject(\n  'ManagementApiClientService',\n  'NotificationService',\n  EventAggregator,\n  Router,\n  ValidationController,\n  DeployDiagramService,\n  SaveDiagramService,\n)\nexport class DiagramDetail {\n  @bindable() public activeDiagram: IDiagram;\n  @bindable() public activeSolutionEntry: ISolutionEntry;\n  @observable({changeHandler: 'correlationChanged'}) public customCorrelationId: string;\n  @observable({changeHandler: 'diagramHasChangedChanged'}) public diagramHasChanged: boolean;\n  @bindable({defaultBindingMode: bindingMode.oneWay}) public xml: string;\n  @bindable() public initialToken: string;\n  @bindable public isDisplayed: boolean;\n  public bpmnio: BpmnIo;\n  public showSaveForStartModal: boolean = false;\n  public showStartEventModal: boolean = false;\n  public showStartWithOptionsModal: boolean = false;\n  public processesStartEvents: Array<DataModels.Events.Event> = [];\n  public selectedStartEventId: string;\n  public hasValidationError: boolean = false;\n  public diagramIsInvalid: boolean = false;\n  public showRemoteSolutionOnDeployModal: boolean = false;\n  public remoteSolutions: Array<ISolutionEntry> = [];\n  @observable public selectedRemoteSolution: ISolutionEntry;\n  public showDiagramExistingModal: boolean = false;\n\n  private notificationService: NotificationService;\n  private eventAggregator: EventAggregator;\n  private subscriptions: Array<Subscription>;\n  private router: Router;\n  private validationController: ValidationController;\n  private ipcRenderer: any;\n  private managementApiClient: IManagementApi;\n  private correlationIdValidationRegExpList: IUserInputValidationRule = {\n    alphanumeric: /^[a-z0-9]/i,\n    specialCharacters: /^[._ -]/i,\n    german: /^[äöüß]/i,\n  };\n\n  private clickedOnCustomStart: boolean = false;\n  private deployDiagramService: DeployDiagramService;\n  private saveDiagramService: SaveDiagramService;\n\n  constructor(\n    managementApiClient: IManagementApi,\n    notificationService: NotificationService,\n    eventAggregator: EventAggregator,\n    router: Router,\n    validationController: ValidationController,\n    deployDiagramService: DeployDiagramService,\n    saveDiagramService: SaveDiagramService,\n  ) {\n    this.notificationService = notificationService;\n    this.eventAggregator = eventAggregator;\n    this.router = router;\n    this.validationController = validationController;\n    this.managementApiClient = managementApiClient;\n    this.deployDiagramService = deployDiagramService;\n    this.saveDiagramService = saveDiagramService;\n\n    exposeFunctionForTesting('saveDiagramAs', (path: string): void => {\n      this.saveDiagramAs(path);\n    });\n  }\n\n  public determineActivationStrategy(): string {\n    return 'replace';\n  }\n\n  public async getXML(): Promise<string> {\n    return this.bpmnio.getXML();\n  }\n\n  public attached(): void {\n    this.diagramHasChanged = false;\n\n    this.selectedRemoteSolution = this.getPreviouslySelectedRemoteSolution();\n\n    const isRunningInElectron: boolean = Boolean((window as any).nodeRequire);\n    if (isRunningInElectron) {\n      this.ipcRenderer = (window as any).nodeRequire('electron').ipcRenderer;\n      this.ipcRenderer.on('menubar__start_save_diagram_as', this.electronOnSaveDiagramAs);\n      this.ipcRenderer.on('menubar__start_save_diagram', this.electronOnSaveDiagram);\n    }\n\n    this.eventAggregator.publish(environment.events.navBar.showTools);\n\n    this.subscriptions = [\n      this.validationController.subscribe((event: ValidateEvent) => {\n        this.handleFormValidateEvents(event);\n      }),\n      this.eventAggregator.subscribe(environment.events.diagramDetail.saveDiagram, async () => {\n        await this.saveDiagram();\n\n        this.eventAggregator.publish(environment.events.diagramDetail.saveDiagramDone);\n      }),\n      this.eventAggregator.subscribe(environment.events.diagramDetail.uploadProcess, () => {\n        this.deployDiagram();\n      }),\n      this.eventAggregator.subscribe(environment.events.differsFromOriginal, (savingNeeded: boolean) => {\n        this.diagramHasChanged = savingNeeded;\n      }),\n      this.eventAggregator.subscribe(environment.events.navBar.validationError, () => {\n        this.diagramIsInvalid = true;\n      }),\n      this.eventAggregator.subscribe(environment.events.navBar.noValidationError, () => {\n        this.diagramIsInvalid = false;\n      }),\n      this.eventAggregator.subscribe(environment.events.diagramDetail.startProcess, () => {\n        this.showStartDialog();\n      }),\n      this.eventAggregator.subscribe(environment.events.diagramDetail.startProcessWithOptions, async () => {\n        this.clickedOnCustomStart = true;\n        await this.showSelectStartEventDialog();\n      }),\n      this.eventAggregator.subscribe(environment.events.diagramDetail.saveDiagramAs, () => {\n        this.electronOnSaveDiagramAs();\n      }),\n      this.eventAggregator.subscribe(environment.events.diagramChangedOutsideTheStudio, (diagramUri: string) => {\n        const changedDiagramIsActiveDiagram: boolean = diagramUri === this.activeDiagramUri;\n\n        if (changedDiagramIsActiveDiagram) {\n          this.eventAggregator.publish(environment.events.differsFromOriginal, true);\n        }\n      }),\n    ];\n  }\n\n  public selectedRemoteSolutionChanged(): void {\n    const selectedRemoteSolutionAsString: string = JSON.stringify(this.selectedRemoteSolution);\n\n    localStorage.setItem('selectedRemoteSolution', selectedRemoteSolutionAsString);\n  }\n\n  public correlationChanged(newValue: string): void {\n    const inputAsCharArray: Array<string> = newValue.split('');\n\n    const correlationIdPassesIdCheck: boolean = !inputAsCharArray.some((letter: string) => {\n      return Object.values(this.correlationIdValidationRegExpList).forEach((regEx: RegExp, index: number) => {\n        const letterIsInvalid: boolean = letter.match(this.correlationIdValidationRegExpList[index]) !== null;\n\n        if (letterIsInvalid) {\n          return false;\n        }\n\n        return true;\n      });\n    });\n\n    const correlationIdDoesNotStartWithWhitespace: boolean = !newValue.match(/^\\s/);\n    const correlationIdDoesNotEndWithWhitespace: boolean = !newValue.match(/\\s+$/);\n\n    if (\n      correlationIdDoesNotStartWithWhitespace &&\n      correlationIdPassesIdCheck &&\n      correlationIdDoesNotEndWithWhitespace\n    ) {\n      this.hasValidationError = false;\n    } else {\n      this.hasValidationError = true;\n    }\n  }\n\n  public deactivate(): void {\n    this.eventAggregator.publish(environment.events.navBar.hideTools);\n  }\n\n  public detached(): void {\n    const isRunningInElectron: boolean = Boolean((window as any).nodeRequire);\n    if (isRunningInElectron) {\n      this.ipcRenderer.removeListener('menubar__start_save_diagram', this.electronOnSaveDiagram);\n      this.ipcRenderer.removeListener('menubar__start_save_diagram_as', this.electronOnSaveDiagramAs);\n    }\n\n    for (const subscription of this.subscriptions) {\n      subscription.dispose();\n    }\n  }\n\n  @computedFrom('activeDiagram.uri')\n  public get activeDiagramUri(): string {\n    return this.activeDiagram.uri;\n  }\n\n  public async setOptionsAndStart(): Promise<void> {\n    if (this.hasValidationError) {\n      return;\n    }\n\n    if (this.diagramHasChanged) {\n      await this.saveDiagram();\n    }\n\n    const parsedInitialToken: any = this.getInitialTokenValues(this.initialToken);\n\n    await this.startProcess(parsedInitialToken);\n  }\n\n  public async startProcess(parsedInitialToken?: any): Promise<void> {\n    if (this.selectedStartEventId === null) {\n      return;\n    }\n\n    this.dropInvalidFormData();\n\n    const startRequestPayload: DataModels.ProcessModels.ProcessStartRequestPayload = {\n      inputValues: parsedInitialToken,\n      correlationId: this.customCorrelationId,\n    };\n\n    try {\n      const useDefaultStartCallbackType: undefined = undefined;\n      const doNotAwaitEndEvent: undefined = undefined;\n\n      const response: DataModels.ProcessModels.ProcessStartResponsePayload = await this.managementApiClient.startProcessInstance(\n        this.activeSolutionEntry.identity,\n        this.activeDiagram.id,\n        startRequestPayload,\n        useDefaultStartCallbackType,\n        this.selectedStartEventId,\n        doNotAwaitEndEvent,\n      );\n\n      const {correlationId, processInstanceId} = response;\n\n      this.router.navigateToRoute('live-execution-tracker', {\n        diagramName: this.activeDiagram.id,\n        solutionUri: this.activeSolutionEntry.uri,\n        correlationId: correlationId,\n        processInstanceId: processInstanceId,\n      });\n    } catch (error) {\n      this.notificationService.showNotification(NotificationType.ERROR, error.message);\n    }\n\n    this.clickedOnCustomStart = false;\n  }\n\n  public async saveChangesBeforeStart(): Promise<void> {\n    this.showSaveForStartModal = false;\n\n    await this.saveDiagram();\n    await this.showSelectStartEventDialog();\n  }\n\n  public async saveDiagram(): Promise<void> {\n    if (this.diagramIsInvalid) {\n      return;\n    }\n\n    const xml: string = await this.bpmnio.getXML();\n\n    await this.bpmnio.saveDiagramState(this.activeDiagramUri);\n\n    this.saveDiagramService.saveDiagram(this.activeSolutionEntry, this.activeDiagram, xml);\n\n    this.bpmnio.saveCurrentXML();\n    this.diagramHasChanged = false;\n  }\n\n  public async saveDiagramAs(path?: string): Promise<void> {\n    if (this.diagramIsInvalid) {\n      return;\n    }\n\n    const xml: string = await this.getXMLOrDisplayError();\n\n    if (!xml) {\n      return;\n    }\n\n    await this.saveDiagramService.saveDiagramAs(this.activeSolutionEntry, this.activeDiagram, xml, path);\n\n    this.bpmnio.saveStateForNewUri = true;\n    this.bpmnio.saveCurrentXML();\n\n    this.diagramHasChanged = false;\n  }\n\n  /**\n   * Opens a modal dialog to ask the user, which StartEvent he want's to\n   * use to start the process.\n   *\n   * If there is only one StartEvent this method will select this StartEvent by\n   * default.\n   */\n  public async showSelectStartEventDialog(): Promise<void> {\n    await this.updateProcessStartEvents();\n\n    const onlyOneStarteventAvailable: boolean = this.processesStartEvents.length === 1;\n\n    if (onlyOneStarteventAvailable) {\n      this.selectedStartEventId = this.processesStartEvents[0].id;\n\n      this.continueStarting();\n\n      return;\n    }\n\n    this.showStartEventModal = true;\n    this.showSaveForStartModal = false;\n  }\n\n  public continueStarting(): void {\n    const functionCallDoesNotComeFromCustomModal: boolean = this.clickedOnCustomStart === false;\n    if (functionCallDoesNotComeFromCustomModal) {\n      this.startProcess();\n      this.clickedOnCustomStart = false;\n    } else {\n      this.showCustomStartModal();\n    }\n\n    this.showStartEventModal = false;\n  }\n\n  public cancelDialog(): void {\n    this.showSaveForStartModal = false;\n    this.showStartEventModal = false;\n    this.showStartWithOptionsModal = false;\n    this.showRemoteSolutionOnDeployModal = false;\n    this.clickedOnCustomStart = false;\n  }\n\n  public showCustomStartModal(): void {\n    this.getTokenFromStartEventAnnotation();\n    this.showStartWithOptionsModal = true;\n  }\n\n  private getPreviouslySelectedRemoteSolution(): ISolutionEntry {\n    const selectedRemoteSolutionFromLocalStorage: string = localStorage.getItem('selectedRemoteSolution');\n\n    if (selectedRemoteSolutionFromLocalStorage === null) {\n      return undefined;\n    }\n\n    return JSON.parse(selectedRemoteSolutionFromLocalStorage);\n  }\n\n  private getInitialTokenValues(token: any): any {\n    try {\n      // If successful, the token is an object\n      return JSON.parse(token);\n    } catch (error) {\n      // If an error occurs, the token is something else.\n      return token;\n    }\n  }\n\n  private async getXMLOrDisplayError(): Promise<string> {\n    try {\n      return await this.bpmnio.getXML();\n    } catch (error) {\n      this.notificationService.showNotification(NotificationType.ERROR, `Unable to get the XML: ${error}.`);\n      return undefined;\n    }\n  }\n\n  private getTokenFromStartEventAnnotation(): void {\n    const elementRegistry: IElementRegistry = this.bpmnio.modeler.get('elementRegistry');\n    const noStartEventId: boolean = this.selectedStartEventId === undefined;\n    let startEvent: IShape;\n\n    if (noStartEventId) {\n      startEvent = elementRegistry.filter((element: IShape) => {\n        return element.type === 'bpmn:StartEvent';\n      })[0];\n    } else {\n      startEvent = elementRegistry.get(this.selectedStartEventId);\n    }\n\n    const startEventAssociations: Array<IConnection> = startEvent.outgoing.filter((connection: IConnection) => {\n      const connectionIsAssociation: boolean = connection.type === 'bpmn:Association';\n\n      return connectionIsAssociation;\n    });\n\n    const associationWithStartToken: IConnection = startEventAssociations.find((connection: IConnection) => {\n      const associationText: string = connection.target.businessObject.text;\n\n      const associationTextIsEmpty: boolean = associationText === undefined || associationText === null;\n      if (associationTextIsEmpty) {\n        return undefined;\n      }\n\n      const token: string = associationText.trim();\n\n      return token.startsWith('StartToken:');\n    });\n\n    const associationWithStartTokenIsExisting: boolean = associationWithStartToken !== undefined;\n    if (associationWithStartTokenIsExisting) {\n      const untrimmedInitialToken: string = associationWithStartToken.target.businessObject.text;\n\n      const untrimmedInitialTokenIsUndefined: boolean = untrimmedInitialToken === undefined;\n      if (untrimmedInitialTokenIsUndefined) {\n        this.initialToken = '';\n\n        return;\n      }\n\n      const initialToken: string = untrimmedInitialToken.replace('StartToken:', '').trim();\n\n      /**\n       * This Regex replaces all single quotes with double quotes and adds double\n       * quotes to non quotet keys.\n       * This way we make sure that JSON.parse() can handle the given string.\n       */\n      this.initialToken = initialToken.replace(/(\\s*?{\\s*?|\\s*?,\\s*?)(['\"])?([a-zA-Z0-9]+)(['\"])?:/g, '$1\"$3\":');\n\n      return;\n    }\n\n    this.initialToken = '';\n  }\n\n  private async updateProcessStartEvents(): Promise<void> {\n    const startEventResponse: DataModels.Events.EventList = await this.managementApiClient.getStartEventsForProcessModel(\n      this.activeSolutionEntry.identity,\n      this.activeDiagram.id,\n    );\n\n    this.processesStartEvents = startEventResponse.events;\n  }\n\n  private async deployDiagram(): Promise<void> {\n    const xml: string | undefined = this.diagramHasChanged ? await this.bpmnio.getXML() : undefined;\n\n    this.deployDiagramService.deployDiagram(this.activeSolutionEntry, this.activeDiagram, xml);\n  }\n\n  /**\n   * Opens a modal, if the diagram has unsaved changes and ask the user,\n   * if he wants to save his changes. This is necessary to\n   * execute the process.\n   *\n   * If there are no unsaved changes, no modal will be displayed.\n   */\n  private async showStartDialog(): Promise<void> {\n    if (this.diagramHasChanged) {\n      this.showSaveForStartModal = true;\n    } else {\n      await this.showSelectStartEventDialog();\n    }\n  }\n\n  private electronOnSaveDiagramAs = async (_?: Event): Promise<void> => {\n    await this.saveDiagramAs();\n  };\n\n  private electronOnSaveDiagram = async (_?: Event): Promise<void> => {\n    this.eventAggregator.publish(environment.events.diagramDetail.saveDiagram);\n  };\n\n  private handleFormValidateEvents(event: ValidateEvent): void {\n    const eventIsValidateEvent: boolean = event.type !== 'validate';\n\n    if (eventIsValidateEvent) {\n      return;\n    }\n\n    for (const result of event.results) {\n      const resultIsNotValid: boolean = result.valid === false;\n\n      if (resultIsNotValid) {\n        this.eventAggregator.publish(environment.events.navBar.validationError);\n        this.diagramIsInvalid = true;\n\n        return;\n      }\n    }\n\n    this.eventAggregator.publish(environment.events.navBar.noValidationError);\n    this.diagramIsInvalid = false;\n  }\n\n  /**\n   * In the current implementation this method only checks for UserTasks that have\n   * empty or otherwise not allowed FormData in them.\n   *\n   * If that is the case the method will continue by deleting unused/not allowed\n   * FormData to make sure the diagrams XML is further supported by Camunda.\n   *\n   * TODO: Look further into this if this method is not better placed at the FormsSection\n   * in the Property Panel, also split this into two methods and name them right.\n   */\n  private dropInvalidFormData(): void {\n    const registry: IElementRegistry = this.bpmnio.modeler.get('elementRegistry');\n    registry.forEach((element: IShape) => {\n      const elementIsUserTask: boolean = element.type === 'bpmn:UserTask';\n\n      if (elementIsUserTask) {\n        const businessObj: IModdleElement = element.businessObject;\n\n        const businessObjHasExtensionElements: boolean = businessObj.extensionElements !== undefined;\n        if (businessObjHasExtensionElements) {\n          const extensions: IExtensionElement = businessObj.extensionElements;\n\n          extensions.values = extensions.values.filter((value: IFormElement) => {\n            const typeIsNotCamundaFormData: boolean = value.$type !== 'camunda:FormData';\n            const elementContainsFields: boolean = value.fields !== undefined && value.fields.length > 0;\n\n            const keepThisValue: boolean = typeIsNotCamundaFormData || elementContainsFields;\n            return keepThisValue;\n          });\n\n          const noExtensionValuesSet: boolean = extensions.values.length === 0;\n\n          if (noExtensionValuesSet) {\n            delete businessObj.extensionElements;\n          }\n        }\n      }\n    });\n  }\n}\n","diagram-detail {\n  display: flex;\n  flex: 1;\n  height: 100%;\n  align-items: stretch;\n}\n\nbpmn-io {\n  display: flex;\n  flex: 1;\n  height: 100%;\n}\n\n/*\n * Save Modal Dialog\n*/\n\n.save-modal-dialog {\n  position: relative;\n  top: 20%;\n  width: 400px;\n}\n\n.save-modal-header {\n  text-align: center\n}\n\n.show-modal {\n  display: block;\n}\n\n.custom-button {\n  margin: 10px 0;\n  padding: 5px 10px;\n  background-color: white;\n  border: 1px solid darkgray;\n  border-radius: 4px;\n}\n\n/*\n * Select Start Event Modal\n */\n\n.select-start-event-modal__dialog {\n  position: relative;\n  top: 20%;\n  width: 400px;\n}\n\n.input-field:focus {\n  border-color: #e6e6e6 !important;\n  box-shadow: none;\n}\n\n.wrong-input {\n  border-color: red !important;\n}\n\n.wrong-input:focus {\n  border-color: red !important;\n  box-shadow: none;\n}\n\n.correlation-id-error__container {\n  padding: 2px;\n  padding-left: 25px;\n  margin-top: -3px;\n  margin-right: 0px;\n  border: 1px solid red;\n  border-top: none;\n  color: red;\n}\n\n.error-list__container {\n  list-style-type: disc;\n}\n\n",null,"/* eslint-disable no-undef */\n/* eslint-disable import/no-duplicates */\nimport {bindable, inject} from 'aurelia-framework';\n\nimport {IModdleElement, IShape} from '@process-engine/bpmn-elements_contracts';\nimport * as spectrum from 'spectrum-colorpicker';\nimport 'spectrum-colorpicker/spectrum';\n\nimport {\n  ElementDistributeOptions,\n  IBpmnFunction,\n  IBpmnModeler,\n  ICanvas,\n  IColorPickerColor,\n  IColorPickerSettings,\n  IEvent,\n  IEventFunction,\n  IModeling,\n  NotificationType,\n  defaultBpmnColors,\n} from '../../../contracts/index';\nimport environment from '../../../environment';\nimport {NotificationService} from '../../../services/notification-service/notification.service';\n\n@inject('NotificationService')\nexport class DiagramToolsRight {\n  @bindable()\n  public modeler: IBpmnModeler;\n\n  @bindable()\n  public viewer: IBpmnModeler;\n\n  @bindable()\n  public solutionIsRemote: boolean;\n\n  public colorSelectionDropdownToggle: HTMLElement;\n  public colorSelectionDropdown: HTMLElement;\n\n  public distributeElementsEnabled: boolean;\n  public colorPickerEnabled: boolean = true;\n  public colorPickerBorder: HTMLInputElement;\n  public colorPickerFill: HTMLInputElement;\n  public colorPickerLoaded: boolean = false;\n  public fillColor: string;\n  public borderColor: string;\n\n  private preventColorSelectionFromHiding: boolean;\n\n  private notificationService: NotificationService;\n\n  constructor(notificationService: NotificationService) {\n    this.notificationService = notificationService;\n  }\n\n  public attached(): void {\n    this.distributeElementsEnabled = false;\n\n    /**\n     * Subscribe to the \"selection.changed\" event to determine, if the ColorPicker\n     * should be enabled or not.\n     *\n     * The ColorPicker should only be enabled, if the user selects a Diagram\n     * Element inside a Collaboration.\n     */\n    this.modeler.on('selection.changed', (event: IEvent) => {\n      const selectedElements: Array<IShape> = this.getSelectedElements();\n      const userSelectedDiagramElement: boolean = selectedElements.length > 0;\n\n      this.colorPickerEnabled = this.solutionIsRemote ? false : userSelectedDiagramElement;\n\n      if (userSelectedDiagramElement) {\n        this.borderColor = selectedElements[0].businessObject.di.stroke;\n        this.fillColor = selectedElements[0].businessObject.di.fill;\n      }\n\n      /**\n       * The distribute elements feature only can do it's thing, if the\n       * user selects more than two elements.\n       */\n      this.distributeElementsEnabled = selectedElements.length > 2;\n    });\n\n    /**\n     * Subscribe to the \"commandStack.elements.move.postExecute\" event.\n     *\n     * This is needed because otherwise the colorpicker stays disabled if the\n     * user directly drags around an element after he clicked at a Collaboration.\n     */\n    this.modeler.on('commandStack.elements.move.postExecute', (event: IEvent) => {\n      this.colorPickerEnabled = true;\n    });\n  }\n\n  public detached(): void {\n    $(this.colorPickerBorder).spectrum('destroy');\n    $(this.colorPickerFill).spectrum('destroy');\n\n    window.localStorage.removeItem('borderColors');\n    window.localStorage.removeItem('fillColors');\n  }\n\n  public setColorRed(): void {\n    this.setColor(defaultBpmnColors.red);\n  }\n\n  public setColorBlue(): void {\n    this.setColor(defaultBpmnColors.blue);\n  }\n\n  public setColorGreen(): void {\n    this.setColor(defaultBpmnColors.green);\n  }\n\n  public setColorPurple(): void {\n    this.setColor(defaultBpmnColors.purple);\n  }\n\n  public setColorOrange(): void {\n    this.setColor(defaultBpmnColors.orange);\n  }\n\n  public removeColor(): void {\n    this.setColor(defaultBpmnColors.none);\n  }\n\n  public setPickedColor(): void {\n    const customColor: IColorPickerColor = {fill: this.fillColor, border: this.borderColor};\n\n    this.setColor(customColor);\n  }\n\n  public updateCustomColors(): void {\n    if (!this.colorPickerLoaded) {\n      this.activateColorPicker();\n    }\n\n    [this.fillColor, this.borderColor] = this.getColors();\n\n    $(this.colorPickerFill).spectrum('set', this.fillColor);\n    $(this.colorPickerBorder).spectrum('set', this.borderColor);\n  }\n\n  public fitDiagramToViewport(): void {\n    if (this.solutionIsRemote) {\n      const viewerCanvas: ICanvas = this.viewer.get('canvas');\n\n      viewerCanvas.zoom('fit-viewport', 'auto');\n    } else {\n      const modelerCanvas: ICanvas = this.modeler.get('canvas');\n\n      modelerCanvas.zoom('fit-viewport', 'auto');\n    }\n  }\n\n  private setColor(color: IColorPickerColor): void {\n    const modeling: IModeling = this.modeler.get('modeling');\n\n    const selectedElements: Array<IShape> = this.getSelectedElements();\n\n    const elementIsNotValid: boolean =\n      selectedElements.length < 1 ||\n      (selectedElements.length === 1 && selectedElements[0].$type === 'bpmn:Collaboration');\n\n    if (elementIsNotValid) {\n      const notificationMessage: string =\n        'Unable to apply color. Please select an element and use the color picker again.';\n      this.notificationService.showNotification(NotificationType.INFO, notificationMessage);\n\n      return;\n    }\n\n    this.fillColor = color.fill;\n    this.borderColor = color.border;\n\n    modeling.setColor(selectedElements, {\n      fill: color.fill,\n      stroke: color.border,\n    });\n  }\n\n  private getColors(): Array<string> {\n    const selectedElements: Array<IShape> = this.getSelectedElements();\n\n    const noElementSelected: boolean = !selectedElements || !selectedElements[0] || !selectedElements[0].businessObject;\n\n    if (noElementSelected) {\n      const undefinedFillColorUndefinedBorderColor: Array<string> = [undefined, undefined];\n      return undefinedFillColorUndefinedBorderColor;\n    }\n\n    const firstElement: IModdleElement = selectedElements[0].businessObject;\n    const fillColor: string = firstElement.di.fill;\n    const borderColor: string = firstElement.di.stroke;\n\n    return [fillColor, borderColor];\n  }\n\n  public distributeElementsVertically(): void {\n    const distributor: IBpmnFunction = this.modeler.get('distributeElements');\n\n    const elements: Array<IShape> = this.getSelectedElements();\n\n    distributor.trigger(elements, ElementDistributeOptions.VERTICAL);\n  }\n\n  public distributeElementsHorizontally(): void {\n    const distributor: IBpmnFunction = this.modeler.get('distributeElements');\n\n    const elements: Array<IShape> = this.getSelectedElements();\n\n    distributor.trigger(elements, ElementDistributeOptions.HORIZONTAL);\n  }\n\n  private activateColorPicker(): void {\n    window.localStorage.removeItem('borderColors');\n    window.localStorage.removeItem('fillColors');\n\n    // Colorpicker bordercolor\n    const borderMoveSetting: spectrum.Options = {\n      move: (borderColor: spectrum.tinycolorInstance): void => {\n        this.updateBorderColor(borderColor);\n      },\n    };\n\n    const borderLocalStorageKey: spectrum.Options = {localStorageKey: 'borderColors'};\n\n    const borderDefaultColors: Array<string> = [\n      defaultBpmnColors.red.border,\n      defaultBpmnColors.blue.border,\n      defaultBpmnColors.green.border,\n      defaultBpmnColors.purple.border,\n      defaultBpmnColors.orange.border,\n    ];\n\n    const borderDefaultPalette: spectrum.Options = {palette: borderDefaultColors};\n\n    const colorPickerBorderSettings: IColorPickerSettings = Object.assign(\n      {},\n      environment.colorPickerSettings,\n      borderDefaultPalette,\n      borderLocalStorageKey,\n      borderMoveSetting,\n    );\n\n    $(this.colorPickerBorder).spectrum(colorPickerBorderSettings);\n\n    // Colorpicker fillcolor\n    const fillMoveSetting: spectrum.Options = {\n      move: (fillColor: spectrum.tinycolorInstance): void => {\n        this.updateFillColor(fillColor);\n      },\n    };\n\n    const fillLocalStorageKey: spectrum.Options = {localStorageKey: 'fillColors'};\n\n    const fillDefaultColors: Array<string> = [\n      defaultBpmnColors.red.fill,\n      defaultBpmnColors.blue.fill,\n      defaultBpmnColors.green.fill,\n      defaultBpmnColors.purple.fill,\n      defaultBpmnColors.orange.fill,\n    ];\n\n    const fillDefaultPalette: spectrum.Options = {palette: fillDefaultColors};\n\n    const colorPickerFillSettings: IColorPickerSettings = Object.assign(\n      {},\n      environment.colorPickerSettings,\n      fillDefaultPalette,\n      fillLocalStorageKey,\n      fillMoveSetting,\n    );\n\n    $(this.colorPickerFill).spectrum(colorPickerFillSettings);\n\n    const changeColorSelectionHiding: (event: JQueryEventObject) => void = (event: Event): void => {\n      const isDragStartEvent: boolean = event.type === 'dragstart';\n\n      this.preventColorSelectionFromHiding = isDragStartEvent;\n      if (isDragStartEvent) {\n        document.addEventListener('click', this.colorSelectionDropdownClickListener);\n      }\n    };\n\n    // This is used to prevent the color selection dropdown from hiding when a colorpicker is still visible\n    $(this.colorPickerFill).on('dragstart.spectrum', changeColorSelectionHiding);\n    $(this.colorPickerBorder).on('dragstart.spectrum', changeColorSelectionHiding);\n\n    $(this.colorPickerFill).on('dragstop.spectrum', changeColorSelectionHiding);\n    $(this.colorPickerBorder).on('dragstop.spectrum', changeColorSelectionHiding);\n\n    this.colorPickerLoaded = true;\n  }\n\n  private updateFillColor(fillColor: spectrum.tinycolorInstance): void {\n    if (fillColor) {\n      this.fillColor = fillColor.toHexString();\n    } else {\n      this.fillColor = undefined;\n    }\n\n    this.setPickedColor();\n  }\n\n  private updateBorderColor(borderColor: spectrum.tinycolorInstance): void {\n    if (borderColor) {\n      this.borderColor = borderColor.toHexString();\n    } else {\n      this.borderColor = undefined;\n    }\n\n    this.setPickedColor();\n  }\n\n  private getSelectedElements(): Array<IShape> {\n    // eslint-disable-next-line no-underscore-dangle\n    return this.modeler.get('selection')._selectedElements;\n  }\n\n  public colorSelectionDropdownClickListener: IEventFunction = (): void => {\n    if (this.preventColorSelectionFromHiding) {\n      this.colorSelectionDropdown.classList.add('color-selection-dropdown--show');\n      this.preventColorSelectionFromHiding = false;\n    } else {\n      this.colorSelectionDropdown.classList.remove('color-selection-dropdown--show');\n      document.removeEventListener('click', this.colorSelectionDropdownClickListener);\n    }\n  };\n}\n",".diagram-tools-panel {\n  display: flex;\n\n  background-color: #f7f7f7;\n  border-left: 2px solid #dcdbdb;\n  border-bottom: 2px solid #dcdbdb;\n}\n\n.tool {\n  display: block;\n  padding: 5px;\n  margin: 0 5px;\n  background: inherit;\n  border: none;\n  text-align: center;\n}\n\n.tool--disabled {\n  cursor: default;\n}\n\n.tool--disabled:hover {\n  cursor: default;\n}\n\n.open .tool {\n  box-shadow: none !important; //Overwrite Bootstrap btn-group class combination\n}\n\n.color-dropdown {\n  cursor: default;\n}\n\n/*\n * The border is used to seperate the two buttons for the colorpickers from the\n * other buttons\n *\n * The fill-colorpicker is the upper button and therefore only has the border at the top\n */\n.fill-colorpicker--border {\n  border-top: 1px solid #ccc;\n}\n\n/*\n * The border-colorpicker is the lower button and therefore only has the border at the bottom\n */\n.border-colorpicker--border {\n  border-bottom: 1px solid #ccc;\n}\n\n.fill-colorpicker__eyedropper {\n  margin-left: 39px;\n  margin-right: -14px;\n}\n\n.border-colorpicker__eyedropper {\n  margin-left: 14px;\n  margin-right: -14px;\n}\n\n.sp-replacer {\n  display: inline-block;\n  margin: 0;\n  overflow: hidden;\n  cursor: pointer;\n  background: 0;\n  border: 0;\n  color: #333;\n  vertical-align: middle;\n}\n\n.sp-container {\n  height: 247px;\n  -webkit-border-radius: 10px;\n  -moz-border-radius: 10px;\n  border-radius: 10px;\n}\n\n.sp-palette-container {\n  position: absolute;\n  bottom: 0;\n  left: 6px;\n  z-index: 1;\n  height: 44px;\n  border-right: none;\n}\n\n.sp-sat, .sp-val {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: -1px;\n}\n\n.color-selection-dropdown--show {\n  display: block;\n}\n",null,"import {IShape} from '@process-engine/bpmn-elements_contracts';\n\nimport {IIndextab, ISection} from '../../../../../contracts';\nimport {BasicsSection} from './sections/basics/basics';\nimport {ProcessSection} from './sections/process/process';\n\nexport class Extensions implements IIndextab {\n  public title: string = 'Extensions';\n  public path: string = '/indextabs/extensions/extensions';\n  public elementInPanel: IShape;\n  public canHandleElement: boolean = true;\n  public sections: Array<ISection>;\n\n  private basicsSection: ISection = new BasicsSection();\n  private processSection: ISection = new ProcessSection();\n\n  constructor() {\n    this.sections = [this.basicsSection, this.processSection];\n  }\n\n  public isSuitableForElement(element: IShape): boolean {\n    if (!element) {\n      return false;\n    }\n\n    this.sections.forEach((section: ISection) => {\n      section.canHandleElement = section.isSuitableForElement(element);\n    });\n\n    return this.sections.some((section: ISection) => {\n      return section.isSuitableForElement(element);\n    });\n  }\n}\n","",null,"import {EventAggregator} from 'aurelia-event-aggregator';\nimport {inject} from 'aurelia-framework';\n\nimport {\n  IExtensionElement,\n  IModdleElement,\n  IPropertiesElement,\n  IProperty,\n  IShape,\n} from '@process-engine/bpmn-elements_contracts';\n\nimport {IBpmnModdle, IPageModel, ISection} from '../../../../../../../contracts';\nimport environment from '../../../../../../../environment';\n\n@inject(EventAggregator)\nexport class BasicsSection implements ISection {\n  public path: string = '/sections/basics/basics';\n  public canHandleElement: boolean = false;\n  public properties: Array<IProperty> = [];\n  public newNames: Array<string> = [];\n  public newValues: Array<string> = [];\n  public shouldFocus: boolean = false;\n\n  private businessObjInPanel: IModdleElement;\n  private moddle: IBpmnModdle;\n  private propertiesElement: IPropertiesElement;\n  private eventAggregator: EventAggregator;\n\n  constructor(eventAggregator?: EventAggregator) {\n    this.eventAggregator = eventAggregator;\n  }\n\n  public activate(model: IPageModel): void {\n    this.businessObjInPanel = model.elementInPanel.businessObject;\n    this.moddle = model.modeler.get('moddle');\n    this.reloadProperties();\n  }\n\n  public isSuitableForElement(element: IShape): boolean {\n    const elementIsUndefined: boolean = element === undefined || element.businessObject === undefined;\n\n    if (elementIsUndefined) {\n      return false;\n    }\n\n    const elementHasExtensions: boolean =\n      element.businessObject.$type !== 'bpmn:Process' && element.businessObject.$type !== 'bpmn:Collaboration';\n\n    return elementHasExtensions;\n  }\n\n  public addProperty(): void {\n    this.reloadProperties();\n\n    const bpmnPropertyProperties: object = {\n      name: '',\n      value: '',\n    };\n    const bpmnProperty: IProperty = this.moddle.create('camunda:Property', bpmnPropertyProperties);\n\n    this.newNames.push('');\n    this.newValues.push('');\n\n    const businessObjectHasNoExtensionElements: boolean =\n      this.businessObjInPanel.extensionElements === undefined ||\n      this.businessObjInPanel.extensionElements === null ||\n      this.businessObjInPanel.extensionElements.values === undefined ||\n      this.businessObjInPanel.extensionElements.values.length === 0;\n\n    if (businessObjectHasNoExtensionElements) {\n      this.createExtensionElement();\n    }\n\n    this.propertiesElement = this.getPropertiesElement();\n    const propertiesElementIsUndefined: boolean = this.propertiesElement === undefined;\n\n    if (propertiesElementIsUndefined) {\n      this.createEmptyCamundaProperties();\n      this.propertiesElement = this.getPropertiesElement();\n    }\n\n    this.propertiesElement.values.push(bpmnProperty);\n    this.properties.push(bpmnProperty);\n    this.publishDiagramChange();\n    this.shouldFocus = true;\n  }\n\n  public inputFieldBlurred(index: number, event: FocusEvent): void {\n    const targetElement: HTMLElement = event.relatedTarget as HTMLElement;\n    const targetIsNoInputField: boolean = !(targetElement instanceof HTMLInputElement);\n\n    if (targetIsNoInputField) {\n      this.checkAndRemoveEmptyProperties(index);\n\n      return;\n    }\n\n    const targetFieldIndex: string = targetElement.getAttribute('data-fieldIndex');\n    const indexAsString: string = index.toString();\n    const targetValueFieldNotRelated: boolean = targetFieldIndex !== indexAsString;\n    if (targetValueFieldNotRelated) {\n      this.checkAndRemoveEmptyProperties(index);\n    }\n  }\n\n  public removeProperty(index: number): void {\n    this.propertiesElement.values.splice(index, 1);\n\n    const emptyProperties: boolean = this.propertiesElement.values.length === 0;\n    if (emptyProperties) {\n      this.deletePropertiesElementAndExtensionElements();\n    }\n\n    this.reloadProperties();\n    this.publishDiagramChange();\n  }\n\n  public changeName(index: number): void {\n    this.propertiesElement.values[index].name = this.newNames[index];\n    this.checkAndRemoveEmptyProperties(index);\n\n    this.publishDiagramChange();\n  }\n\n  public changeValue(index: number): void {\n    this.propertiesElement.values[index].value = this.newValues[index];\n    this.checkAndRemoveEmptyProperties(index);\n\n    this.publishDiagramChange();\n  }\n\n  private deletePropertiesElementAndExtensionElements(): void {\n    const indexOfPropertiesElement: number = this.businessObjInPanel.extensionElements.values.findIndex(\n      (element: IPropertiesElement) => {\n        if (!element) {\n          return undefined;\n        }\n        return element.$type === 'camunda:Properties';\n      },\n    );\n\n    delete this.businessObjInPanel.extensionElements.values[indexOfPropertiesElement];\n\n    const emptyExtensionElements: boolean = this.businessObjInPanel.extensionElements.values.length < 2;\n    if (emptyExtensionElements) {\n      delete this.businessObjInPanel.extensionElements;\n    }\n  }\n\n  private checkAndRemoveEmptyProperties(index: number): void {\n    const propertyElement: IProperty = this.propertiesElement.values[index];\n    if (!propertyElement) {\n      return;\n    }\n\n    const propertyIsEmpty: boolean = propertyElement.value === '' && propertyElement.name === '';\n    if (propertyIsEmpty) {\n      this.removeProperty(index);\n    }\n  }\n\n  private reloadProperties(): void {\n    this.properties = [];\n    this.newNames = [];\n    this.newValues = [];\n    this.shouldFocus = false;\n\n    const businessObjectHasNoExtensionElements: boolean =\n      this.businessObjInPanel.extensionElements === undefined ||\n      this.businessObjInPanel.extensionElements === null ||\n      this.businessObjInPanel.extensionElements.values === undefined ||\n      this.businessObjInPanel.extensionElements.values.length === 0;\n\n    if (businessObjectHasNoExtensionElements) {\n      return;\n    }\n\n    const extensionsPropertiesElement: IPropertiesElement = this.businessObjInPanel.extensionElements.values.find(\n      (extensionValue: IExtensionElement) => {\n        if (!extensionValue) {\n          return undefined;\n        }\n\n        const extensionIsPropertyElement: boolean =\n          extensionValue.$type === 'camunda:Properties' &&\n          extensionValue.values !== undefined &&\n          extensionValue.values !== null &&\n          extensionValue.values.length !== 0;\n\n        return extensionIsPropertyElement;\n      },\n    );\n\n    const extensionElementHasNoPropertyElement: boolean = extensionsPropertiesElement === undefined;\n\n    if (extensionElementHasNoPropertyElement) {\n      return;\n    }\n\n    this.propertiesElement = extensionsPropertiesElement;\n\n    const properties: Array<IProperty> = extensionsPropertiesElement.values;\n    for (const property of properties) {\n      if (property.$type !== 'camunda:Property') {\n        continue;\n      }\n      this.newNames.push(property.name);\n      this.newValues.push(property.value);\n      this.properties.push(property);\n    }\n  }\n\n  private getPropertiesElement(): IPropertiesElement | undefined {\n    const businessObjectHasNoExtensionElements: boolean =\n      this.businessObjInPanel.extensionElements === undefined ||\n      this.businessObjInPanel.extensionElements === null ||\n      this.businessObjInPanel.extensionElements.values === undefined ||\n      this.businessObjInPanel.extensionElements.values.length === 0;\n\n    if (businessObjectHasNoExtensionElements) {\n      return undefined;\n    }\n\n    const propertiesElement: IPropertiesElement = this.businessObjInPanel.extensionElements.values.find(\n      (extensionValue: IExtensionElement) => {\n        if (!extensionValue) {\n          return undefined;\n        }\n\n        const extensionIsPropertiesElement: boolean =\n          extensionValue.$type === 'camunda:Properties' &&\n          extensionValue.values !== undefined &&\n          extensionValue.values !== null;\n\n        return extensionIsPropertiesElement;\n      },\n    );\n\n    return propertiesElement;\n  }\n\n  private createExtensionElement(): void {\n    const extensionValues: Array<IModdleElement> = [];\n    const properties: Array<IProperty> = [];\n    const propertiesElement: IPropertiesElement = this.moddle.create('camunda:Properties', {values: properties});\n    extensionValues.push(propertiesElement);\n\n    const extensionElements: IModdleElement = this.moddle.create('bpmn:ExtensionElements', {\n      values: extensionValues,\n    });\n    this.businessObjInPanel.extensionElements = extensionElements;\n  }\n\n  private createEmptyCamundaProperties(): void {\n    const addPropertiesElement: (element: IPropertiesElement) => number = (element: IPropertiesElement): number =>\n      this.businessObjInPanel.extensionElements.values.push(element);\n\n    const emptyProperties: Array<IProperty> = [];\n\n    const createCamundaProperties: () => IPropertiesElement = (): IPropertiesElement =>\n      this.moddle.create('camunda:Properties', {values: emptyProperties});\n\n    addPropertiesElement(createCamundaProperties());\n  }\n\n  private publishDiagramChange(): void {\n    this.eventAggregator.publish(environment.events.diagramChange);\n  }\n}\n",".key-value-column-left {\n  width: 30%;\n}\n\n.key-value-column-right {\n  width: 70%;\n}\n\n.key-value-input {\n  width: 100%;\n  margin: 2px 0;\n}\n\n.key-value-input:disabled {\n  opacity: 0.5;\n}\n\n.key-value-delete-button {\n  padding-top: 2px;\n  background: transparent;\n  border: none;\n  color: darkgray;\n}\n\n.key-value-delete-button:hover {\n  color: black;\n}\n\n.key-value-delete-button:focus {\n  color: black;\n}\n\n.key-value-delete-button:disabled {\n  opacity: 0.2;\n}\n\n.key-value-delete-button:hover:disabled {\n  opacity: 0.2;\n  color: darkgrey;\n}\n",null,"import {EventAggregator} from 'aurelia-event-aggregator';\nimport {inject} from 'aurelia-framework';\n\nimport {\n  IExtensionElement,\n  IModdleElement,\n  IPropertiesElement,\n  IProperty,\n  IShape,\n} from '@process-engine/bpmn-elements_contracts';\n\nimport {IBpmnModdle, IPageModel} from '../../../../../../../contracts';\nimport environment from '../../../../../../../environment';\n\n@inject(EventAggregator)\nexport class ProcessSection {\n  public path: string = '/sections/process/process';\n  public canHandleElement: boolean = false;\n\n  public newNames: Array<string> = [];\n  public newValues: Array<string> = [];\n  public properties: Array<IProperty> = [];\n  public shouldFocus: boolean = false;\n\n  private businessObjInPanel: IModdleElement;\n  private moddle: IBpmnModdle;\n  private propertiesElement: IPropertiesElement;\n  private eventAggregator: EventAggregator;\n\n  constructor(eventAggregator?: EventAggregator) {\n    this.eventAggregator = eventAggregator;\n  }\n\n  public activate(model: IPageModel): void {\n    this.businessObjInPanel = model.elementInPanel.businessObject.participants[0];\n    this.moddle = model.modeler.get('moddle');\n    this.reloadProperties();\n  }\n\n  public isSuitableForElement(element: IShape): boolean {\n    const businessObjectIsNotExisting: boolean = element === undefined || element.businessObject === undefined;\n    if (businessObjectIsNotExisting) {\n      return false;\n    }\n\n    const elementIsRoot: boolean = element.businessObject.$type === 'bpmn:Collaboration';\n\n    return elementIsRoot;\n  }\n\n  public addProperty(): void {\n    const bpmnPropertyProperties: object = {\n      name: '',\n      value: '',\n    };\n    const bpmnProperty: IProperty = this.moddle.create('camunda:Property', bpmnPropertyProperties);\n\n    this.newNames.push('');\n    this.newValues.push('');\n\n    const businessObjectHasNoExtensionElements: boolean =\n      this.businessObjInPanel.processRef.extensionElements === undefined ||\n      this.businessObjInPanel.processRef.extensionElements === null;\n    if (businessObjectHasNoExtensionElements) {\n      this.createExtensionElement();\n    }\n\n    this.propertiesElement = this.getPropertiesElement();\n\n    const propertiesElementIsUndefined: boolean = this.propertiesElement === undefined;\n\n    if (propertiesElementIsUndefined) {\n      this.createEmptyCamundaProperties();\n      this.propertiesElement = this.getPropertiesElement();\n    }\n\n    const propertyValuesUndefined: boolean = this.propertiesElement.values === undefined;\n    if (propertyValuesUndefined) {\n      this.propertiesElement.values = [];\n    }\n\n    this.propertiesElement.values.push(bpmnProperty);\n    this.properties.push(bpmnProperty);\n    this.publishDiagramChange();\n    this.shouldFocus = true;\n  }\n\n  public removeProperty(index: number): void {\n    const propertyIsLast: boolean = this.propertiesElement.values.length === 1;\n\n    if (propertyIsLast) {\n      this.businessObjInPanel.processRef.extensionElements = undefined;\n    } else {\n      this.propertiesElement.values.splice(index, 1);\n    }\n\n    this.reloadProperties();\n    this.publishDiagramChange();\n  }\n\n  public changeName(index: number): void {\n    this.propertiesElement.values[index].name = this.newNames[index];\n    this.publishDiagramChange();\n  }\n\n  public changeValue(index: number): void {\n    this.propertiesElement.values[index].value = this.newValues[index];\n    this.publishDiagramChange();\n  }\n\n  public inputFieldBlurred(index: number, event: FocusEvent): void {\n    const targetElement: HTMLElement = event.relatedTarget as HTMLElement;\n    const targetIsNoInputField: boolean = !(targetElement instanceof HTMLInputElement);\n\n    if (targetIsNoInputField) {\n      this.checkAndRemoveEmptyProperties(index);\n\n      return;\n    }\n\n    const targetFieldIndex: string = targetElement.getAttribute('data-fieldIndex');\n    const indexAsString: string = index.toString();\n    const targetValueFieldNotRelated: boolean = targetFieldIndex !== indexAsString;\n    if (targetValueFieldNotRelated) {\n      this.checkAndRemoveEmptyProperties(index);\n    }\n  }\n\n  private checkAndRemoveEmptyProperties(index: number): void {\n    const propertyElement: IProperty = this.propertiesElement.values[index];\n    const propertyIsEmpty: boolean = propertyElement.value === '' && propertyElement.name === '';\n    if (propertyIsEmpty) {\n      this.removeProperty(index);\n    }\n  }\n\n  private reloadProperties(): void {\n    this.properties = [];\n    this.newNames = [];\n    this.newValues = [];\n    this.shouldFocus = false;\n\n    const businessObjectHasNoExtensionElements: boolean =\n      this.businessObjInPanel.processRef.extensionElements === undefined ||\n      this.businessObjInPanel.processRef.extensionElements === null;\n\n    if (businessObjectHasNoExtensionElements) {\n      return;\n    }\n\n    this.propertiesElement = this.getPropertiesElement();\n\n    const extensionsPropertiesElement: IPropertiesElement = this.businessObjInPanel.processRef.extensionElements.values.find(\n      (extensionValue: IExtensionElement) => {\n        const extensionIsPropertyElement: boolean =\n          extensionValue.$type === 'camunda:Properties' &&\n          extensionValue.values !== undefined &&\n          extensionValue.values !== null &&\n          extensionValue.values.length !== 0;\n\n        return extensionIsPropertyElement;\n      },\n    );\n\n    const extensionElementHasNoPropertyElement: boolean = extensionsPropertiesElement === undefined;\n\n    if (extensionElementHasNoPropertyElement) {\n      return;\n    }\n\n    const properties: Array<IProperty> = extensionsPropertiesElement.values;\n    for (const property of properties) {\n      const propertyTypeIsNotCamunda: boolean = property.$type !== 'camunda:Property';\n\n      if (propertyTypeIsNotCamunda) {\n        continue;\n      }\n      this.newNames.push(property.name);\n      this.newValues.push(property.value);\n      this.properties.push(property);\n    }\n  }\n\n  private getPropertiesElement(): IPropertiesElement {\n    const propertiesElement: IPropertiesElement = this.businessObjInPanel.processRef.extensionElements.values.find(\n      (extensionValue: IExtensionElement) => {\n        const extensionIsPropertiesElement: boolean = extensionValue.$type === 'camunda:Properties';\n\n        return extensionIsPropertiesElement;\n      },\n    );\n\n    return propertiesElement;\n  }\n\n  private createExtensionElement(): void {\n    const bpmnExecutionListenerProperties: object = {\n      class: '',\n      event: '',\n    };\n    const bpmnExecutionListener: IModdleElement = this.moddle.create(\n      'camunda:ExecutionListener',\n      bpmnExecutionListenerProperties,\n    );\n\n    const extensionValues: Array<IModdleElement> = [];\n    const propertiesElement: IPropertiesElement = this.moddle.create('camunda:Properties', {values: []});\n\n    extensionValues.push(bpmnExecutionListener);\n    extensionValues.push(propertiesElement);\n\n    const extensionElements: IModdleElement = this.moddle.create('bpmn:ExtensionElements', {\n      values: extensionValues,\n    });\n    this.businessObjInPanel.processRef.extensionElements = extensionElements;\n  }\n\n  private createEmptyCamundaProperties(): void {\n    const addPropertiesElement: (element: IPropertiesElement) => number = (element: IPropertiesElement): number =>\n      this.businessObjInPanel.processRef.extensionElements.values.push(element);\n\n    const emptyProperties: Array<IProperty> = [];\n\n    const createCamundaProperties: () => IPropertiesElement = (): IPropertiesElement =>\n      this.moddle.create('camunda:Properties', {values: emptyProperties});\n\n    addPropertiesElement(createCamundaProperties());\n  }\n\n  private publishDiagramChange(): void {\n    this.eventAggregator.publish(environment.events.diagramChange);\n  }\n}\n",".process-properties-panel {\n  background-color: #f7f7f7;\n  border-bottom: 1px solid #eee;\n  border-left: 1px solid #eee;\n}\n\n.key-value-column {\n  width: 50%;\n}\n\n.key-value-input {\n  width: 100%;\n}\n",null,"import {IShape} from '@process-engine/bpmn-elements_contracts';\n\nimport {IBpmnModeler, IIndextab, IPageModel, ISection} from '../../../../../contracts';\nimport {BasicsSection} from './sections/basics/basics';\n\nexport class Forms implements IIndextab {\n  public title: string = 'Forms';\n  public path: string = '/indextabs/forms/forms';\n  public elementInPanel: IShape;\n  public modeler: IBpmnModeler;\n  public canHandleElement: boolean = false;\n  public sections: Array<ISection>;\n\n  private basicsSection: ISection = new BasicsSection();\n\n  constructor() {\n    this.sections = [this.basicsSection];\n  }\n\n  public activate(model: IPageModel): void {\n    this.elementInPanel = model.elementInPanel;\n    this.modeler = model.modeler;\n  }\n\n  public isSuitableForElement(element: IShape): boolean {\n    if (element === undefined || element === null) {\n      return false;\n    }\n\n    this.sections.forEach((section: ISection) => {\n      section.canHandleElement = section.isSuitableForElement(element);\n    });\n\n    return this.sections.some((section: ISection) => {\n      return section.canHandleElement;\n    });\n  }\n}\n","",null,"import {EventAggregator} from 'aurelia-event-aggregator';\nimport {inject} from 'aurelia-framework';\nimport {ValidateEvent, ValidationController, ValidationRules} from 'aurelia-validation';\n\nimport {\n  IEnumValue,\n  IExtensionElement,\n  IForm,\n  IFormElement,\n  IModdleElement,\n  IShape,\n} from '@process-engine/bpmn-elements_contracts';\n\nimport {IBpmnModdle, IBpmnModeler, IElementRegistry, IPageModel, ISection} from '../../../../../../../contracts';\nimport environment from '../../../../../../../environment';\n\nenum FormfieldTypes {\n  string = 'string',\n  long = 'long',\n  number = 'number',\n  boolean = 'boolean',\n  date = 'date',\n  enum = 'enum',\n  customType = 'custom type',\n}\n\n@inject(ValidationController, EventAggregator)\nexport class BasicsSection implements ISection {\n  public path: string = '/sections/basics/basics';\n  public canHandleElement: boolean = true;\n  public validationError: boolean = false;\n  public validationController: ValidationController;\n  public isFormSelected: boolean = false;\n  public businessObjInPanel: IFormElement;\n  public forms: Array<IForm>;\n  public selectedForm: IForm;\n  public selectedType: string;\n  // eslint-disable-next-line @typescript-eslint/member-naming\n  public FormfieldTypes: typeof FormfieldTypes = FormfieldTypes;\n  public customType: string;\n  public enumValues: Array<IEnumValue> = [];\n  public newEnumValueIds: Array<string> = [];\n  public newEnumValueNames: Array<string> = [];\n  public booleanDefaultValue: boolean;\n\n  private bpmnModdle: IBpmnModdle;\n  private modeler: IBpmnModeler;\n  private selectedIndex: number;\n  private formElement: IFormElement;\n  private previousFormId: string;\n  private previousForm: IForm;\n  private eventAggregator: EventAggregator;\n\n  constructor(controller?: ValidationController, eventAggregator?: EventAggregator) {\n    this.validationController = controller;\n    this.eventAggregator = eventAggregator;\n  }\n\n  public activate(model: IPageModel): void {\n    this.businessObjInPanel = model.elementInPanel.businessObject;\n\n    this.modeler = model.modeler;\n    this.bpmnModdle = this.modeler.get('moddle');\n\n    this.validationController.subscribe((event: ValidateEvent) => {\n      this.validateFormId(event);\n    });\n\n    this.init();\n\n    if (this.validationError) {\n      this.previousForm.id = this.previousFormId;\n      this.validationController.validate();\n    }\n  }\n\n  public detached(): void {\n    this.validateOnDetach();\n  }\n\n  public isSuitableForElement(element: IShape): boolean {\n    const elementHasNoBusinessObject: boolean = element.businessObject === undefined || element.businessObject === null;\n\n    if (elementHasNoBusinessObject) {\n      return false;\n    }\n\n    return element.businessObject.$type === 'bpmn:UserTask';\n  }\n\n  public addEnumValue(): void {\n    const enumValue: {id: string; value: string} = {\n      id: `Value_${this.generateRandomId()}`,\n      value: '',\n    };\n    const bpmnValue: IEnumValue = this.bpmnModdle.create('camunda:Value', enumValue);\n\n    this.enumValues.push(bpmnValue);\n    Object.assign(this.formElement.fields[this.selectedIndex].values, this.enumValues);\n    this.reloadEnumValues();\n    this.publishDiagramChange();\n  }\n\n  public removeEnumValue(index: number): void {\n    this.formElement.fields[this.selectedIndex].values.splice(index, 1);\n    this.reloadEnumValues();\n    this.publishDiagramChange();\n  }\n\n  public changeEnumValueId(index: number): void {\n    this.enumValues[index].id = this.newEnumValueIds[index];\n    Object.assign(this.formElement.fields[this.selectedIndex].values, this.enumValues);\n    this.publishDiagramChange();\n  }\n\n  public changeEnumValueName(index: number): void {\n    this.enumValues[index].name = this.newEnumValueNames[index];\n    Object.assign(this.formElement.fields[this.selectedIndex].values, this.enumValues);\n    this.publishDiagramChange();\n  }\n\n  public removeSelectedForm(): void {\n    const noFormFieldSelected: boolean = !this.isFormSelected;\n    if (noFormFieldSelected) {\n      return;\n    }\n\n    this.formElement.fields.splice(this.selectedIndex, 1);\n\n    this.isFormSelected = false;\n    this.selectedForm = undefined;\n    this.selectedIndex = undefined;\n\n    this.reloadForms();\n    this.publishDiagramChange();\n  }\n\n  public async addForm(): Promise<void> {\n    const bpmnFormObject: IForm = {\n      id: `Form_${this.generateRandomId()}`,\n      label: '',\n      defaultValue: '',\n    };\n    const bpmnForm: IForm = this.bpmnModdle.create('camunda:FormField', bpmnFormObject);\n\n    if (this.formElement.fields === undefined || this.formElement.fields === null) {\n      this.formElement.fields = [];\n    }\n\n    this.formElement.fields.push(bpmnForm);\n    this.forms.push(bpmnForm);\n    this.selectedForm = bpmnForm;\n\n    this.selectForm();\n    this.publishDiagramChange();\n  }\n\n  public updateId(): void {\n    this.validationController.validate();\n\n    const hasValidationErrors: boolean = this.validationController.errors.length > 0;\n    if (hasValidationErrors) {\n      this.resetId();\n    }\n\n    const isSelectedFormIdNotExisting: boolean = this.selectedForm === null || this.selectedForm.id === '';\n    if (isSelectedFormIdNotExisting) {\n      return;\n    }\n\n    this.formElement.fields[this.selectedIndex].id = this.selectedForm.id;\n    this.publishDiagramChange();\n  }\n\n  public selectForm(): void {\n    if (this.validationError) {\n      this.previousForm.id = this.previousFormId;\n    }\n\n    this.previousFormId = this.selectedForm.id;\n    this.previousForm = this.selectedForm;\n\n    this.validationController.validate();\n\n    this.isFormSelected = true;\n\n    const selectedFormHasType: boolean = this.selectedForm.type !== undefined;\n    this.selectedType = selectedFormHasType ? this.getTypeAndHandleCustomType(this.selectedForm.type) : null;\n\n    this.selectedIndex = this.getSelectedIndex();\n\n    this.setValidationRules();\n    this.reloadEnumValues();\n  }\n\n  public updateType(): void {\n    /*\n     * Evaluates the type of the form field.\n     *\n     * If the user selected a custom type, find out what type the user provided.\n     */\n    const type: string = ((): string => {\n      const selectedTypeIsNotCustomType: boolean = this.selectedType !== FormfieldTypes.customType;\n\n      if (selectedTypeIsNotCustomType) {\n        return this.selectedType;\n      }\n\n      const customTypeIsDefined: boolean = this.customType !== undefined;\n      return customTypeIsDefined ? this.customType : '';\n    })();\n\n    this.formElement.fields[this.selectedIndex].type = type;\n    this.reloadEnumValues();\n    this.publishDiagramChange();\n  }\n\n  public updateLabel(): void {\n    this.formElement.fields[this.selectedIndex].label = this.selectedForm.label;\n    this.publishDiagramChange();\n  }\n\n  public updateDefaultValue(): void {\n    const selectedTypeIsBoolean: boolean = this.selectedType === FormfieldTypes.boolean;\n    if (selectedTypeIsBoolean) {\n      this.formElement.fields[this.selectedIndex].defaultValue = `${this.booleanDefaultValue}`;\n    } else {\n      this.formElement.fields[this.selectedIndex].defaultValue = this.selectedForm.defaultValue;\n    }\n\n    this.publishDiagramChange();\n  }\n\n  private validateOnDetach(): void {\n    if (!this.validationError) {\n      return;\n    }\n\n    const bpmnFormFieldObject: IForm = {\n      id: `Form_${this.generateRandomId()}`,\n      label: '',\n      defaultValue: '',\n    };\n    this.bpmnModdle.create('camunda:FormField', bpmnFormFieldObject);\n\n    if (this.formElement.fields === undefined || this.formElement.fields === null) {\n      this.formElement.fields = [];\n    }\n\n    this.resetIdOnSelectedOrPrevious();\n\n    this.validationController.validate();\n    this.updateId();\n  }\n\n  private resetIdOnSelectedOrPrevious(): void {\n    if (this.selectedForm !== null) {\n      this.selectedForm.id = this.previousFormId;\n    } else {\n      this.previousForm.id = this.previousFormId;\n    }\n  }\n\n  private init(): void {\n    this.isFormSelected = false;\n    if (this.canHandleElement) {\n      this.formElement = this.getOrCreateFormElement();\n      this.reloadForms();\n    }\n  }\n\n  private resetId(): void {\n    this.resetIdOnSelectedOrPrevious();\n\n    this.validationController.validate();\n  }\n\n  private reloadEnumValues(): void {\n    const formIsNotEnum: boolean = this.selectedForm.type !== FormfieldTypes.enum;\n    const noValuesInEnum: boolean = this.selectedForm.values === undefined || this.selectedForm.values.length === 0;\n\n    if (formIsNotEnum) {\n      return;\n    }\n\n    if (noValuesInEnum) {\n      this.formElement.fields[this.selectedIndex].values = [];\n    }\n\n    /*\n     * Prepare new form fields.\n     */\n    const enumValues: Array<IEnumValue> = [];\n    const newEnumValueIds: Array<string> = [];\n    const newEnumValueNames: Array<string> = [];\n\n    for (const value of this.selectedForm.values) {\n      const camundaValue: boolean = value.$type !== 'camunda:Value';\n      if (camundaValue) {\n        continue;\n      }\n\n      enumValues.push(value);\n      newEnumValueIds.push(value.id);\n      newEnumValueNames.push(value.name);\n    }\n\n    /*\n     * Assign new form fields values.\n     */\n    this.enumValues = enumValues;\n    this.newEnumValueIds = newEnumValueIds;\n    this.newEnumValueNames = newEnumValueNames;\n  }\n\n  private reloadForms(): void {\n    this.forms = [];\n\n    const noFormFieldsExist: boolean =\n      this.formElement === undefined ||\n      this.formElement === null ||\n      this.formElement.fields === undefined ||\n      this.formElement.fields === null ||\n      this.formElement.fields.length === 0;\n\n    if (noFormFieldsExist) {\n      return;\n    }\n\n    this.forms = this.formElement.fields.filter((form: IForm) => {\n      const formIsFormField: boolean = form.$type === 'camunda:FormField';\n\n      return formIsFormField;\n    });\n  }\n\n  private getTypeAndHandleCustomType(type: string): string {\n    const typeIsRegularType: boolean =\n      type === FormfieldTypes.string ||\n      type === FormfieldTypes.long ||\n      type === FormfieldTypes.number ||\n      type === FormfieldTypes.boolean ||\n      type === FormfieldTypes.date ||\n      type === FormfieldTypes.enum ||\n      type === FormfieldTypes.customType ||\n      type === null;\n\n    if (typeIsRegularType) {\n      this.customType = '';\n      return type;\n    }\n\n    this.customType = type;\n    return FormfieldTypes.customType;\n  }\n\n  private getSelectedIndex(): number {\n    return this.formElement.fields.findIndex((form: IForm) => {\n      const formIsSelectedForm: boolean = form.id === this.selectedForm.id;\n\n      return formIsSelectedForm;\n    });\n  }\n\n  private getOrCreateFormElement(): IModdleElement {\n    const elementHasNoExtensionsElement: boolean =\n      this.businessObjInPanel.extensionElements === undefined || this.businessObjInPanel.extensionElements === null;\n\n    if (elementHasNoExtensionsElement) {\n      this.createExtensionElement();\n    }\n\n    const extensionsValues: Array<IModdleElement> = this.businessObjInPanel.extensionElements.values;\n\n    const formElement: IModdleElement = extensionsValues.find((extensionValue: IModdleElement) => {\n      const extensionIsValidForm: boolean = extensionValue.$type === 'camunda:FormData';\n\n      return extensionIsValidForm;\n    });\n\n    if (formElement === undefined) {\n      this.createEmptyFormData();\n      return this.getOrCreateFormElement();\n    }\n\n    return formElement;\n  }\n\n  private createExtensionElement(): void {\n    const values: Array<IFormElement> = [];\n    const fields: Array<IForm> = [];\n    const formData: IFormElement = this.bpmnModdle.create('camunda:FormData', {fields: fields});\n    values.push(formData);\n\n    this.businessObjInPanel.formKey = 'Form Key';\n    const extensionElements: IModdleElement = this.bpmnModdle.create('bpmn:ExtensionElements', {values: values});\n    this.businessObjInPanel.extensionElements = extensionElements;\n  }\n\n  private createEmptyFormData(): void {\n    const fields: Array<IModdleElement> = [];\n    const extensionFormElement: IModdleElement = this.bpmnModdle.create('camunda:FormData', {fields: fields});\n    this.businessObjInPanel.extensionElements.values.push(extensionFormElement);\n  }\n\n  private generateRandomId(): string {\n    let randomId: string = '';\n    const possible: string = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    const randomIdLength: number = 8;\n    for (let i: number = 0; i < randomIdLength; i++) {\n      randomId += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return randomId;\n  }\n\n  private validateFormId(event: ValidateEvent): void {\n    if (event.type !== 'validate') {\n      return;\n    }\n\n    this.validationError = false;\n    for (const result of event.results) {\n      if (result.rule.property.displayName !== 'formId') {\n        continue;\n      }\n\n      if (result.valid === false) {\n        this.validationError = true;\n        document.getElementById(result.rule.property.displayName).style.border = '2px solid red';\n      } else {\n        document.getElementById(result.rule.property.displayName).style.border = '';\n      }\n    }\n  }\n\n  private hasFormSameIdAsSelected(forms: Array<IForm>): boolean {\n    const unselectedFormWithSameId: IForm = forms.find((form: IForm) => {\n      const formHasSameIdAsSelectedForm: boolean = form.id === this.selectedForm.id;\n      const formIsNotSelectedForm: boolean = form !== this.selectedForm;\n\n      return formHasSameIdAsSelectedForm && formIsNotSelectedForm;\n    });\n\n    return unselectedFormWithSameId !== undefined;\n  }\n\n  private getFormDataFromBusinessObject(businessObject: IModdleElement): IFormElement {\n    const extensionElement: IExtensionElement = businessObject.extensionElements;\n    const hasNoExtensionElements: boolean = extensionElement === undefined;\n    if (hasNoExtensionElements) {\n      return undefined;\n    }\n\n    const extensions: Array<IModdleElement> = extensionElement.values;\n    return extensions.find((extension: IModdleElement) => {\n      const isFormData: boolean = extension.$type === 'camunda:FormData';\n\n      return isFormData;\n    });\n  }\n\n  private getFormsById(id: string): Array<IShape> {\n    const elementRegistry: IElementRegistry = this.modeler.get('elementRegistry');\n\n    const formsWithId: Array<IShape> = elementRegistry.filter((element: IShape) => {\n      const currentBusinessObject: IModdleElement = element.businessObject;\n\n      const isNoUserTask: boolean = currentBusinessObject.$type !== 'bpmn:UserTask';\n      if (isNoUserTask) {\n        return false;\n      }\n      const formData: IFormElement = this.getFormDataFromBusinessObject(currentBusinessObject);\n      if (formData === undefined) {\n        return false;\n      }\n\n      const forms: Array<IForm> = formData.fields;\n\n      return this.hasFormSameIdAsSelected(forms);\n    });\n\n    const selectedTypeIsBoolean: boolean = this.selectedType === FormfieldTypes.boolean;\n    if (selectedTypeIsBoolean) {\n      this.booleanDefaultValue = this.selectedForm.defaultValue === 'true' || this.selectedForm.defaultValue === '1';\n    }\n\n    return formsWithId;\n  }\n\n  private formIdIsUnique(id: string): boolean {\n    const formsWithSameId: Array<IShape> = this.getFormsById(id);\n    const isIdUnique: boolean = formsWithSameId.length === 0;\n\n    return isIdUnique;\n  }\n\n  private setValidationRules(): void {\n    ValidationRules.ensure((form: IForm) => form.id)\n      .displayName('formId')\n      .required()\n      .withMessage('ID cannot be blank.')\n      .then()\n      .satisfies((id: string) => this.formIdIsUnique(id))\n      .withMessage('ID already exists.')\n      .on(this.selectedForm);\n  }\n\n  private publishDiagramChange(): void {\n    this.eventAggregator.publish(environment.events.diagramChange);\n  }\n}\n",".key-value-column-left {\n  width: 30%;\n}\n\n.key-value-column-right {\n  width: 70%;\n}\n\n.key-value-input {\n  width: 100%;\n  margin: 2px 0;\n}\n\n.key-value-input:disabled {\n  opacity: 0.5;\n}\n",null,"import {IShape} from '@process-engine/bpmn-elements_contracts';\n\nimport {IIndextab, ISection} from '../../../../../contracts';\nimport {BasicsSection} from './sections/basics/basics';\nimport {CallActivitySection} from './sections/call-activity/call-activity';\nimport {ConditionalEventSection} from './sections/conditional-event/conditional-event';\nimport {ErrorEventSection} from './sections/error-event/error-event';\nimport {EscalationEventSection} from './sections/escalation-event/escalation-event';\nimport {FlowSection} from './sections/flow/flow';\nimport {MessageEventSection} from './sections/message-event/message-event';\nimport {MessageTaskSection} from './sections/message-task/message-task';\nimport {PoolSection} from './sections/pool/pool';\nimport {ProcessSection} from './sections/process/process';\nimport {ScriptTaskSection} from './sections/script-task/script-task';\nimport {ServiceTaskSection} from './sections/service-task/service-task';\nimport {SignalEventSection} from './sections/signal-event/signal-event';\nimport {TimerEventSection} from './sections/timer-event/timer-event';\nimport {LinkEventSection} from './sections/link-event/link-event';\n\nexport class General implements IIndextab {\n  public title: string = 'General';\n  public path: string = '/indextabs/general/general';\n\n  public basicsSection: ISection = new BasicsSection();\n  public poolSection: ISection = new PoolSection();\n  public messageEventSection: ISection = new MessageEventSection();\n  public messageTaskSection: ISection = new MessageTaskSection();\n  public signalEventSection: ISection = new SignalEventSection();\n  public scriptTaskSection: ISection = new ScriptTaskSection();\n  public callActivitySection: ISection = new CallActivitySection();\n  public flowSection: ISection = new FlowSection();\n  public errorEventSection: ISection = new ErrorEventSection();\n  public escalationEventSection: ISection = new EscalationEventSection();\n  public timerEventSection: ISection = new TimerEventSection();\n  public conditionalEventSection: ISection = new ConditionalEventSection();\n  public processSection: ISection = new ProcessSection();\n  public serviceTaskSection: ISection = new ServiceTaskSection();\n  public linkEventSection: ISection = new LinkEventSection();\n\n  public sections: Array<ISection> = [\n    this.basicsSection,\n    this.poolSection,\n    this.messageEventSection,\n    this.messageTaskSection,\n    this.signalEventSection,\n    this.scriptTaskSection,\n    this.callActivitySection,\n    this.flowSection,\n    this.errorEventSection,\n    this.escalationEventSection,\n    this.timerEventSection,\n    this.conditionalEventSection,\n    this.processSection,\n    this.serviceTaskSection,\n    this.linkEventSection,\n  ];\n\n  public canHandleElement: boolean = true;\n\n  public isSuitableForElement(element: IShape): boolean {\n    this.sections.forEach((section: ISection) => {\n      section.canHandleElement = section.isSuitableForElement(element);\n    });\n\n    return this.sections.some((section: ISection) => {\n      return section.canHandleElement;\n    });\n  }\n}\n","",null,"import {inject} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\n\nimport {IDiagram, ISolution} from '@process-engine/solutionexplorer.contracts';\n\nimport {ISolutionEntry, ISolutionService} from '../../../../../../contracts';\n\n@inject('SolutionService', Router)\nexport class GeneralRepository {\n  private solutionService: ISolutionService;\n  private router: Router;\n\n  constructor(solutionService: ISolutionService, router: Router) {\n    this.solutionService = solutionService;\n    this.router = router;\n  }\n\n  public async getAllDiagrams(): Promise<Array<IDiagram>> {\n    const currentSolutionUri: string = this.router.currentInstruction.queryParams.solutionUri;\n\n    const solutionEntry: ISolutionEntry = await this.solutionService.getSolutionEntryForUri(currentSolutionUri);\n    const solution: ISolution = await solutionEntry.service.loadSolution();\n\n    const allDiagramsInSolution: Array<IDiagram> = solution.diagrams;\n\n    return allDiagramsInSolution;\n  }\n}\n","import {EventAggregator} from 'aurelia-event-aggregator';\nimport {inject} from 'aurelia-framework';\nimport {ValidateEvent, ValidationController, ValidationRules} from 'aurelia-validation';\n\nimport {IModdleElement, IShape} from '@process-engine/bpmn-elements_contracts';\n\nimport {\n  IBpmnModdle,\n  IBpmnModeler,\n  IElementRegistry,\n  IModeling,\n  IPageModel,\n  ISection,\n} from '../../../../../../../contracts';\nimport environment from '../../../../../../../environment';\n\n@inject(ValidationController, EventAggregator)\nexport class BasicsSection implements ISection {\n  public path: string = '/sections/basics/basics';\n  public canHandleElement: boolean = true;\n  public businessObjInPanel: IModdleElement;\n  public elementDocumentation: string;\n  public validationError: boolean = false;\n  public showModal: boolean = false;\n  public elementType: string;\n\n  public docsInput: HTMLElement;\n\n  private modeling: IModeling;\n  private modeler: IBpmnModeler;\n  private bpmnModdle: IBpmnModdle;\n  private elementInPanel: IShape;\n  private previousProcessRefId: string;\n  private validationController: ValidationController;\n  private eventAggregator: EventAggregator;\n\n  constructor(controller?: ValidationController, eventAggregator?: EventAggregator) {\n    this.validationController = controller;\n    this.eventAggregator = eventAggregator;\n  }\n\n  public activate(model: IPageModel): void {\n    if (this.validationError) {\n      this.businessObjInPanel.id = this.previousProcessRefId;\n      this.validationController.validate();\n    }\n\n    this.elementInPanel = model.elementInPanel;\n    this.businessObjInPanel = model.elementInPanel.businessObject;\n    this.previousProcessRefId = model.elementInPanel.businessObject.id;\n\n    this.modeling = model.modeler.get('modeling');\n    this.bpmnModdle = model.modeler.get('moddle');\n    this.modeler = model.modeler;\n\n    this.validationController.subscribe((event: ValidateEvent) => {\n      this.validateFormId(event);\n    });\n\n    this.init();\n\n    this.setValidationRules();\n  }\n\n  public attached(): void {\n    this.recoverInputHeight();\n\n    this.saveInputHeightOnChange();\n  }\n\n  public detached(): void {\n    this.docsInput.removeEventListener('mousedown', this.saveInputHeightOnMouseUp);\n\n    if (!this.validationError) {\n      return;\n    }\n\n    this.businessObjInPanel.id = this.previousProcessRefId;\n    this.validationController.validate();\n  }\n\n  public isSuitableForElement(element: IShape): boolean {\n    if (element === undefined || element === null) {\n      return false;\n    }\n\n    return true;\n  }\n\n  public updateDocumentation(): void {\n    this.elementInPanel.documentation = [];\n\n    const documentationPropertyObject: object = {text: this.elementDocumentation};\n    const documentation: IModdleElement = this.bpmnModdle.create('bpmn:Documentation', documentationPropertyObject);\n    this.elementInPanel.documentation.push(documentation);\n\n    const elementInPanelDocumentation: object = {documentation: this.elementInPanel.documentation};\n    this.modeling.updateProperties(this.elementInPanel, elementInPanelDocumentation);\n    this.publishDiagramChange();\n  }\n\n  public updateName(): void {\n    this.modeling.updateLabel(this.elementInPanel, this.businessObjInPanel.name);\n\n    this.publishDiagramChange();\n  }\n\n  public updateId(): void {\n    this.validationController.validate();\n\n    if (this.validationController.errors.length > 0) {\n      return;\n    }\n\n    const updateProperty: object = {id: this.businessObjInPanel.id};\n    this.modeling.updateProperties(this.elementInPanel, updateProperty);\n    this.publishDiagramChange();\n  }\n\n  private init(): void {\n    if (!this.businessObjInPanel) {\n      return;\n    }\n\n    this.elementType = this.humanizeElementType(this.businessObjInPanel.$type);\n\n    const documentationExists: boolean =\n      this.businessObjInPanel.documentation !== undefined &&\n      this.businessObjInPanel.documentation !== null &&\n      this.businessObjInPanel.documentation.length > 0;\n\n    if (documentationExists) {\n      this.elementDocumentation = this.businessObjInPanel.documentation[0].text;\n    } else {\n      this.elementDocumentation = '';\n    }\n  }\n\n  private humanizeElementType(type: string): string {\n    const rawType: string = type.replace(/^bpmn:/, '');\n    const humanizedType: string = rawType.replace(/([a-z])([A-Z])/, '$1 $2');\n\n    return humanizedType;\n  }\n\n  private validateFormId(event: ValidateEvent): void {\n    if (event.type !== 'validate') {\n      return;\n    }\n\n    this.validationError = false;\n    for (const result of event.results) {\n      if (result.rule.property.displayName !== 'elementId') {\n        continue;\n      }\n      if (result.valid === false) {\n        this.validationError = true;\n        document.getElementById(result.rule.property.displayName).style.border = '2px solid red';\n      } else {\n        document.getElementById(result.rule.property.displayName).style.border = '';\n      }\n    }\n  }\n\n  private formIdIsUnique(id: string): boolean {\n    const elementRegistry: IElementRegistry = this.modeler.get('elementRegistry');\n\n    const elementsWithSameId: Array<IShape> = elementRegistry.filter((element: IShape) => {\n      const elementIsBusinessObjectInPanel: boolean = element.businessObject === this.businessObjInPanel;\n      if (elementIsBusinessObjectInPanel) {\n        return false;\n      }\n\n      const elementIsOfTypeLabel: boolean = element.type === 'label';\n      if (elementIsOfTypeLabel) {\n        return false;\n      }\n\n      const elementHasSameId: boolean = element.businessObject.id === this.businessObjInPanel.id;\n\n      return elementHasSameId;\n    });\n\n    return elementsWithSameId.length === 0;\n  }\n\n  private isProcessIdUnique(id: string): boolean {\n    // eslint-disable-next-line no-underscore-dangle\n    const elementIds: Array<string> = this.modeler._definitions.rootElements.map((rootElement: IModdleElement) => {\n      return rootElement.id;\n    });\n\n    const currentId: number = elementIds.indexOf(id);\n    elementIds.splice(currentId, 1);\n\n    return !elementIds.includes(id);\n  }\n\n  private setValidationRules(): void {\n    ValidationRules.ensure((businessObject: IModdleElement) => businessObject.id)\n      .displayName('elementId')\n      .required()\n      .withMessage('ID cannot be blank.')\n      .then()\n      .satisfies((id: string) => this.formIdIsUnique(id) && this.isProcessIdUnique(id))\n      .withMessage('ID already exists.')\n      .on(this.businessObjInPanel);\n  }\n\n  private saveInputHeightOnChange(): void {\n    this.docsInput.addEventListener('mousedown', this.saveInputHeightOnMouseUp);\n  }\n\n  private recoverInputHeight(): void {\n    this.docsInput.style.height = `${localStorage.getItem('docsInputHeight')}px`;\n  }\n\n  private saveInputHeightOnMouseUp: EventListenerOrEventListenerObject = () => {\n    const resizeListenerFunction: EventListenerOrEventListenerObject = (): void => {\n      localStorage.setItem('docsInputHeight', this.docsInput.clientHeight.toString());\n      window.removeEventListener('mouseup', resizeListenerFunction);\n    };\n    window.addEventListener('mouseup', resizeListenerFunction);\n  };\n\n  private publishDiagramChange(): void {\n    this.eventAggregator.publish(environment.events.diagramChange);\n  }\n}\n",".validation_error {\n  position: relative;\t\n  display: inline-block;\n  margin-left: 5px;\t\n  margin-top: 5px;\n  z-index: 0;\t\n  opacity: 1;\t  \n  color: red;\n  font-size: 16px;\n}\n\n.panel--general {\n  flex: 1 100%;\n  margin-top: 0;\n}\n\n.docs {\n  min-height: 55px;\n  max-height: 400px;\n}\n\n.props-input-textarea {\n  width: 100%;\n  height: 25px;\n  min-height: 25px;\n  padding-bottom: 5px;\n  margin-top: 5px;\n  background: transparent;\n  border: none;\n  border-bottom: 1px solid #e9e9e9;\n  font-weight: 400;\n  color: #5c5c5c;\n  text-overflow: ellipsis;\n}\n\n.props-input-textarea:disabled {\n  pointer-events: none;\n  opacity: 0.5;\n}\n\n.props-table-docs {\n  width: 100%;\n}\n\n.props-table-docs td {\n  width: 100%;\n  padding: 5px 0;\n  color: #a5a5a5;\n}\n\n.docs-enlarge-link {\n  cursor: pointer;\n  color: #007bff !important;\n}\n\n.docs-enlarge-text:hover {\n  text-decoration: underline;\n}\n",null,"import {EventAggregator} from 'aurelia-event-aggregator';\nimport {inject} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\n\nimport {ICallActivityElement, IShape} from '@process-engine/bpmn-elements_contracts';\nimport {IDiagram} from '@process-engine/solutionexplorer.contracts';\n\nimport {IPageModel, ISection} from '../../../../../../../contracts';\nimport environment from '../../../../../../../environment';\nimport {GeneralService} from '../../service/general.service';\n\n@inject(GeneralService, Router, EventAggregator)\nexport class CallActivitySection implements ISection {\n  public path: string = '/sections/call-activity/call-activity';\n  public canHandleElement: boolean = false;\n  public allDiagrams: Array<IDiagram>;\n  public selectValue: string;\n  public selectedDiagramName: string;\n\n  public previouslySelectedDiagram: string;\n\n  private businessObjInPanel: ICallActivityElement;\n  private generalService: GeneralService;\n  private router: Router;\n  private eventAggregator: EventAggregator;\n  private activeSolutionUri: string;\n\n  constructor(generalService?: GeneralService, router?: Router, eventAggregator?: EventAggregator) {\n    this.generalService = generalService;\n    this.router = router;\n    this.eventAggregator = eventAggregator;\n  }\n\n  public async activate(model: IPageModel): Promise<void> {\n    this.activeSolutionUri = this.router.currentInstruction.queryParams.solutionUri;\n    this.businessObjInPanel = model.elementInPanel.businessObject;\n\n    await this.getAllDiagrams();\n\n    this.previouslySelectedDiagram = this.businessObjInPanel.calledElement;\n    this.selectedDiagramName = this.businessObjInPanel.calledElement;\n  }\n\n  public isSuitableForElement(element: IShape): boolean {\n    const elementIsCallActivity: boolean =\n      element !== undefined &&\n      element.businessObject !== undefined &&\n      element.businessObject.$type === 'bpmn:CallActivity';\n\n    return elementIsCallActivity;\n  }\n\n  public navigateToCalledDiagram(): void {\n    this.router.navigateToRoute('design', {\n      diagramName: this.selectedDiagramName,\n      solutionUri: this.activeSolutionUri,\n      view: 'detail',\n    });\n  }\n\n  public isPartOfAllDiagrams(diagramName: string): boolean {\n    return this.allDiagrams.some((diagram: IDiagram): boolean => {\n      return diagram.name === diagramName;\n    });\n  }\n\n  public updateCalledDiagram(): void {\n    const diagramSelectedViaSelect: boolean = this.selectValue !== undefined;\n    if (diagramSelectedViaSelect) {\n      this.selectedDiagramName = this.selectValue;\n      this.selectValue = undefined;\n    }\n\n    this.businessObjInPanel.calledElement = this.selectedDiagramName;\n\n    this.publishDiagramChange();\n  }\n\n  private async getAllDiagrams(): Promise<void> {\n    const allDiagramsInSolution: Array<IDiagram> = await this.generalService.getAllDiagrams();\n\n    const currentDiagramName: string = this.router.currentInstruction.params.diagramName;\n    const allDiagramWithoutCurrentOne: Array<IDiagram> = allDiagramsInSolution.filter((diagram: IDiagram) => {\n      return diagram.name !== currentDiagramName;\n    });\n\n    this.allDiagrams = allDiagramWithoutCurrentOne;\n  }\n\n  private publishDiagramChange(): void {\n    this.eventAggregator.publish(environment.events.diagramChange);\n  }\n}\n",".navigation-button {\n  width: 100%;\n  margin-top: 10px;\n}\n\n.navigation-button:disabled {\n  pointer-events: none;\n  opacity: 0.5;\n}\n\n.called-process-selection {\n  position: relative;\n  width: 100%;\n  height: 25px;\n  padding: 0;\n  margin: 0;\n  border: 0;\n}\n\n.called-process-selection__select {\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  width: 100%;\n  height: 25px;\n  padding: 0;\n  margin: 0;\n  line-height: 20px;\n}\n\n.called-process-selection__input {\n  position: absolute;\n  top: 2px;\n  left: 3px;\n  width: calc(100% - 17px);\n  height: 21px;\n  border: 1px solid #A9A9A9;\n}\n",null,"import {EventAggregator} from 'aurelia-event-aggregator';\nimport {inject} from 'aurelia-framework';\n\nimport {IConditionalEventElement, IEventElement, IModdleElement, IShape} from '@process-engine/bpmn-elements_contracts';\n\nimport {IBpmnModdle, ILinting, IPageModel, ISection} from '../../../../../../../contracts';\nimport environment from '../../../../../../../environment';\n\n@inject(EventAggregator)\nexport class ConditionalEventSection implements ISection {\n  public path: string = '/sections/conditional-event/conditional-event';\n  public canHandleElement: boolean = false;\n  public conditionBody: string;\n  public variableName: string;\n  public variableEvent: string;\n\n  private businessObjInPanel: IConditionalEventElement;\n  private moddle: IBpmnModdle;\n  private linter: ILinting;\n  private conditionObject: IModdleElement;\n  private eventAggregator: EventAggregator;\n\n  constructor(eventAggregator?: EventAggregator) {\n    this.eventAggregator = eventAggregator;\n  }\n\n  public activate(model: IPageModel): void {\n    this.moddle = model.modeler.get('moddle');\n    this.linter = model.modeler.get('linting');\n    this.businessObjInPanel = model.elementInPanel.businessObject as IConditionalEventElement;\n\n    const {variableName, variableEvent, condition} = this.businessObjInPanel.eventDefinitions[0];\n\n    this.variableEvent = variableEvent === undefined ? '' : variableEvent;\n    this.variableName = variableName === undefined ? '' : variableName;\n    this.conditionBody = condition === undefined ? '' : condition.body;\n\n    this.conditionObject = this.moddle.create('bpmn:FormalExpression', {body: this.conditionBody});\n    this.businessObjInPanel.eventDefinitions[0].condition = this.conditionObject;\n  }\n\n  public isSuitableForElement(element: IShape): boolean {\n    const elementHasNoBusinessObject: boolean = element === undefined || element.businessObject === undefined;\n    if (elementHasNoBusinessObject) {\n      return false;\n    }\n\n    const eventElement: IEventElement = element.businessObject as IEventElement;\n\n    const elementIsConditionalEvent: boolean =\n      eventElement.eventDefinitions !== undefined &&\n      eventElement.eventDefinitions[0] !== undefined &&\n      eventElement.eventDefinitions[0].$type === 'bpmn:ConditionalEventDefinition';\n\n    return elementIsConditionalEvent;\n  }\n\n  public updateCondition(): void {\n    this.businessObjInPanel.eventDefinitions[0].condition.body = this.conditionBody;\n    this.publishDiagramChange();\n\n    if (this.linter.lintingActive()) {\n      this.linter.update();\n    }\n  }\n\n  public updateVariableName(): void {\n    this.businessObjInPanel.eventDefinitions[0].variableName = this.variableName;\n    this.publishDiagramChange();\n  }\n\n  public updateVariableEvent(): void {\n    this.businessObjInPanel.eventDefinitions[0].variableEvent = this.variableEvent;\n    this.publishDiagramChange();\n  }\n\n  private publishDiagramChange(): void {\n    this.eventAggregator.publish(environment.events.diagramChange);\n  }\n}\n","",null,"/* eslint-disable no-underscore-dangle */\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {inject} from 'aurelia-framework';\n\nimport {\n  IError,\n  IErrorEventDefinition,\n  IErrorEventElement,\n  IEventElement,\n  IModdleElement,\n  IShape,\n} from '@process-engine/bpmn-elements_contracts';\n\nimport {\n  IBpmnModdle,\n  IBpmnModeler,\n  IElementRegistry,\n  ILinting,\n  IPageModel,\n  ISection,\n} from '../../../../../../../contracts';\nimport environment from '../../../../../../../environment';\nimport {GeneralService} from '../../service/general.service';\n\n@inject(GeneralService, EventAggregator)\nexport class ErrorEventSection implements ISection {\n  public path: string = '/sections/error-event/error-event';\n  public canHandleElement: boolean = false;\n  public errors: Array<IError>;\n  public selectedId: string;\n  public selectedError: IError;\n  public isEndEvent: boolean = false;\n  public errorMessageVariable: string;\n\n  private businessObjInPanel: IErrorEventElement;\n  private moddle: IBpmnModdle;\n  private modeler: IBpmnModeler;\n  private linter: ILinting;\n  private generalService: GeneralService;\n  private eventAggregator: EventAggregator;\n\n  constructor(generalService?: GeneralService, eventAggregator?: EventAggregator) {\n    this.generalService = generalService;\n    this.eventAggregator = eventAggregator;\n  }\n\n  public async activate(model: IPageModel): Promise<void> {\n    this.businessObjInPanel = model.elementInPanel.businessObject as IErrorEventElement;\n\n    this.moddle = model.modeler.get('moddle');\n    this.modeler = model.modeler;\n    this.linter = model.modeler.get('linting');\n\n    this.errors = await this.getErrors();\n\n    this.init();\n  }\n\n  public isSuitableForElement(element: IShape): boolean {\n    if (this.elementIsErrorEvent(element)) {\n      this.isEndEvent = this.elementIsEndEvent(element);\n      return true;\n    }\n    return false;\n  }\n\n  public updateError(): void {\n    if (this.selectedId === undefined || this.selectedId === null) {\n      this.selectedError = null;\n      return;\n    }\n\n    this.selectedError = this.errors.find((error: IError) => {\n      return error.id === this.selectedId;\n    });\n\n    const errorElement: IErrorEventDefinition = this.businessObjInPanel.eventDefinitions[0];\n\n    errorElement.errorRef = this.selectedError;\n    if (!this.isEndEvent) {\n      this.errorMessageVariable = errorElement.errorMessageVariable;\n    }\n    this.publishDiagramChange();\n\n    if (this.linter.lintingActive()) {\n      this.linter.update();\n    }\n  }\n\n  public updateErrorName(): void {\n    const selectedError: IError = this.getSlectedError();\n    selectedError.name = this.selectedError.name;\n    this.publishDiagramChange();\n  }\n\n  public updateErrorCode(): void {\n    const selectedError: IError = this.getSlectedError();\n    selectedError.errorCode = this.selectedError.errorCode;\n    this.publishDiagramChange();\n  }\n\n  public updateErrorMessage(): void {\n    const errorElement: IErrorEventDefinition = this.businessObjInPanel.eventDefinitions[0];\n    errorElement.errorMessageVariable = this.errorMessageVariable;\n    this.publishDiagramChange();\n  }\n\n  public async addError(): Promise<void> {\n    const bpmnErrorObject: {id: string; name: string} = {\n      id: `Error_${this.generalService.generateRandomId()}`,\n      name: 'Error Name',\n    };\n    const bpmnError: IError = this.moddle.create('bpmn:Error', bpmnErrorObject);\n\n    this.modeler._definitions.rootElements.push(bpmnError);\n\n    this.moddle.toXML(this.modeler._definitions, (toXMLError: Error, xmlStrUpdated: string) => {\n      this.modeler.importXML(xmlStrUpdated, async (importXMLError: Error) => {\n        await this.refreshErrors();\n        await this.setBusinessObject();\n        this.selectedId = bpmnError.id;\n        this.selectedError = bpmnError;\n        this.updateError();\n      });\n    });\n    this.publishDiagramChange();\n  }\n\n  public removeSelectedError(): void {\n    const noErrorIsSelected: boolean = !this.selectedId;\n    if (noErrorIsSelected) {\n      return;\n    }\n\n    const errorIndex: number = this.errors.findIndex((error: IError) => {\n      return error.id === this.selectedId;\n    });\n\n    this.errors.splice(errorIndex, 1);\n    this.modeler._definitions.rootElements.splice(this.getRootElementsIndex(this.selectedId), 1);\n\n    this.updateError();\n    this.publishDiagramChange();\n  }\n\n  private getRootElementsIndex(elementId: string): number {\n    const rootElements: Array<IModdleElement> = this.modeler._definitions.rootElements;\n\n    const rootElementsIndex: number = rootElements.findIndex((element: IModdleElement) => {\n      return element.id === elementId;\n    });\n\n    return rootElementsIndex;\n  }\n\n  private init(): void {\n    const eventDefinitions: Array<IErrorEventDefinition> = this.businessObjInPanel.eventDefinitions;\n    const businessObjecthasNoErrorEvents: boolean =\n      eventDefinitions === undefined ||\n      eventDefinitions === null ||\n      eventDefinitions[0].$type !== 'bpmn:ErrorEventDefinition';\n\n    if (businessObjecthasNoErrorEvents) {\n      return;\n    }\n\n    const errorElement: IErrorEventDefinition = this.businessObjInPanel.eventDefinitions[0];\n    const elementHasNoErrorRef: boolean = errorElement.errorRef === undefined;\n\n    if (elementHasNoErrorRef) {\n      this.selectedError = null;\n      this.selectedId = null;\n\n      return;\n    }\n\n    const errorId: string = errorElement.errorRef.id;\n    const elementReferencesError: boolean = this.getErrorById(errorId) !== undefined;\n\n    if (elementReferencesError) {\n      this.selectedId = errorId;\n\n      this.selectedError = this.errors.find((error: IError) => {\n        return error.id === this.selectedId;\n      });\n    } else {\n      this.selectedError = null;\n      this.selectedId = null;\n    }\n  }\n\n  private getErrorById(errorId: string): IError {\n    const errors: Array<IError> = this.getErrors();\n    const error: IError = errors.find((errorElement: IError) => {\n      return errorId === errorElement.id;\n    });\n\n    return error;\n  }\n\n  private elementIsErrorEvent(element: IShape): boolean {\n    const elementHasNoBusinessObject: boolean = element === undefined || element.businessObject === undefined;\n\n    if (elementHasNoBusinessObject) {\n      return false;\n    }\n\n    const eventElement: IEventElement = element.businessObject as IEventElement;\n\n    const elementIsErrorEvent: boolean =\n      eventElement.eventDefinitions !== undefined &&\n      eventElement.eventDefinitions[0] !== undefined &&\n      eventElement.eventDefinitions[0].$type === 'bpmn:ErrorEventDefinition';\n\n    return elementIsErrorEvent;\n  }\n\n  private elementIsEndEvent(element: IShape): boolean {\n    return (\n      element !== undefined && element.businessObject !== undefined && element.businessObject.$type === 'bpmn:EndEvent'\n    );\n  }\n\n  private getErrors(): Array<IError> {\n    const rootElements: Array<IModdleElement> = this.modeler._definitions.rootElements;\n    const errors: Array<IError> = rootElements.filter((element: IModdleElement) => {\n      return element.$type === 'bpmn:Error';\n    });\n\n    return errors;\n  }\n\n  private getSlectedError(): IError {\n    const rootElements: Array<IModdleElement> = this.modeler._definitions.rootElements;\n    const selectedError: IError = rootElements.find((element: IModdleElement) => {\n      const isSelectedError: boolean = element.$type === 'bpmn:Error' && element.id === this.selectedId;\n\n      return isSelectedError;\n    });\n\n    return selectedError;\n  }\n\n  private setBusinessObject(): void {\n    const elementRegistry: IElementRegistry = this.modeler.get('elementRegistry');\n    const elementInPanel: IShape = elementRegistry.get(this.businessObjInPanel.id);\n    this.businessObjInPanel = elementInPanel.businessObject as IErrorEventElement;\n  }\n\n  private async refreshErrors(): Promise<void> {\n    this.errors = await this.getErrors();\n  }\n\n  private publishDiagramChange(): void {\n    this.eventAggregator.publish(environment.events.diagramChange);\n  }\n}\n","",null,"/* eslint-disable no-underscore-dangle */\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {inject} from 'aurelia-framework';\n\nimport {\n  IEscalation,\n  IEscalationEventDefinition,\n  IEscalationEventElement,\n  IEventElement,\n  IModdleElement,\n  IShape,\n} from '@process-engine/bpmn-elements_contracts';\n\nimport {IBpmnModdle, IBpmnModeler, IElementRegistry, IPageModel, ISection} from '../../../../../../../contracts';\n\nimport environment from '../../../../../../../environment';\nimport {GeneralService} from '../../service/general.service';\n\n@inject(GeneralService, EventAggregator)\nexport class EscalationEventSection implements ISection {\n  public path: string = '/sections/escalation-event/escalation-event';\n  public canHandleElement: boolean = false;\n  public escalations: Array<IEscalation>;\n  public selectedId: string;\n  public selectedEscalation: IEscalation;\n  public escalationCodeVariable: string;\n\n  private businessObjInPanel: IEscalationEventElement;\n  private moddle: IBpmnModdle;\n  private modeler: IBpmnModeler;\n  private generalService: GeneralService;\n  private isBoundaryEvent: boolean = true;\n  private eventAggregator: EventAggregator;\n\n  constructor(generalService?: GeneralService, eventAggregator?: EventAggregator) {\n    this.generalService = generalService;\n    this.eventAggregator = eventAggregator;\n  }\n\n  public async activate(model: IPageModel): Promise<void> {\n    this.businessObjInPanel = model.elementInPanel.businessObject as IEscalationEventElement;\n\n    this.moddle = model.modeler.get('moddle');\n    this.modeler = model.modeler;\n    this.escalations = await this.getEscalations();\n\n    this.init();\n  }\n\n  public isSuitableForElement(element: IShape): boolean {\n    if (this.elementIsEscalationEvent(element)) {\n      this.isBoundaryEvent = this.elementIsBoundaryEvent(element);\n      return true;\n    }\n    return false;\n  }\n\n  public updateEscalation(): void {\n    if (this.selectedId === undefined || this.selectedId === null) {\n      this.selectedEscalation = null;\n\n      return;\n    }\n\n    this.selectedEscalation = this.escalations.find((escalation: IModdleElement) => {\n      return escalation.id === this.selectedId;\n    });\n\n    const escalationEventDefinition: IEscalationEventDefinition = this.businessObjInPanel.eventDefinitions[0];\n\n    this.escalationCodeVariable = escalationEventDefinition.escalationCodeVariable;\n    escalationEventDefinition.escalationRef = this.selectedEscalation;\n    this.publishDiagramChange();\n  }\n\n  public updateEscalationName(): void {\n    const selectedEscalation: IEscalation = this.getSelectedEscalation();\n    selectedEscalation.name = this.selectedEscalation.name;\n    this.publishDiagramChange();\n  }\n\n  public updateEscalationCode(): void {\n    const selectedEscalation: IEscalation = this.getSelectedEscalation();\n    selectedEscalation.escalationCode = this.selectedEscalation.escalationCode;\n    this.publishDiagramChange();\n  }\n\n  public updateEscalationCodeVariable(): void {\n    const escalationEventDefinition: IEscalationEventDefinition = this.businessObjInPanel.eventDefinitions[0];\n    escalationEventDefinition.escalationCodeVariable = this.escalationCodeVariable;\n    this.publishDiagramChange();\n  }\n\n  public addEscalation(): void {\n    const bpmnEscalationProperty: {id: string; name: string} = {\n      id: `Escalation_${this.generalService.generateRandomId()}`,\n      name: 'Escalation Name',\n    };\n    const bpmnEscalation: IEscalation = this.moddle.create('bpmn:Escalation', bpmnEscalationProperty);\n\n    this.modeler._definitions.rootElements.push(bpmnEscalation);\n\n    this.moddle.toXML(this.modeler._definitions.rootElements, (toXMLError: Error, xmlStrUpdated: string) => {\n      this.modeler.importXML(xmlStrUpdated, async (importXMLError: Error) => {\n        await this.refreshEscalations();\n        await this.setBusinessObject();\n        this.selectedId = bpmnEscalation.id;\n        this.selectedEscalation = bpmnEscalation;\n        this.updateEscalation();\n      });\n    });\n    this.publishDiagramChange();\n  }\n\n  public removeSelectedEscalation(): void {\n    const noEscalationIsSelected: boolean = !this.selectedId;\n    if (noEscalationIsSelected) {\n      return;\n    }\n\n    const escalationIndex: number = this.escalations.findIndex((escalation: IEscalation) => {\n      return escalation.id === this.selectedId;\n    });\n\n    this.escalations.splice(escalationIndex, 1);\n    this.modeler._definitions.rootElements.splice(this.getRootElementsIndex(this.selectedId), 1);\n\n    this.updateEscalation();\n    this.publishDiagramChange();\n  }\n\n  private getRootElementsIndex(elementId: string): number {\n    const rootElements: Array<IModdleElement> = this.modeler._definitions.rootElements;\n\n    const rootElementsIndex: number = rootElements.findIndex((element: IModdleElement) => {\n      return element.id === elementId;\n    });\n\n    return rootElementsIndex;\n  }\n\n  private async refreshEscalations(): Promise<void> {\n    this.escalations = await this.getEscalations();\n  }\n\n  private setBusinessObject(): void {\n    const elementRegistry: IElementRegistry = this.modeler.get('elementRegistry');\n    const elementInPanel: IShape = elementRegistry.get(this.businessObjInPanel.id);\n    this.businessObjInPanel = elementInPanel.businessObject as IEscalationEventElement;\n  }\n\n  private elementIsEscalationEvent(element: IShape): boolean {\n    const elementHasNoBusinessObject: boolean = element === undefined || element.businessObject === undefined;\n    if (elementHasNoBusinessObject) {\n      return false;\n    }\n\n    const eventElement: IEventElement = element.businessObject as IEventElement;\n\n    const elementIsEscalationEvent: boolean =\n      eventElement.eventDefinitions !== undefined &&\n      eventElement.eventDefinitions[0] !== undefined &&\n      eventElement.eventDefinitions[0].$type === 'bpmn:EscalationEventDefinition';\n\n    return elementIsEscalationEvent;\n  }\n\n  private elementIsBoundaryEvent(element: IShape): boolean {\n    return (\n      element !== undefined &&\n      element.businessObject !== undefined &&\n      element.businessObject.$type === 'bpmn:BoundaryEvent'\n    );\n  }\n\n  private init(): void {\n    const eventDefinitions: Array<IEscalationEventDefinition> = this.businessObjInPanel.eventDefinitions;\n    const businessObjectHasNoEscalationEvents: boolean =\n      eventDefinitions === undefined ||\n      eventDefinitions === null ||\n      eventDefinitions[0].$type !== 'bpmn:EscalationEventDefinition';\n\n    if (businessObjectHasNoEscalationEvents) {\n      return;\n    }\n\n    const escalationEventDefinition: IEscalationEventDefinition = this.businessObjInPanel.eventDefinitions[0];\n    const elementHasNoEscalationRef: boolean = escalationEventDefinition.escalationRef === undefined;\n\n    if (elementHasNoEscalationRef) {\n      this.selectedEscalation = null;\n      this.selectedId = null;\n\n      return;\n    }\n\n    const escalationId: string = escalationEventDefinition.escalationRef.id;\n    const elementReferencesEscalation: boolean = this.getEscalationsById(escalationId) !== undefined;\n\n    if (elementReferencesEscalation) {\n      this.selectedId = escalationId;\n\n      this.selectedEscalation = this.escalations.find((escalation: IEscalation) => {\n        return escalation.id === this.selectedId;\n      });\n    } else {\n      this.selectedEscalation = null;\n      this.selectedId = null;\n    }\n  }\n\n  private getEscalationsById(escalationId: string): IEscalation {\n    const escalations: Array<IEscalation> = this.getEscalations();\n    const escalation: IEscalation = escalations.find((escalationElement: IEscalation) => {\n      return escalationElement.id === escalationId;\n    });\n\n    return escalation;\n  }\n\n  private getEscalations(): Array<IEscalation> {\n    const rootElements: Array<IModdleElement> = this.modeler._definitions.rootElements;\n    const escalations: Array<IEscalation> = rootElements.filter((element: IModdleElement) => {\n      return element.$type === 'bpmn:Escalation';\n    });\n\n    return escalations;\n  }\n\n  private getSelectedEscalation(): IEscalation {\n    const rootElements: Array<IModdleElement> = this.modeler._definitions.rootElements;\n    const selectedEscalation: IEscalation = rootElements.find((element: IModdleElement) => {\n      const isSelectedEscalation: boolean = element.$type === 'bpmn:Escalation' && element.id === this.selectedId;\n\n      return isSelectedEscalation;\n    });\n\n    return selectedEscalation;\n  }\n\n  private publishDiagramChange(): void {\n    this.eventAggregator.publish(environment.events.diagramChange);\n  }\n}\n","",null,"import {EventAggregator} from 'aurelia-event-aggregator';\nimport {inject} from 'aurelia-framework';\n\nimport {IConditionExpression, IFlowElement, IShape} from '@process-engine/bpmn-elements_contracts';\n\nimport {IBpmnModdle, IPageModel, ISection} from '../../../../../../../contracts';\nimport environment from '../../../../../../../environment';\n\n@inject(EventAggregator)\nexport class FlowSection implements ISection {\n  public path: string = '/sections/flow/flow';\n  public canHandleElement: boolean = false;\n  public condition: string;\n\n  private businessObjInPanel: IFlowElement;\n  private moddle: IBpmnModdle;\n  private eventAggregator: EventAggregator;\n\n  constructor(eventAggregator?: EventAggregator) {\n    this.eventAggregator = eventAggregator;\n  }\n\n  public activate(model: IPageModel): void {\n    this.businessObjInPanel = model.elementInPanel.businessObject;\n    this.moddle = model.modeler.get('moddle');\n\n    this.init();\n  }\n\n  public isSuitableForElement(elementShape: IShape): boolean {\n    if (elementShape !== undefined && elementShape !== null) {\n      const element: IFlowElement = elementShape.businessObject;\n      if (!this.elementIsFlow(element)) {\n        return false;\n      }\n\n      const isDefaultFlow: boolean =\n        element.sourceRef !== null && element.sourceRef.default && element.sourceRef.default.id === element.id;\n      if (isDefaultFlow) {\n        return false;\n      }\n      const flowPointsAtExclusiveGateway: boolean =\n        element.targetRef !== null && element.targetRef.$type === 'bpmn:ExclusiveGateway';\n      const flowStartsAtExclusiveGateway: boolean =\n        element.sourceRef !== null && element.sourceRef.$type === 'bpmn:ExclusiveGateway';\n\n      const flowHasCondition: boolean = flowPointsAtExclusiveGateway || flowStartsAtExclusiveGateway;\n\n      return flowHasCondition;\n    }\n\n    return false;\n  }\n\n  public updateCondition(): void {\n    const objectHasNoConditionExpression: boolean =\n      this.businessObjInPanel.conditionExpression === undefined || this.businessObjInPanel.conditionExpression === null;\n\n    if (objectHasNoConditionExpression) {\n      this.createConditionExpression();\n    }\n\n    this.businessObjInPanel.conditionExpression.body = this.condition;\n    this.publishDiagramChange();\n  }\n\n  private createConditionExpression(): void {\n    const conditionExpression: IConditionExpression = this.moddle.create('bpmn:FormalExpression', {});\n    this.businessObjInPanel.conditionExpression = conditionExpression;\n  }\n\n  private elementIsFlow(element: IFlowElement): boolean {\n    return element !== undefined && element !== null && element.$type === 'bpmn:SequenceFlow';\n  }\n\n  private init(): void {\n    if (this.businessObjInPanel.conditionExpression && this.businessObjInPanel.conditionExpression.body !== undefined) {\n      this.condition = this.businessObjInPanel.conditionExpression.body;\n    } else {\n      this.condition = '';\n    }\n  }\n\n  private publishDiagramChange(): void {\n    this.eventAggregator.publish(environment.events.diagramChange);\n  }\n}\n","",null,"import {EventAggregator} from 'aurelia-event-aggregator';\nimport {inject, observable} from 'aurelia-framework';\n\nimport {ILinkEventElement, IShape} from '@process-engine/bpmn-elements_contracts';\n\nimport {IPageModel, ISection} from '../../../../../../../contracts';\nimport environment from '../../../../../../../environment';\n\n@inject(EventAggregator)\nexport class LinkEventSection implements ISection {\n  public path: string = '/sections/link-event/link-event';\n  public canHandleElement: boolean = false;\n  @observable public linkEventName: string = '';\n\n  private businessObjInPanel: ILinkEventElement;\n  private eventAggregator: EventAggregator;\n\n  constructor(eventAggregator?: EventAggregator) {\n    this.eventAggregator = eventAggregator;\n  }\n\n  public activate(model: IPageModel): void {\n    this.businessObjInPanel = model.elementInPanel.businessObject as ILinkEventElement;\n    this.linkEventName = this.businessObjInPanel.eventDefinitions[0].name || '';\n  }\n\n  public isSuitableForElement(elementShape: IShape): boolean {\n    const elementHasNoBusinessObject: boolean = elementShape === undefined || elementShape.businessObject === undefined;\n    if (elementHasNoBusinessObject) {\n      return false;\n    }\n\n    const eventElement: ILinkEventElement = elementShape.businessObject as ILinkEventElement;\n\n    const elementIsLinkEvent: boolean =\n      eventElement.eventDefinitions !== undefined &&\n      eventElement.eventDefinitions[0] !== undefined &&\n      eventElement.eventDefinitions[0].$type === 'bpmn:LinkEventDefinition';\n\n    return elementIsLinkEvent;\n  }\n\n  public linkEventNameChanged(newValue, oldValue): void {\n    if (oldValue === undefined) {\n      return;\n    }\n\n    this.businessObjInPanel.eventDefinitions[0].name = newValue;\n    this.publishDiagramChange();\n  }\n\n  private publishDiagramChange(): void {\n    this.eventAggregator.publish(environment.events.diagramChange);\n  }\n}\n","",null,"/* eslint-disable no-underscore-dangle */\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {inject} from 'aurelia-framework';\n\nimport {\n  IEventElement,\n  IMessage,\n  IMessageEventDefinition,\n  IMessageEventElement,\n  IModdleElement,\n  IShape,\n} from '@process-engine/bpmn-elements_contracts';\n\nimport {\n  IBpmnModdle,\n  IBpmnModeler,\n  IElementRegistry,\n  ILinting,\n  IPageModel,\n  ISection,\n} from '../../../../../../../contracts';\n\nimport environment from '../../../../../../../environment';\nimport {GeneralService} from '../../service/general.service';\n\n@inject(GeneralService, EventAggregator)\nexport class MessageEventSection implements ISection {\n  public path: string = '/sections/message-event/message-event';\n  public canHandleElement: boolean = false;\n  public messages: Array<IMessage>;\n  public selectedId: string;\n  public selectedMessage: IMessage;\n\n  private businessObjInPanel: IMessageEventElement;\n  private moddle: IBpmnModdle;\n  private modeler: IBpmnModeler;\n  private linter: ILinting;\n  private generalService: GeneralService;\n  private eventAggregator: EventAggregator;\n\n  constructor(generalService?: GeneralService, eventAggregator?: EventAggregator) {\n    this.generalService = generalService;\n    this.eventAggregator = eventAggregator;\n  }\n\n  public async activate(model: IPageModel): Promise<void> {\n    this.businessObjInPanel = model.elementInPanel.businessObject as IMessageEventElement;\n\n    this.moddle = model.modeler.get('moddle');\n    this.modeler = model.modeler;\n    this.linter = model.modeler.get('linting');\n\n    this.messages = await this.getMessages();\n\n    this.init();\n  }\n\n  public isSuitableForElement(element: IShape): boolean {\n    return this.elementIsMessageEvent(element);\n  }\n\n  public updateMessage(): void {\n    this.selectedMessage = this.messages.find((message: IMessage) => {\n      return message.id === this.selectedId;\n    });\n\n    const messageEventDefinition: IMessageEventDefinition = this.businessObjInPanel\n      .eventDefinitions[0] as IMessageEventDefinition;\n    messageEventDefinition.messageRef = this.selectedMessage;\n    this.publishDiagramChange();\n\n    if (this.linter.lintingActive()) {\n      this.linter.update();\n    }\n  }\n\n  public updateName(): void {\n    const rootElements: Array<IModdleElement> = this.modeler._definitions.rootElements;\n    const selectedMessage: IMessage = rootElements.find((element: IModdleElement) => {\n      const elementIsSelectedMessage: boolean = element.$type === 'bpmn:Message' && element.id === this.selectedId;\n\n      return elementIsSelectedMessage;\n    });\n\n    selectedMessage.name = this.selectedMessage.name;\n    this.publishDiagramChange();\n  }\n\n  public addMessage(): void {\n    const bpmnMessageProperty: {id: string; name: string} = {\n      id: `Message_${this.generalService.generateRandomId()}`,\n      name: 'Message Name',\n    };\n    const bpmnMessage: IMessage = this.moddle.create('bpmn:Message', bpmnMessageProperty);\n\n    this.modeler._definitions.rootElements.push(bpmnMessage);\n\n    this.moddle.toXML(this.modeler._definitions.rootElements, (toXMLError: Error, xmlStrUpdated: string) => {\n      this.modeler.importXML(xmlStrUpdated, async (importXMLError: Error) => {\n        await this.refreshMessages();\n        await this.setBusinessObj();\n\n        this.selectedId = bpmnMessage.id;\n        this.updateMessage();\n      });\n    });\n    this.publishDiagramChange();\n  }\n\n  public removeSelectedMessage(): void {\n    const noMessageIsSelected: boolean = !this.selectedId;\n    if (noMessageIsSelected) {\n      return;\n    }\n\n    const messageIndex: number = this.messages.findIndex((message: IMessage) => {\n      return message.id === this.selectedId;\n    });\n\n    this.messages.splice(messageIndex, 1);\n    this.modeler._definitions.rootElements.splice(this.getRootElementsIndex(this.selectedId), 1);\n\n    this.updateMessage();\n    this.publishDiagramChange();\n  }\n\n  private getRootElementsIndex(elementId: string): number {\n    const rootElements: Array<IModdleElement> = this.modeler._definitions.rootElements;\n\n    const rootElementsIndex: number = rootElements.findIndex((element: IModdleElement) => {\n      return element.id === elementId;\n    });\n\n    return rootElementsIndex;\n  }\n\n  private elementIsMessageEvent(element: IShape): boolean {\n    const elementHasNoBusinessObject: boolean = element === undefined || element.businessObject === undefined;\n    if (elementHasNoBusinessObject) {\n      return false;\n    }\n\n    const eventElement: IEventElement = element.businessObject as IEventElement;\n\n    const elementIsMessageEvent: boolean =\n      eventElement.eventDefinitions !== undefined &&\n      eventElement.eventDefinitions[0] !== undefined &&\n      eventElement.eventDefinitions[0].$type === 'bpmn:MessageEventDefinition';\n\n    return elementIsMessageEvent;\n  }\n\n  private init(): void {\n    const eventDefinitions: Array<IMessageEventDefinition> = this.businessObjInPanel.eventDefinitions;\n    const businessObjectHasNoMessageEvents: boolean =\n      eventDefinitions === undefined ||\n      eventDefinitions === null ||\n      eventDefinitions[0].$type !== 'bpmn:MessageEventDefinition';\n    if (businessObjectHasNoMessageEvents) {\n      return;\n    }\n\n    const messageEventDefinition: IMessageEventDefinition = this.businessObjInPanel.eventDefinitions[0];\n    const elementHasNoMessageRef: boolean = messageEventDefinition.messageRef === undefined;\n\n    if (elementHasNoMessageRef) {\n      this.selectedMessage = null;\n      this.selectedId = null;\n\n      return;\n    }\n\n    const messageRefId: string = messageEventDefinition.messageRef.id;\n    const elementReferencesMessage: boolean = this.getMessageById(messageRefId) !== undefined;\n\n    if (elementReferencesMessage) {\n      this.selectedId = messageRefId;\n\n      this.selectedMessage = this.messages.find((message: IMessage) => {\n        return message.id === this.selectedId;\n      });\n    } else {\n      this.selectedMessage = undefined;\n      this.selectedId = undefined;\n    }\n  }\n\n  private getMessageById(messageId: string): IMessage {\n    const messages: Array<IMessage> = this.getMessages();\n    const message: IMessage = messages.find((messageElement: IMessage) => {\n      return messageElement.id === messageId;\n    });\n\n    return message;\n  }\n\n  private getMessages(): Array<IMessage> {\n    const rootElements: Array<IModdleElement> = this.modeler._definitions.rootElements;\n    const messages: Array<IMessage> = rootElements.filter((element: IModdleElement) => {\n      return element.$type === 'bpmn:Message';\n    });\n\n    return messages;\n  }\n\n  private async refreshMessages(): Promise<void> {\n    this.messages = await this.getMessages();\n  }\n\n  private setBusinessObj(): void {\n    const elementRegistry: IElementRegistry = this.modeler.get('elementRegistry');\n    const elementInPanel: IShape = elementRegistry.get(this.businessObjInPanel.id);\n\n    this.businessObjInPanel = elementInPanel.businessObject as IMessageEventElement;\n  }\n\n  private publishDiagramChange(): void {\n    this.eventAggregator.publish(environment.events.diagramChange);\n  }\n}\n",".name-property {\n  padding-right: 29px !important;\n}\n\n.name-input {\n  padding-left: 5px;\n}\n",null,"/* eslint-disable no-underscore-dangle */\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {inject} from 'aurelia-framework';\n\nimport {IMessage, IMessageTask, IModdleElement, IShape} from '@process-engine/bpmn-elements_contracts';\n\nimport {\n  IBpmnModdle,\n  IBpmnModeler,\n  IElementRegistry,\n  ILinting,\n  IPageModel,\n  ISection,\n} from '../../../../../../../contracts';\nimport environment from '../../../../../../../environment';\nimport {GeneralService} from '../../service/general.service';\n\n@inject(GeneralService, EventAggregator)\nexport class MessageTaskSection implements ISection {\n  public path: string = '/sections/message-task/message-task';\n  public canHandleElement: boolean = false;\n  public messages: Array<IMessage>;\n  public selectedId: string;\n  public selectedMessage: IMessage;\n\n  private businessObjInPanel: IMessageTask;\n  private linter: ILinting;\n  private moddle: IBpmnModdle;\n  private modeler: IBpmnModeler;\n  private generalService: GeneralService;\n  private eventAggregator: EventAggregator;\n\n  constructor(generalService?: GeneralService, eventAggregator?: EventAggregator) {\n    this.generalService = generalService;\n    this.eventAggregator = eventAggregator;\n  }\n\n  public async activate(model: IPageModel): Promise<void> {\n    this.businessObjInPanel = model.elementInPanel.businessObject;\n\n    this.moddle = model.modeler.get('moddle');\n    this.modeler = model.modeler;\n    this.linter = model.modeler.get('linting');\n\n    this.messages = await this.getMessages();\n\n    this.init();\n  }\n\n  public isSuitableForElement(element: IShape): boolean {\n    return this.elementIsMessageTask(element);\n  }\n\n  public updateMessage(): void {\n    this.selectedMessage = this.messages.find((message: IMessage) => {\n      return message.id === this.selectedId;\n    });\n\n    this.businessObjInPanel.messageRef = this.selectedMessage;\n    this.publishDiagramChange();\n\n    if (this.linter.lintingActive()) {\n      this.linter.update();\n    }\n  }\n\n  public updateName(): void {\n    const rootElements: Array<IModdleElement> = this.modeler._definitions.rootElements;\n    const selectedMessage: IMessage = rootElements.find((element: IModdleElement) => {\n      const elementIsSelectedMessage: boolean = element.$type === 'bpmn:Message' && element.id === this.selectedId;\n\n      return elementIsSelectedMessage;\n    });\n\n    selectedMessage.name = this.selectedMessage.name;\n    this.publishDiagramChange();\n  }\n\n  public addMessage(): void {\n    const bpmnMessageProperty: {id: string; name: string} = {\n      id: `Message_${this.generalService.generateRandomId()}`,\n      name: 'Message Name',\n    };\n    const bpmnMessage: IMessage = this.moddle.create('bpmn:Message', bpmnMessageProperty);\n\n    this.modeler._definitions.rootElements.push(bpmnMessage);\n\n    this.moddle.toXML(this.modeler._definitions.rootElements, (toXMLError: Error, xmlStrUpdated: string) => {\n      this.modeler.importXML(xmlStrUpdated, async (importXMLError: Error) => {\n        await this.refreshMessages();\n        await this.setBusinessObj();\n\n        this.selectedId = bpmnMessage.id;\n        this.updateMessage();\n      });\n    });\n\n    this.publishDiagramChange();\n  }\n\n  public removeSelectedMessage(): void {\n    const noMessageIsSelected: boolean = !this.selectedId;\n    if (noMessageIsSelected) {\n      return;\n    }\n\n    const messageIndex: number = this.messages.findIndex((message: IMessage) => {\n      return message.id === this.selectedId;\n    });\n\n    this.messages.splice(messageIndex, 1);\n    this.modeler._definitions.rootElements.splice(this.getRootElementsIndex(this.selectedId), 1);\n\n    this.updateMessage();\n    this.publishDiagramChange();\n  }\n\n  private getRootElementsIndex(elementId: string): number {\n    const rootElements: Array<IModdleElement> = this.modeler._definitions.rootElements;\n\n    const rootElementsIndex: number = rootElements.findIndex((element: IModdleElement) => {\n      return element.id === elementId;\n    });\n\n    return rootElementsIndex;\n  }\n\n  private elementIsMessageTask(element: IShape): boolean {\n    return element !== undefined && (element.type === 'bpmn:SendTask' || element.type === 'bpmn:ReceiveTask');\n  }\n\n  private init(): void {\n    const businessObjectHasNoMessageEvents: boolean =\n      this.businessObjInPanel === undefined || this.businessObjInPanel.messageRef === undefined;\n    if (businessObjectHasNoMessageEvents) {\n      this.selectedMessage = undefined;\n      this.selectedId = undefined;\n\n      return;\n    }\n\n    const messageRef: IMessage = this.businessObjInPanel.messageRef;\n    const messageId: string = messageRef.id;\n    const elementReferencesMessage: boolean = this.getMessageById(messageId) !== undefined;\n\n    if (elementReferencesMessage) {\n      this.selectedId = messageId;\n      this.updateMessage();\n    } else {\n      this.selectedMessage = undefined;\n      this.selectedId = undefined;\n    }\n  }\n\n  private getMessageById(messageId: string): IMessage {\n    const messages: Array<IMessage> = this.getMessages();\n    const message: IMessage = messages.find((messageElement: IMessage) => {\n      return messageElement.id === messageId;\n    });\n\n    return message;\n  }\n\n  private getMessages(): Array<IMessage> {\n    const rootElements: Array<IModdleElement> = this.modeler._definitions.rootElements;\n    const messages: Array<IMessage> = rootElements.filter((element: IModdleElement) => {\n      return element.$type === 'bpmn:Message';\n    });\n\n    return messages;\n  }\n\n  private async refreshMessages(): Promise<void> {\n    this.messages = await this.getMessages();\n  }\n\n  private setBusinessObj(): void {\n    const elementRegistry: IElementRegistry = this.modeler.get('elementRegistry');\n    const elementInPanel: IShape = elementRegistry.get(this.businessObjInPanel.id);\n\n    this.businessObjInPanel = elementInPanel.businessObject;\n  }\n\n  private publishDiagramChange(): void {\n    this.eventAggregator.publish(environment.events.diagramChange);\n  }\n}\n","",null,"import {EventAggregator} from 'aurelia-event-aggregator';\nimport {bindable, inject} from 'aurelia-framework';\nimport {ValidateEvent, ValidationController, ValidationRules} from 'aurelia-validation';\n\nimport {IModdleElement, IPoolElement, IShape} from '@process-engine/bpmn-elements_contracts';\n\nimport {IBpmnModeler, IElementRegistry, IPageModel, ISection} from '../../../../../../../contracts';\nimport environment from '../../../../../../../environment';\n\n@inject(ValidationController, EventAggregator)\nexport class PoolSection implements ISection {\n  public path: string = '/sections/pool/pool';\n  public canHandleElement: boolean = false;\n  public validationController: ValidationController;\n  public validationError: boolean = false;\n  public businessObjInPanel: IPoolElement;\n  @bindable public processIdCheckboxChecked: boolean = false;\n  public showModal: boolean = false;\n  public showProcessIdWarningModal: boolean = false;\n\n  private modeler: IBpmnModeler;\n  private previousProcessRefId: string;\n  private eventAggregator: EventAggregator;\n\n  constructor(controller?: ValidationController, eventAggregator?: EventAggregator) {\n    this.validationController = controller;\n    this.eventAggregator = eventAggregator;\n  }\n\n  public activate(model: IPageModel): void {\n    const noProcessReferencePresent: boolean = model.elementInPanel.businessObject.processRef === undefined;\n    if (noProcessReferencePresent) {\n      return;\n    }\n\n    if (this.validationError) {\n      this.businessObjInPanel.processRef.id = this.previousProcessRefId;\n      this.validationController.validate();\n    }\n\n    this.businessObjInPanel = model.elementInPanel.businessObject;\n    this.previousProcessRefId = this.businessObjInPanel.processRef.id;\n\n    this.modeler = model.modeler;\n\n    this.validationController.subscribe((event: ValidateEvent) => {\n      this.validateId(event);\n    });\n\n    this.setValidationRules();\n\n    this.showProcessIdWarningModal = Boolean(window.localStorage.getItem('showProcessIdWarningModal'));\n  }\n\n  public detached(): void {\n    if (this.validationError) {\n      this.businessObjInPanel.processRef.id = this.previousProcessRefId;\n      this.validationController.validate();\n    }\n  }\n\n  public processIdCheckboxCheckedChanged(newValue: boolean): void {\n    if (!newValue || this.showProcessIdWarningModal) {\n      return;\n    }\n\n    this.showModal = true;\n  }\n\n  public closeModal(): void {\n    this.showModal = false;\n    this.persistModalOptionToLocalStorage();\n  }\n\n  public isSuitableForElement(element: IShape): boolean {\n    return this.elementIsParticipant(element);\n  }\n\n  public validate(): void {\n    this.validationController.validate();\n    this.publishDiagramChange();\n  }\n\n  public publishDiagramChange(): void {\n    this.eventAggregator.publish(environment.events.diagramChange);\n  }\n\n  private elementIsParticipant(element: IShape): boolean {\n    return (\n      element !== undefined &&\n      element.businessObject !== undefined &&\n      element.businessObject.$type === 'bpmn:Participant'\n    );\n  }\n\n  private validateId(event: ValidateEvent): void {\n    if (event.type !== 'validate') {\n      return;\n    }\n    this.validationError = false;\n\n    for (const result of event.results) {\n      if (result.rule.property.displayName !== 'processId') {\n        continue;\n      }\n      if (result.valid === false) {\n        this.validationError = true;\n        document.getElementById(result.rule.property.displayName).style.border = '2px solid red';\n      } else {\n        document.getElementById(result.rule.property.displayName).style.border = '';\n      }\n    }\n  }\n\n  private formIdIsUnique(id: string): boolean {\n    const elementRegistry: IElementRegistry = this.modeler.get('elementRegistry');\n    const elementsWithSameId: Array<IShape> = elementRegistry.filter((element: IShape) => {\n      return element.businessObject.id === this.businessObjInPanel.processRef.id;\n    });\n\n    return elementsWithSameId.length === 0;\n  }\n\n  private isProcessIdUnique(id: string): boolean {\n    // eslint-disable-next-line no-underscore-dangle\n    const elementIds: Array<string> = this.modeler._definitions.rootElements.map((rootElement: IModdleElement) => {\n      return rootElement.id;\n    });\n\n    const currentId: number = elementIds.indexOf(this.businessObjInPanel.processRef.id);\n    elementIds.splice(currentId, 1);\n\n    return !elementIds.includes(id);\n  }\n\n  private setValidationRules(): void {\n    ValidationRules.ensure((businessObject: IModdleElement) => businessObject.id)\n      .displayName('processId')\n      .required()\n      .withMessage('Process-ID cannot be blank.')\n      .then()\n      .satisfies((id: string) => this.formIdIsUnique(id) && this.isProcessIdUnique(id))\n      .withMessage('Process-ID already exists.')\n      .on(this.businessObjInPanel.processRef);\n  }\n\n  private persistModalOptionToLocalStorage(): void {\n    window.localStorage.setItem('showProcessIdWarningModal', this.showProcessIdWarningModal.toString());\n  }\n}\n",".props-input:disabled {\n  color: darkgray;\n}\n\n.process-id-checkbox {\n  margin-left: 10px;\n}\n",null,"import {EventAggregator} from 'aurelia-event-aggregator';\nimport {inject} from 'aurelia-framework';\n\nimport {IModdleElement, IShape} from '@process-engine/bpmn-elements_contracts';\n\nimport {IPageModel, ISection} from '../../../../../../../contracts';\nimport environment from '../../../../../../../environment';\n\n@inject(EventAggregator)\nexport class ProcessSection implements ISection {\n  public path: string = '/sections/process/process';\n  public canHandleElement: boolean = false;\n  public businessObjInPanel: any;\n\n  private eventAggregator: EventAggregator;\n\n  constructor(eventAggregator?: EventAggregator) {\n    this.eventAggregator = eventAggregator;\n  }\n\n  public activate(model: IPageModel): void {\n    // eslint-disable-next-line no-underscore-dangle\n    this.businessObjInPanel = model.modeler._definitions.rootElements.find((rootElement: IModdleElement) => {\n      return rootElement.$type === 'bpmn:Process';\n    });\n  }\n\n  public isSuitableForElement(element: IShape): boolean {\n    const elementHasNoBusinessObject: boolean = element === undefined || element.businessObject === undefined;\n    if (elementHasNoBusinessObject) {\n      return false;\n    }\n\n    const elementIsRoot: boolean = element.businessObject.$type === 'bpmn:Collaboration';\n\n    return elementIsRoot;\n  }\n\n  public toggleExecutable(): void {\n    this.publishDiagramChange();\n  }\n\n  private publishDiagramChange(): void {\n    this.eventAggregator.publish(environment.events.diagramChange);\n  }\n}\n","",null,"import {EventAggregator} from 'aurelia-event-aggregator';\nimport {inject} from 'aurelia-framework';\n\nimport {IScriptTaskElement, IShape} from '@process-engine/bpmn-elements_contracts';\n\nimport {IPageModel, ISection} from '../../../../../../../contracts';\nimport environment from '../../../../../../../environment';\n\n@inject(EventAggregator)\nexport class ScriptTaskSection implements ISection {\n  public path: string = '/sections/script-task/script-task';\n  public canHandleElement: boolean = false;\n  public businessObjInPanel: IScriptTaskElement;\n\n  public scriptInput: HTMLElement;\n\n  private eventAggregator: EventAggregator;\n\n  constructor(eventAggregator?: EventAggregator) {\n    this.eventAggregator = eventAggregator;\n  }\n\n  public activate(model: IPageModel): void {\n    this.businessObjInPanel = model.elementInPanel.businessObject;\n  }\n\n  public attached(): void {\n    this.recoverInputHeight();\n\n    this.saveInputHeightOnChange();\n  }\n\n  public detached(): void {\n    this.scriptInput.removeEventListener('mousedown', this.saveInputHeightOnMouseUp);\n  }\n\n  public isSuitableForElement(element: IShape): boolean {\n    return this.elementIsScriptTask(element);\n  }\n\n  public updateScript(): void {\n    this.publishDiagramChange();\n  }\n\n  private elementIsScriptTask(element: IShape): boolean {\n    return (\n      element !== undefined &&\n      element.businessObject !== undefined &&\n      element.businessObject.$type === 'bpmn:ScriptTask'\n    );\n  }\n\n  private saveInputHeightOnChange(): void {\n    this.scriptInput.addEventListener('mousedown', this.saveInputHeightOnMouseUp);\n  }\n\n  private recoverInputHeight(): void {\n    this.scriptInput.style.height = `${localStorage.getItem('scriptTaskInputHeight')}px`;\n  }\n\n  private saveInputHeightOnMouseUp: EventListenerOrEventListenerObject = () => {\n    const resizeListenerFunction: EventListenerOrEventListenerObject = (): void => {\n      localStorage.setItem('scriptTaskInputHeight', this.scriptInput.clientHeight.toString());\n      window.removeEventListener('mouseup', resizeListenerFunction);\n    };\n    window.addEventListener('mouseup', resizeListenerFunction);\n  };\n\n  private publishDiagramChange(): void {\n    this.eventAggregator.publish(environment.events.diagramChange);\n  }\n}\n","",null,"import {EventAggregator} from 'aurelia-event-aggregator';\nimport {bindable, inject} from 'aurelia-framework';\n\nimport {IProperty, IServiceTaskElement} from '@process-engine/bpmn-elements_contracts';\n\nimport {IPageModel} from '../../../../../../../../../contracts';\nimport environment from '../../../../../../../../../environment';\nimport {ServiceTaskService} from '../service-task-service/service-task-service';\n\n@inject(EventAggregator)\nexport class ExternalTask {\n  @bindable() public model: IPageModel;\n  public businessObjInPanel: IServiceTaskElement;\n  public selectedTopic: string;\n  public selectedPayload: string;\n  public showModal: boolean = false;\n\n  public payloadInput: HTMLElement;\n\n  private eventAggregator: EventAggregator;\n  private serviceTaskService: ServiceTaskService;\n\n  constructor(eventAggregator?: EventAggregator) {\n    this.eventAggregator = eventAggregator;\n  }\n\n  public attached(): void {\n    this.recoverInputHeight();\n\n    this.saveInputHeightOnChange();\n  }\n\n  public detached(): void {\n    this.payloadInput.removeEventListener('mousedown', this.saveInputHeightOnMouseUp);\n  }\n\n  public modelChanged(): void {\n    this.serviceTaskService = new ServiceTaskService(this.model);\n    this.businessObjInPanel = this.model.elementInPanel.businessObject;\n\n    this.selectedTopic = this.businessObjInPanel.topic;\n    this.selectedPayload = this.getPayloadFromModel();\n  }\n\n  public topicChanged(): void {\n    this.businessObjInPanel.topic = this.selectedTopic;\n\n    this.publishDiagramChange();\n  }\n\n  public payloadChanged(): void {\n    this.setPayloadToModel(this.selectedPayload);\n\n    this.publishDiagramChange();\n  }\n\n  private getPayloadFromModel(): string | undefined {\n    const payloadProperty: IProperty = this.serviceTaskService.getProperty('payload');\n\n    const payloadPropertyExists: boolean = payloadProperty !== undefined;\n    if (payloadPropertyExists) {\n      return payloadProperty.value;\n    }\n    return undefined;\n  }\n\n  private setPayloadToModel(value: string): void {\n    let payloadProperty: IProperty = this.serviceTaskService.getProperty('payload');\n\n    const payloadPropertyNotExists: boolean = payloadProperty === undefined;\n\n    if (payloadPropertyNotExists) {\n      payloadProperty = this.serviceTaskService.createProperty('payload');\n    }\n\n    payloadProperty.value = value;\n  }\n\n  private saveInputHeightOnChange(): void {\n    this.payloadInput.addEventListener('mousedown', this.saveInputHeightOnMouseUp);\n  }\n\n  private recoverInputHeight(): void {\n    this.payloadInput.style.height = `${localStorage.getItem('externalTaskPayloadInputHeight')}px`;\n  }\n\n  private saveInputHeightOnMouseUp: EventListenerOrEventListenerObject = () => {\n    const resizeListenerFunction: EventListenerOrEventListenerObject = (): void => {\n      localStorage.setItem('externalTaskPayloadInputHeight', this.payloadInput.clientHeight.toString());\n      window.removeEventListener('mouseup', resizeListenerFunction);\n    };\n    window.addEventListener('mouseup', resizeListenerFunction);\n  };\n\n  private publishDiagramChange(): void {\n    this.eventAggregator.publish(environment.events.diagramChange);\n  }\n}\n",".payload-enlarge-link {\n  display: block;\n  cursor: pointer;\n  color: #007bff !important;\n}\n\n.payload-enlarge-text:hover {\n  text-decoration: underline;\n}\n\n.payload {\n  min-height: 55px;\n  max-height: 400px;\n}\n",null,"import {EventAggregator} from 'aurelia-event-aggregator';\nimport {bindable, inject} from 'aurelia-framework';\n\nimport {IProperty, IServiceTaskElement} from '@process-engine/bpmn-elements_contracts';\n\nimport {IPageModel} from '../../../../../../../../../contracts';\nimport environment from '../../../../../../../../../environment';\nimport {ServiceTaskService} from '../service-task-service/service-task-service';\n\ninterface IAuthParameters {\n  headers: {\n    'Content-Type'?: string;\n    Authorization?: string;\n  };\n}\n\n@inject(EventAggregator)\nexport class HttpServiceTask {\n  @bindable() public model: IPageModel;\n  public businessObjInPanel: IServiceTaskElement;\n  public selectedHttpMethod: string;\n  public selectedHttpUrl: string;\n  public selectedHttpBody: string;\n  public selectedHttpAuth: string;\n  public selectedHttpContentType: string;\n\n  private eventAggregator: EventAggregator;\n  private serviceTaskService: ServiceTaskService;\n\n  constructor(eventAggregator?: EventAggregator) {\n    this.eventAggregator = eventAggregator;\n  }\n\n  public modelChanged(): void {\n    this.serviceTaskService = new ServiceTaskService(this.model);\n    this.businessObjInPanel = this.model.elementInPanel.businessObject;\n\n    this.initHttpServiceTask();\n  }\n\n  public selectedHttpParamsChanged(): void {\n    const noHttpBodySelected: boolean = this.selectedHttpBody === undefined;\n\n    if (noHttpBodySelected) {\n      this.selectedHttpAuth = undefined;\n      this.selectedHttpContentType = undefined;\n    }\n\n    const noHttpUrlSelected: boolean = this.selectedHttpUrl === undefined;\n\n    if (noHttpUrlSelected) {\n      this.selectedHttpBody = undefined;\n      this.selectedHttpAuth = undefined;\n      this.selectedHttpContentType = undefined;\n    }\n\n    this.serviceTaskService.getProperty('params').value = this.getParamsFromInput();\n    this.publishDiagramChange();\n  }\n\n  public httpMethodChanged(): void {\n    const property: IProperty = this.serviceTaskService.getProperty('method');\n    property.value = this.selectedHttpMethod;\n\n    this.getParamsFromInput();\n    this.publishDiagramChange();\n  }\n\n  private initHttpServiceTask(): void {\n    const methodPropertyExists: boolean = this.serviceTaskService.getProperty('method') !== undefined;\n    const paramPropertyExists: boolean = this.serviceTaskService.getProperty('params') !== undefined;\n\n    if (methodPropertyExists) {\n      this.selectedHttpMethod = this.serviceTaskService.getProperty('method').value;\n    } else {\n      this.serviceTaskService.createProperty('method');\n    }\n\n    if (paramPropertyExists) {\n      this.fillVariablesFromParam(this.serviceTaskService.getProperty('params').value);\n    } else {\n      this.serviceTaskService.createProperty('params');\n    }\n  }\n\n  private publishDiagramChange(): void {\n    this.eventAggregator.publish(environment.events.diagramChange);\n  }\n\n  private getParamsFromInput(): string {\n    let params: string = '';\n\n    params = `${params}\"${this.selectedHttpUrl}\"`;\n\n    const httpBodySelected: boolean = this.selectedHttpBody !== undefined;\n\n    if (httpBodySelected) {\n      params = `${params}, ${this.selectedHttpBody}`;\n    }\n\n    let header: IAuthParameters;\n    const httpContentTypeSelected: boolean = this.selectedHttpContentType !== undefined;\n    const httpAuthorizationSelected: boolean = this.selectedHttpAuth !== undefined;\n    const noHttpAuthorizationSelected: boolean = this.selectedHttpAuth === undefined;\n    const noHttpContentTypeSelected: boolean = this.selectedHttpContentType === undefined;\n\n    if (httpContentTypeSelected && noHttpAuthorizationSelected) {\n      header = {\n        headers: {\n          'Content-Type': this.selectedHttpContentType,\n        },\n      };\n\n      const stringifiedHeader: string = JSON.stringify(header);\n      params = `${params}, ${stringifiedHeader}`;\n    }\n\n    if (httpAuthorizationSelected && noHttpContentTypeSelected) {\n      header = {\n        headers: {\n          Authorization: this.selectedHttpAuth,\n        },\n      };\n\n      const stringifiedHeader: string = JSON.stringify(header);\n\n      params = `${params}, ${stringifiedHeader}`;\n    }\n\n    if (httpContentTypeSelected && httpAuthorizationSelected) {\n      header = {\n        headers: {\n          Authorization: this.selectedHttpAuth,\n          'Content-Type': this.selectedHttpContentType,\n        },\n      };\n\n      const stringifiedHeader: string = JSON.stringify(header);\n\n      params = `${params}, ${stringifiedHeader}`;\n    }\n\n    params = `[${params}]`;\n\n    return params;\n  }\n\n  private fillVariablesFromParam(params: string): void {\n    const regex: RegExp = new RegExp(',(?=[^}]*(?:{|$))');\n\n    const splittedParamString: Array<string> = params.split(regex);\n\n    const urlParamsGiven: boolean = splittedParamString.length > 0;\n    if (urlParamsGiven) {\n      const hasDoubleQuotationMarks: boolean = splittedParamString[0].search('\"') > 0;\n      const hasSingleQuotationMarks: boolean = splittedParamString[0].search(\"'\") > 0;\n\n      let urlParam: string;\n      if (hasDoubleQuotationMarks) {\n        urlParam = splittedParamString[0].slice(\n          splittedParamString[0].search('\"') + 1,\n          splittedParamString[0].lastIndexOf('\"'),\n        );\n      } else if (hasSingleQuotationMarks) {\n        urlParam = splittedParamString[0].slice(\n          splittedParamString[0].search(\"'\") + 1,\n          splittedParamString[0].lastIndexOf(\"'\"),\n        );\n      }\n\n      this.selectedHttpUrl = urlParam;\n    }\n\n    const bodyParamsGiven: boolean = splittedParamString.length > 1;\n    if (bodyParamsGiven) {\n      let bodyParam: string = splittedParamString[1].slice(1, splittedParamString[1].length);\n\n      const bodyIsLastParameter: boolean = bodyParam.endsWith(']');\n      if (bodyIsLastParameter) {\n        bodyParam = bodyParam.substring(0, bodyParam.length - 1);\n      }\n\n      this.selectedHttpBody = bodyParam;\n    }\n\n    const headerParamsPosition: number = 2;\n    const headerParamsGiven: boolean = splittedParamString.length > headerParamsPosition;\n    if (headerParamsGiven) {\n      let headerParam: string = splittedParamString[headerParamsPosition];\n      const headerIsLastParameter: boolean = headerParam.endsWith(']');\n      if (headerIsLastParameter) {\n        headerParam = headerParam.substring(0, splittedParamString[headerParamsPosition].length - 1);\n      }\n\n      /**\n       * This Regex replaces all single quotes with double quotes and adds double\n       * quotes to non quotet keys.\n       * This way we make sure that JSON.parse() can handle the given string.\n       */\n      const headerParamDoubleQuoted: string = headerParam.replace(\n        /(\\s*?{\\s*?|\\s*?,\\s*?)(['\"])?([a-zA-Z0-9]+)(['\"])?:/g,\n        '$1\"$3\":',\n      );\n\n      const headerObject: IAuthParameters = JSON.parse(headerParamDoubleQuoted);\n\n      this.selectedHttpContentType = headerObject.headers['Content-Type'];\n      this.selectedHttpAuth = headerObject.headers['Authorization'];\n    }\n  }\n}\n","",null,"import {\n  IExtensionElement,\n  IModdleElement,\n  IPropertiesElement,\n  IProperty,\n} from '@process-engine/bpmn-elements_contracts';\nimport {IBpmnModdle, IPageModel} from '../../../../../../../../../contracts';\n\nexport class ServiceTaskService {\n  private model: IPageModel;\n  private businessObjInPanel: IModdleElement;\n  private moddle: IBpmnModdle;\n\n  constructor(model: IPageModel) {\n    this.model = model;\n    this.businessObjInPanel = model.elementInPanel.businessObject;\n    this.moddle = this.model.modeler.get('moddle');\n  }\n\n  public createExtensionElement(): void {\n    const extensionValues: Array<IModdleElement> = [];\n\n    const extensionElements: IModdleElement = this.moddle.create('bpmn:ExtensionElements', {\n      values: extensionValues,\n    });\n    this.businessObjInPanel.extensionElements = extensionElements;\n  }\n\n  public createPropertiesElement(): void {\n    const extensionElement: IExtensionElement = this.businessObjInPanel.extensionElements;\n\n    const properties: Array<IProperty> = [];\n    const propertiesElement: IPropertiesElement = this.moddle.create('camunda:Properties', {values: properties});\n\n    extensionElement.values.push(propertiesElement);\n  }\n\n  public createProperty(propertyName: string): IProperty {\n    if (this.extensionElementDoesNotExist) {\n      this.createExtensionElement();\n    }\n\n    const noPropertiesElement: boolean = this.getPropertiesElement() === undefined;\n\n    if (noPropertiesElement) {\n      this.createPropertiesElement();\n    }\n\n    const propertiesElement: IPropertiesElement = this.getPropertiesElement();\n\n    const propertyObject: object = {\n      name: propertyName,\n      value: '',\n    };\n\n    const property: IProperty = this.moddle.create('camunda:Property', propertyObject);\n\n    propertiesElement.values.push(property);\n\n    return property;\n  }\n\n  public getProperty(propertyName: string): IProperty | undefined {\n    const propertiesElement: IPropertiesElement = this.getPropertiesElement();\n\n    if (!propertiesElement) {\n      return undefined;\n    }\n\n    const property: IProperty = propertiesElement.values.find((element: IProperty) => {\n      return element.name === propertyName;\n    });\n\n    return property;\n  }\n\n  public getPropertiesElement(): IPropertiesElement | undefined {\n    if (this.extensionElementDoesNotExist) {\n      return undefined;\n    }\n\n    const propertiesElement: IPropertiesElement = this.businessObjInPanel.extensionElements.values.find(\n      (element: IPropertiesElement): boolean => {\n        if (!element) {\n          return undefined;\n        }\n\n        return element.$type === 'camunda:Properties';\n      },\n    );\n\n    const noPropertyElementFound: boolean = propertiesElement === undefined;\n    if (noPropertyElementFound) {\n      return undefined;\n    }\n\n    const noValuesDefined: boolean = propertiesElement.values === undefined;\n    if (noValuesDefined) {\n      propertiesElement.values = [];\n    }\n\n    return propertiesElement;\n  }\n\n  public get extensionElementDoesNotExist(): boolean {\n    return (\n      this.businessObjInPanel.extensionElements === undefined ||\n      this.businessObjInPanel.extensionElements.values === undefined\n    );\n  }\n}\n","import {EventAggregator} from 'aurelia-event-aggregator';\nimport {inject} from 'aurelia-framework';\n\nimport {IPropertiesElement, IProperty, IServiceTaskElement, IShape} from '@process-engine/bpmn-elements_contracts';\n\nimport {IBpmnModdle, IPageModel, ISection} from '../../../../../../../contracts';\nimport environment from '../../../../../../../environment';\nimport {ServiceTaskService} from './components/service-task-service/service-task-service';\n\nenum ServiceKind {\n  None = 'null',\n  HttpClient = 'HttpClient',\n  External = 'external',\n}\n\n@inject(EventAggregator)\nexport class ServiceTaskSection implements ISection {\n  public path: string = '/sections/service-task/service-task';\n  // eslint-disable-next-line @typescript-eslint/member-naming\n  public ServiceKind: typeof ServiceKind = ServiceKind;\n  public canHandleElement: boolean = false;\n  public businessObjInPanel: IServiceTaskElement;\n  public model: IPageModel;\n  public selectedKind: ServiceKind;\n\n  private eventAggregator: EventAggregator;\n  private moddle: IBpmnModdle;\n  private serviceTaskService: ServiceTaskService;\n\n  constructor(eventAggregator?: EventAggregator) {\n    this.eventAggregator = eventAggregator;\n  }\n\n  public activate(model: IPageModel): void {\n    this.serviceTaskService = new ServiceTaskService(model);\n\n    this.businessObjInPanel = model.elementInPanel.businessObject;\n    this.model = model;\n    this.moddle = model.modeler.get('moddle');\n\n    this.initServiceTask();\n  }\n\n  public isSuitableForElement(element: IShape): boolean {\n    return this.elementIsServiceTask(element);\n  }\n\n  public kindChanged(): void {\n    const selectedKindIsHttpService: boolean = this.selectedKind === ServiceKind.HttpClient;\n    const selectedKindIsExternalTask: boolean = this.selectedKind === ServiceKind.External;\n\n    if (selectedKindIsHttpService) {\n      let moduleProperty: IProperty = this.serviceTaskService.getProperty('module');\n      const modulePropertyDoesNotExist: boolean = moduleProperty === undefined;\n\n      if (modulePropertyDoesNotExist) {\n        this.createModuleProperty();\n      }\n\n      moduleProperty = this.serviceTaskService.getProperty('module');\n      moduleProperty.value = this.selectedKind;\n\n      this.deleteExternalTaskProperties();\n    } else if (selectedKindIsExternalTask) {\n      this.businessObjInPanel.type = this.selectedKind;\n      this.deleteHttpProperties();\n    } else {\n      this.deleteExternalTaskProperties();\n      this.deleteHttpProperties();\n    }\n\n    this.publishDiagramChange();\n  }\n\n  private elementIsServiceTask(element: IShape): boolean {\n    return (\n      element !== undefined &&\n      element.businessObject !== undefined &&\n      element.businessObject.$type === 'bpmn:ServiceTask'\n    );\n  }\n\n  private publishDiagramChange(): void {\n    this.eventAggregator.publish(environment.events.diagramChange);\n  }\n\n  private createModuleProperty(): void {\n    if (this.serviceTaskService.extensionElementDoesNotExist) {\n      this.serviceTaskService.createExtensionElement();\n    }\n\n    const noPropertiesElement: boolean = this.serviceTaskService.getPropertiesElement() === undefined;\n\n    if (noPropertiesElement) {\n      this.serviceTaskService.createPropertiesElement();\n    }\n\n    const propertiesElement: IPropertiesElement = this.serviceTaskService.getPropertiesElement();\n\n    const modulePropertyObject: object = {\n      name: 'module',\n      value: 'HttpClient',\n    };\n\n    const moduleProperty: IProperty = this.moddle.create('camunda:Property', modulePropertyObject);\n\n    propertiesElement.values.push(moduleProperty);\n  }\n\n  private initServiceTask(): void {\n    const taskIsExternalTask: boolean = this.businessObjInPanel.type === 'external';\n\n    if (taskIsExternalTask) {\n      this.selectedKind = ServiceKind.External;\n      return;\n    }\n\n    const modulePropertyExists: boolean = this.serviceTaskService.getProperty('module') !== undefined;\n    if (modulePropertyExists) {\n      this.selectedKind = ServiceKind[this.serviceTaskService.getProperty('module').value];\n    } else {\n      this.selectedKind = ServiceKind.None;\n    }\n  }\n\n  private deleteHttpProperties(): void {\n    const propertiesElement: IPropertiesElement = this.serviceTaskService.getPropertiesElement();\n    const propertiesElementExists: boolean = propertiesElement !== undefined;\n\n    if (propertiesElementExists) {\n      propertiesElement.values = propertiesElement.values.filter((element: IProperty) => {\n        return element.name !== 'method' && element.name !== 'params' && element.name !== 'module';\n      });\n\n      const emptyProperties: boolean = propertiesElement.values.length === 0;\n      if (emptyProperties) {\n        this.deletePropertiesElementAndExtensionElements();\n      }\n    }\n  }\n\n  private deleteExternalTaskProperties(): void {\n    delete this.businessObjInPanel.type;\n    delete this.businessObjInPanel.topic;\n\n    const propertiesElement: IPropertiesElement = this.serviceTaskService.getPropertiesElement();\n\n    if (propertiesElement) {\n      propertiesElement.values = propertiesElement.values.filter((element: IProperty) => {\n        return element.name !== 'payload';\n      });\n\n      const emptyProperties: boolean = propertiesElement.values.length === 0;\n      if (emptyProperties) {\n        this.deletePropertiesElementAndExtensionElements();\n      }\n    }\n  }\n\n  private deletePropertiesElementAndExtensionElements(): void {\n    const indexOfPropertiesElement: number = this.businessObjInPanel.extensionElements.values.findIndex(\n      (element: IPropertiesElement) => {\n        if (!element) {\n          return;\n        }\n        // eslint-disable-next-line consistent-return\n        return element.$type === 'camunda:Properties';\n      },\n    );\n\n    delete this.businessObjInPanel.extensionElements.values[indexOfPropertiesElement];\n\n    const emptyExtensionElements: boolean = this.businessObjInPanel.extensionElements.values.length < 2;\n    if (emptyExtensionElements) {\n      delete this.businessObjInPanel.extensionElements;\n    }\n  }\n}\n",".props-table__row--disabled {\n  opacity: 0.5;\n}\n",null,"/* eslint-disable no-underscore-dangle */\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {inject} from 'aurelia-framework';\n\nimport {\n  IEventElement,\n  IModdleElement,\n  IShape,\n  ISignal,\n  ISignalEventDefinition,\n  ISignalEventElement,\n} from '@process-engine/bpmn-elements_contracts';\n\nimport {\n  IBpmnModdle,\n  IBpmnModeler,\n  IElementRegistry,\n  ILinting,\n  IPageModel,\n  ISection,\n} from '../../../../../../../contracts';\nimport environment from '../../../../../../../environment';\nimport {GeneralService} from '../../service/general.service';\n\n@inject(GeneralService, EventAggregator)\nexport class SignalEventSection implements ISection {\n  public path: string = '/sections/signal-event/signal-event';\n  public canHandleElement: boolean = false;\n  public signals: Array<ISignal>;\n  public selectedId: string;\n  public selectedSignal: ISignal;\n\n  private businessObjInPanel: ISignalEventElement;\n  private moddle: IBpmnModdle;\n  private modeler: IBpmnModeler;\n  private linter: ILinting;\n  private generalService: GeneralService;\n  private eventAggregator: EventAggregator;\n\n  constructor(generalService?: GeneralService, eventAggregator?: EventAggregator) {\n    this.generalService = generalService;\n    this.eventAggregator = eventAggregator;\n  }\n\n  public async activate(model: IPageModel): Promise<void> {\n    this.businessObjInPanel = model.elementInPanel.businessObject as ISignalEventElement;\n    this.moddle = model.modeler.get('moddle');\n    this.modeler = model.modeler;\n    this.linter = this.modeler.get('linting');\n\n    this.signals = await this.getSignals();\n\n    this.init();\n  }\n\n  public isSuitableForElement(element: IShape): boolean {\n    return this.elementIsSignalEvent(element);\n  }\n\n  public updateSignal(): void {\n    this.selectedSignal = this.signals.find((signal: ISignal) => {\n      return signal.id === this.selectedId;\n    });\n\n    const signalElement: ISignalEventDefinition = this.businessObjInPanel.eventDefinitions[0];\n    const eventDefinitionSet: boolean = signalElement.signalRef !== undefined;\n    const signalGotSelected: boolean = this.selectedSignal !== undefined;\n\n    if (eventDefinitionSet && signalGotSelected) {\n      const signalIsAlreadySet: boolean = signalElement.signalRef.id === this.selectedSignal.id;\n\n      if (signalIsAlreadySet) {\n        return;\n      }\n    }\n\n    signalElement.signalRef = this.selectedSignal;\n    this.publishDiagramChange();\n\n    if (this.linter.lintingActive()) {\n      this.linter.update();\n    }\n  }\n\n  public updateName(): void {\n    const rootElements: Array<IModdleElement> = this.modeler._definitions.rootElements;\n    const signal: ISignal = rootElements.find((element: IModdleElement) => {\n      const elementIsSelectedSignal: boolean = element.$type === 'bpmn:Signal' && element.id === this.selectedId;\n      return elementIsSelectedSignal;\n    });\n\n    signal.name = this.selectedSignal.name;\n    this.publishDiagramChange();\n  }\n\n  public addSignal(): void {\n    const bpmnSignalProperty: {id: string; name: string} = {\n      id: `Signal_${this.generalService.generateRandomId()}`,\n      name: 'Signal Name',\n    };\n    const bpmnSignal: ISignal = this.moddle.create('bpmn:Signal', bpmnSignalProperty);\n\n    this.modeler._definitions.rootElements.push(bpmnSignal);\n\n    this.moddle.toXML(this.modeler._definitions.rootElements, (toXMLError: Error, xmlStrUpdated: string) => {\n      this.modeler.importXML(xmlStrUpdated, async (importXMLError: Error) => {\n        await this.refreshSignals();\n        await this.setBusinessObj();\n        this.selectedId = bpmnSignal.id;\n        this.selectedSignal = bpmnSignal;\n        this.updateSignal();\n      });\n    });\n    this.publishDiagramChange();\n  }\n\n  public removeSelectedSignal(): void {\n    const noSignalIsSelected: boolean = !this.selectedId;\n    if (noSignalIsSelected) {\n      return;\n    }\n\n    const signalIndex: number = this.signals.findIndex((signal: ISignal) => {\n      return signal.id === this.selectedId;\n    });\n\n    this.signals.splice(signalIndex, 1);\n    this.modeler._definitions.rootElements.splice(this.getRootElementsIndex(this.selectedId), 1);\n\n    this.updateSignal();\n  }\n\n  private getRootElementsIndex(elementId: string): number {\n    const rootElements: Array<IModdleElement> = this.modeler._definitions.rootElements;\n\n    const rootElementsIndex: number = rootElements.findIndex((element: IModdleElement) => {\n      return element.id === elementId;\n    });\n\n    return rootElementsIndex;\n  }\n\n  private elementIsSignalEvent(element: IShape): boolean {\n    const elementHasNoBusinessObject: boolean = element === undefined || element.businessObject === undefined;\n\n    if (elementHasNoBusinessObject) {\n      return false;\n    }\n\n    const eventElement: IEventElement = element.businessObject as IEventElement;\n\n    const elementIsSignalEvent: boolean =\n      eventElement.eventDefinitions !== undefined &&\n      eventElement.eventDefinitions[0] !== undefined &&\n      eventElement.eventDefinitions[0].$type === 'bpmn:SignalEventDefinition';\n\n    return elementIsSignalEvent;\n  }\n\n  private init(): void {\n    const eventDefinitions: Array<ISignalEventDefinition> = this.businessObjInPanel.eventDefinitions;\n    const businessObjectHasNoSignalEvents: boolean =\n      eventDefinitions === undefined ||\n      eventDefinitions === null ||\n      eventDefinitions[0].$type !== 'bpmn:SignalEventDefinition';\n    if (businessObjectHasNoSignalEvents) {\n      return;\n    }\n\n    const signalElement: ISignalEventDefinition = this.businessObjInPanel.eventDefinitions[0];\n    const elementHasNoSignalRef: boolean = signalElement.signalRef === undefined;\n\n    if (elementHasNoSignalRef) {\n      this.selectedSignal = null;\n      this.selectedId = null;\n\n      return;\n    }\n\n    const signalId: string = signalElement.signalRef.id;\n    const elementReferencesSignal: boolean = this.getSignalById(signalId) !== undefined;\n\n    if (elementReferencesSignal) {\n      this.selectedId = signalId;\n\n      this.selectedSignal = this.signals.find((signal: ISignal) => {\n        return signal.id === this.selectedId;\n      });\n    } else {\n      this.selectedSignal = null;\n      this.selectedId = null;\n    }\n  }\n\n  private getSignalById(signalId: string): ISignal {\n    const signals: Array<ISignal> = this.getSignals();\n    const signal: ISignal = signals.find((signalElement: ISignal) => {\n      return signalElement.id === signalId;\n    });\n\n    return signal;\n  }\n\n  private getSignals(): Array<ISignal> {\n    const rootElements: Array<IModdleElement> = this.modeler._definitions.rootElements;\n    const signals: Array<ISignal> = rootElements.filter((element: IModdleElement) => {\n      return element.$type === 'bpmn:Signal';\n    });\n\n    return signals;\n  }\n\n  private async refreshSignals(): Promise<void> {\n    this.signals = await this.getSignals();\n  }\n\n  private setBusinessObj(): void {\n    const elementRegistry: IElementRegistry = this.modeler.get('elementRegistry');\n    const elementInPanel: IShape = elementRegistry.get(this.businessObjInPanel.id);\n    this.businessObjInPanel = elementInPanel.businessObject as ISignalEventElement;\n  }\n\n  private publishDiagramChange(): void {\n    this.eventAggregator.publish(environment.events.diagramChange);\n  }\n}\n",".name-property {\n  padding-right: 13px !important;\n}\n\n.name-input {\n  padding-left: 5px;\n}\n",null,"import {EventAggregator} from 'aurelia-event-aggregator';\nimport {bindable, inject} from 'aurelia-framework';\n\nimport {\n  IEventElement,\n  IExtensionElement,\n  IModdleElement,\n  IPropertiesElement,\n  IProperty,\n  IShape,\n  ITimerEventElement,\n} from '@process-engine/bpmn-elements_contracts';\n\nimport {IBpmnModdle, ILinting, IPageModel, ISection} from '../../../../../../../contracts';\nimport environment from '../../../../../../../environment';\n\nenum TimerType {\n  Date,\n  Duration,\n  Cycle,\n}\n\n@inject(EventAggregator)\nexport class TimerEventSection implements ISection {\n  public path: string = '/sections/timer-event/timer-event';\n  public canHandleElement: boolean = false;\n  public timerElement: IModdleElement;\n  // eslint-disable-next-line @typescript-eslint/member-naming\n  public TimerType: typeof TimerType = TimerType;\n  public timerType: TimerType;\n  public isTimerStartEvent: boolean = false;\n  @bindable public isEnabled: boolean = true;\n\n  private businessObjInPanel: ITimerEventElement;\n  private moddle: IBpmnModdle;\n  private linter: ILinting;\n  private eventAggregator: EventAggregator;\n\n  constructor(eventAggregator?: EventAggregator) {\n    this.eventAggregator = eventAggregator;\n  }\n\n  public activate(model: IPageModel): void {\n    this.businessObjInPanel = model.elementInPanel.businessObject as ITimerEventElement;\n\n    this.moddle = model.modeler.get('moddle');\n    this.linter = model.modeler.get('linting');\n\n    this.isTimerStartEvent = this.businessObjInPanel.$type === 'bpmn:StartEvent';\n\n    this.timerElement = this.getTimerElement();\n\n    this.init();\n  }\n\n  public isSuitableForElement(element: IShape): boolean {\n    const elementHasNoBusinessObject: boolean = element === undefined || element.businessObject === undefined;\n\n    if (elementHasNoBusinessObject) {\n      return false;\n    }\n\n    const eventElement: IEventElement = element.businessObject as IEventElement;\n\n    const elementIsTimerEvent: boolean =\n      eventElement.eventDefinitions !== undefined &&\n      eventElement.eventDefinitions[0] !== undefined &&\n      eventElement.eventDefinitions[0].$type === 'bpmn:TimerEventDefinition';\n\n    return elementIsTimerEvent;\n  }\n\n  public updateTimerType(): void {\n    const moddleElement: IModdleElement = this.moddle.create('bpmn:FormalExpression', {\n      body: this.timerElement.body,\n    });\n\n    let timerTypeObject: object;\n\n    switch (this.timerType) {\n      case TimerType.Date: {\n        timerTypeObject = {\n          timeDate: moddleElement,\n        };\n        break;\n      }\n      case TimerType.Duration: {\n        timerTypeObject = {\n          timeDuration: moddleElement,\n        };\n        break;\n      }\n      case TimerType.Cycle: {\n        timerTypeObject = this.isTimerStartEvent ? {timeCycle: moddleElement} : {};\n        break;\n      }\n      default: {\n        timerTypeObject = {};\n      }\n    }\n\n    delete this.businessObjInPanel.eventDefinitions[0].timeCycle;\n    delete this.businessObjInPanel.eventDefinitions[0].timeDuration;\n    delete this.businessObjInPanel.eventDefinitions[0].timeDate;\n\n    Object.assign(this.businessObjInPanel.eventDefinitions[0], timerTypeObject);\n    this.timerElement.body = '';\n\n    this.publishDiagramChange();\n    this.updateLinterWhenActive();\n  }\n\n  public updateTimerDefinition(): void {\n    const timerElement: IModdleElement = this.getTimerElement();\n    timerElement.body = this.timerElement.body;\n\n    this.publishDiagramChange();\n    this.updateLinterWhenActive();\n  }\n\n  public isEnabledChanged(): void {\n    const enabledProperty: IProperty = this.getProperty('enabled');\n    enabledProperty.value = this.isEnabled.toString();\n\n    this.publishDiagramChange();\n  }\n\n  private init(): void {\n    if (this.isTimerStartEvent) {\n      const extensionElementDoesNotExist: boolean = this.businessObjInPanel.extensionElements === undefined;\n      if (extensionElementDoesNotExist) {\n        this.createExtensionElement();\n      }\n\n      const propertyElementDoesNotExists: boolean = this.getPropertiesElement() === undefined;\n      if (propertyElementDoesNotExists) {\n        this.createPropertiesElement();\n      }\n\n      const enabledProperty: IProperty = this.getProperty('enabled');\n\n      const enabledPropertyExists: boolean = enabledProperty !== undefined;\n      if (enabledPropertyExists) {\n        this.isEnabled = enabledProperty.value === 'true';\n      } else {\n        this.createProperty('enabled');\n        this.getProperty('enabled').value = 'true';\n      }\n    }\n\n    const {timeDate, timeDuration, timeCycle} = this.businessObjInPanel.eventDefinitions[0];\n\n    if (timeCycle !== undefined && this.isTimerStartEvent) {\n      this.timerType = TimerType.Cycle;\n      return;\n    }\n\n    if (timeDuration !== undefined) {\n      this.timerType = TimerType.Duration;\n      return;\n    }\n\n    if (timeDate !== undefined) {\n      this.timerType = TimerType.Date;\n    }\n  }\n\n  private getTimerElement(): IModdleElement {\n    const {timeDuration, timeDate, timeCycle} = this.businessObjInPanel.eventDefinitions[0];\n\n    if (timeDuration !== undefined) {\n      return timeDuration;\n    }\n    if (timeDate !== undefined) {\n      return timeDate;\n    }\n\n    if (timeCycle !== undefined && this.isTimerStartEvent) {\n      return timeCycle;\n    }\n\n    const timerEventDefinition: IModdleElement = this.moddle.create('bpmn:FormalExpression', {body: ''});\n    return timerEventDefinition;\n  }\n\n  private publishDiagramChange(): void {\n    this.eventAggregator.publish(environment.events.diagramChange);\n  }\n\n  private updateLinterWhenActive(): void {\n    if (this.linter.lintingActive()) {\n      this.linter.update();\n    }\n  }\n\n  private createExtensionElement(): void {\n    const extensionValues: Array<IModdleElement> = [];\n\n    const extensionElements: IModdleElement = this.moddle.create('bpmn:ExtensionElements', {\n      values: extensionValues,\n    });\n    this.businessObjInPanel.extensionElements = extensionElements;\n  }\n\n  private createPropertiesElement(): void {\n    const extensionElement: IExtensionElement = this.businessObjInPanel.extensionElements;\n\n    const properties: Array<IProperty> = [];\n    const propertiesElement: IPropertiesElement = this.moddle.create('camunda:Properties', {values: properties});\n\n    extensionElement.values.push(propertiesElement);\n  }\n\n  private createProperty(propertyName: string): void {\n    const propertiesElement: IPropertiesElement = this.getPropertiesElement();\n\n    const propertyObject: object = {\n      name: propertyName,\n      value: '',\n    };\n\n    const property: IProperty = this.moddle.create('camunda:Property', propertyObject);\n\n    propertiesElement.values.push(property);\n  }\n\n  private getProperty(propertyName: string): IProperty {\n    const propertiesElement: IPropertiesElement = this.getPropertiesElement();\n\n    const property: IProperty = propertiesElement.values.find((element: IProperty) => {\n      return element.name === propertyName;\n    });\n\n    return property;\n  }\n\n  private getPropertiesElement(): IPropertiesElement {\n    const propertiesElement: IPropertiesElement = this.businessObjInPanel.extensionElements.values.find(\n      (element: IPropertiesElement) => {\n        return element.$type === 'camunda:Properties' && element.values !== undefined;\n      },\n    );\n\n    return propertiesElement;\n  }\n}\n","",null,"import {inject} from 'aurelia-framework';\n\nimport {IDiagram} from '@process-engine/solutionexplorer.contracts';\n\nimport {GeneralRepository} from '../repository/general.repository';\n\n@inject(GeneralRepository)\nexport class GeneralService {\n  private generalRepository: GeneralRepository;\n\n  constructor(generalRepository: GeneralRepository) {\n    this.generalRepository = generalRepository;\n  }\n\n  public generateRandomId(): string {\n    let randomId: string = '';\n    const possible: string = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    const randomIdLength: number = 8;\n    for (let i: number = 0; i < randomIdLength; i++) {\n      randomId += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return randomId;\n  }\n\n  public getAllDiagrams(): Promise<Array<IDiagram>> {\n    return this.generalRepository.getAllDiagrams();\n  }\n}\n","import {bindable, inject} from 'aurelia-framework';\n\nimport {IModdleElement, IShape} from '@process-engine/bpmn-elements_contracts';\n\nimport {\n  IBpmnModdle,\n  IBpmnModeler,\n  IDefinition,\n  IDiagramState,\n  IElementRegistry,\n  IEvent,\n  IEventBus,\n  IIndextab,\n} from '../../../contracts';\nimport {Extensions} from './indextabs/extensions/extensions';\nimport {Forms} from './indextabs/forms/forms';\nimport {General} from './indextabs/general/general';\n\nimport {OpenDiagramStateService} from '../../../services/solution-explorer-services/OpenDiagramStateService';\n\n@inject('OpenDiagramStateService')\nexport class PropertyPanel {\n  @bindable() public modeler: IBpmnModeler;\n  @bindable() public xml: string;\n  @bindable() public diagramUri: string;\n  @bindable() public isEditable: boolean;\n  public elementInPanel: IShape;\n  public generalIndextab: IIndextab = new General();\n  public formsIndextab: IIndextab = new Forms();\n  public extensionsIndextab: IIndextab = new Extensions();\n  public indextabs: Array<IIndextab>;\n\n  private moddle: IBpmnModdle;\n  private eventBus: IEventBus;\n  private openDiagramStateService: OpenDiagramStateService;\n\n  private diagramChanged: boolean = false;\n\n  constructor(openDiagramStateService: OpenDiagramStateService) {\n    this.openDiagramStateService = openDiagramStateService;\n  }\n\n  public attached(): void {\n    this.moddle = this.modeler.get('moddle');\n    this.eventBus = this.modeler.get('eventBus');\n\n    this.indextabs = [this.generalIndextab, this.formsIndextab, this.extensionsIndextab];\n\n    this.updateIndexTabsSuitability();\n\n    this.eventBus.on(['element.click', 'shape.changed', 'selection.changed'], (event: IEvent) => {\n      const elementWasClickedOn: boolean = event.type === 'element.click';\n      const elementIsValidShape: boolean = event.type === 'shape.changed' && event.element.type !== 'label';\n\n      const elementIsShapeInPanel: boolean = elementIsValidShape && event.element.id === this.elementInPanel.id;\n\n      if (elementWasClickedOn || elementIsShapeInPanel) {\n        this.elementInPanel = event.element;\n      }\n\n      const selectedElementChanged: boolean = event.type === 'selection.changed' && event.newSelection.length !== 0;\n\n      if (selectedElementChanged) {\n        this.elementInPanel = event.newSelection[0];\n      }\n\n      this.updateIndexTabsSuitability();\n    });\n\n    setTimeout(() => {\n      this.selectPreviouslySelectedOrFirstElement();\n    }, 0);\n  }\n\n  public selectPreviouslySelectedOrFirstElement(): void {\n    const diagramState: IDiagramState = this.openDiagramStateService.loadDiagramState(this.diagramUri);\n\n    const noSelectedElementState: boolean =\n      diagramState === null ||\n      diagramState.metadata.selectedElements === undefined ||\n      diagramState.metadata.selectedElements.length === 0;\n    if (noSelectedElementState) {\n      this.setFirstElement();\n\n      return;\n    }\n\n    const selectedElementId: string = diagramState.metadata.selectedElements[0].id;\n\n    this.selectElementById(selectedElementId);\n  }\n\n  private setFirstElement(): void {\n    let firstElement: IModdleElement;\n\n    this.moddle.fromXML(this.xml, (err: Error, definitions: IDefinition): void => {\n      const process: IModdleElement = definitions.rootElements.find((element: IModdleElement) => {\n        return element.$type === 'bpmn:Process';\n      });\n\n      const processHasFlowElements: boolean = process.flowElements !== undefined && process.flowElements !== null;\n\n      if (processHasFlowElements) {\n        firstElement = process.flowElements.find((element: IModdleElement) => {\n          return element.$type === 'bpmn:StartEvent';\n        });\n\n        if (firstElement === undefined || firstElement === null) {\n          firstElement = process.flowElements[0];\n        }\n      } else if (this.processHasLanes(process)) {\n        firstElement = process.laneSets[0].lanes[0];\n      }\n\n      if (!firstElement) {\n        firstElement = process;\n      }\n\n      this.selectElementById(firstElement.id);\n    });\n  }\n\n  private selectElementById(elementId: string): void {\n    const elementRegistry: IElementRegistry = this.modeler.get('elementRegistry');\n    const element: IShape = elementRegistry.get(elementId);\n\n    this.modeler.get('selection').select(element);\n  }\n\n  private processHasLanes(process: IModdleElement): boolean {\n    const processHasLaneSets: boolean = process.laneSets !== undefined && process.laneSets !== null;\n    if (!processHasLaneSets) {\n      return false;\n    }\n\n    const processHasLanes: boolean = process.laneSets[0].lanes !== undefined && process.laneSets[0].lanes !== null;\n\n    return processHasLanes;\n  }\n\n  private updateIndexTabsSuitability(): void {\n    for (const indextab of this.indextabs) {\n      indextab.canHandleElement = indextab.isSuitableForElement(this.elementInPanel);\n    }\n  }\n\n  public diagramUriChanged(newUri: string, previousUri: string): void {\n    const previousUriDoesNotExist: boolean = previousUri === undefined;\n    if (previousUriDoesNotExist) {\n      return;\n    }\n\n    this.diagramChanged = true;\n  }\n\n  public xmlChanged(newXml: string, previousXml: string): void {\n    const previousXmlDoesNotExist: boolean = previousXml === undefined;\n    const diagramDidNotChange: boolean = !this.diagramChanged;\n    if (previousXmlDoesNotExist || diagramDidNotChange) {\n      return;\n    }\n\n    // This is needed to make sure the xml was already imported into the modeler\n    setTimeout(() => {\n      this.selectPreviouslySelectedOrFirstElement();\n    }, 0);\n\n    this.diagramChanged = false;\n  }\n}\n",".property-panel {\n  overflow-y: scroll;\n  border-left: 2px solid #dcdbdb;\n}\n",null,".register_label_border {\n  border: 1px solid black;\n}\n\n.index-tab {\n  user-select: none;\n}\n",".section-panel {\n  margin-bottom: 2px;\n  background-color: #f7f7f7;\n  border-bottom: 1px solid #eee;\n  border-left: 1px solid #eee;\n}\n\n.panel:last-child {\n  margin-bottom: 2px;\n  border-bottom: none;\n}\n\n.panel__heading {\n  padding: 5px 10px;\n  font-weight: 400;\n  color: #a5a5a5;\n  user-select: none;\n}\n\n.panel__content {\n  padding: 5px 10px;\n  font-size: 12px;\n}\n\n.props-table {\n  width: 100%;\n}\n\n.props-table th {\n  width: 40px;\n  padding: 5px 10px 5px 0;\n  font-weight: normal;\n  color: #a5a5a5;\n}\n\n.props-table td {\n  width: 100%;\n  padding: 5px 0;\n  color: #a5a5a5;\n}\n\n.props-input {\n  width: 100%;\n  padding-bottom: 5px;\n  margin-top: 5px;\n  background: transparent;\n  border: none;\n  border-bottom: 1px solid #e9e9e9;\n  font-weight: 400;\n  color: #5c5c5c;\n  text-overflow: ellipsis;\n}\n\n.props-input:disabled {\n  pointer-events: none;\n  opacity: 0.5;\n}\n\n.props-select {\n  padding-right: 22px;\n  border-radius: 0;\n  -webkit-appearance: none;\n  -webkit-border-radius: 0px;\n  background-image: url(\"data:image/svg+xml;utf8,<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='24' height='24' viewBox='0 0 24 24'><path fill='#444' d='M7.406 7.828l4.594 4.594 4.594-4.594 1.406 1.406-6 6-6-6z'></path></svg>\");\n  background-position: 100% 50%;\n  background-repeat: no-repeat;\n  outline: none;\n}\n\n.props-textarea {\n  width: 100%;\n  min-height: 2em;\n  max-height: 200px;\n  padding-bottom: 5px;\n  padding-right: 17px;\n  margin-top: 5px;\n  background: transparent;\n  border: 1px solid #e9e9e9;\n  font-weight: 400;\n  color: #5c5c5c;\n  resize: vertical;\n}\n\n.props-textarea:disabled {\n  opacity: 0.5;\n}\n\n.props-table--clear-button {\n  top: 2px;\n  right: 15px;\n}\n\n.add-context-button {\n  float: right;\n  padding: 2px 7px;\n  background-color: transparent;\n  border: none;\n}\n\n.add-context-button:disabled {\n  pointer-events: none;\n  cursor: default;\n  opacity: 0.2;\n  color: inherit;\n}\n\n.remove-context-button:disabled {\n  pointer-events: none;\n  cursor: default;\n  opacity: 0.2;\n  color: inherit;\n}\n\n.remove-context-button {\n  float: right;\n  padding: 2px 7px;\n  margin-left: 5px;\n  background-color: transparent;\n  border: none;\n}\n\n.key-value-delete-button {\n  padding-top: 2px;\n  background: transparent;\n  border: none;\n}\n\n.key-value-delete-button:disabled {\n  pointer-events: none;\n  opacity: 0.2;\n}\n\n.key-value-delete-button:hover:disabled {\n  pointer-events: none;\n  opacity: 0.2;\n  color: darkgrey;\n}\n","import {bindable} from 'aurelia-framework';\nimport {IBooleanFormField} from '../../contracts/index';\n\nexport class DynamicUiCheckboxElement {\n  @bindable()\n  public field: IBooleanFormField;\n\n  public activate(field: IBooleanFormField): void {\n    this.field = field;\n\n    const fieldHasNoValue: boolean = this.field.value === undefined;\n\n    if (fieldHasNoValue) {\n      this.field.value = this.field.defaultValue === 'true' || this.field.defaultValue === '1';\n    }\n  }\n}\n","",null,"import {bindable} from 'aurelia-framework';\nimport {IEnumFormField} from '../../contracts';\n\nexport class DynamicUiDropdownElement {\n  @bindable()\n  public field: IEnumFormField;\n\n  public activate(field: IEnumFormField): void {\n    this.field = field;\n\n    const fieldHasNoValue: boolean = this.field.value === undefined || this.field.value === '';\n\n    if (fieldHasNoValue) {\n      this.field.value = this.field.defaultValue;\n    }\n  }\n}\n","",null,"import {bindable} from 'aurelia-framework';\nimport {IEnumFormField} from '../../contracts';\n\nexport class DynamicUiNumberElement {\n  @bindable() public fieldValue: string;\n  public field: IEnumFormField;\n\n  public activate(field: IEnumFormField): void {\n    this.field = field;\n\n    const fieldHasNoValue: boolean = this.field.value === undefined || this.field.value === '';\n\n    if (fieldHasNoValue) {\n      this.field.value = this.field.defaultValue;\n    }\n  }\n\n  public fieldValueChanged(newValue: number): void {\n    const validPartsOfValue: Array<string> = /\\d+/.exec(`${newValue}`);\n\n    const valueHasNoValidPart: boolean = validPartsOfValue === null;\n\n    this.fieldValue = valueHasNoValidPart ? undefined : validPartsOfValue[0];\n\n    this.field.value = this.fieldValue;\n  }\n}\n","",null,"import {bindable} from 'aurelia-framework';\nimport {IEnumFormField} from '../../contracts';\n\nexport class DynamicUiRadioButtonElement {\n  @bindable()\n  public field: IEnumFormField;\n\n  public activate(field: IEnumFormField): void {\n    this.field = field;\n\n    const fieldHasNoValues: boolean = this.field.value === undefined || this.field.value === '';\n\n    if (fieldHasNoValues) {\n      this.field.value = this.field.defaultValue;\n    }\n  }\n}\n","",null,"import {bindable} from 'aurelia-framework';\nimport {IStringFormField} from '../../contracts';\n\nexport class DynamicUiTextboxElement {\n  @bindable()\n  public field: IStringFormField;\n\n  public activate(field: IStringFormField): void {\n    this.field = field;\n\n    const fieldValueIsNotSet: boolean = this.field.value === undefined || this.field.value === '';\n\n    if (fieldValueIsNotSet) {\n      this.field.value = this.field.defaultValue;\n    }\n  }\n}\n",".input-label {\n  margin-top: 10px;\n}\n",null,"import {bindable, inject} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {domEventDispatch} from 'dom-event-dispatch';\n\nimport {IIdentity} from '@essential-projects/iam_contracts';\nimport {DataModels} from '@process-engine/management_api_contracts';\n\nimport {IDynamicUiService, ISolutionEntry} from '../../contracts';\n\nenum ButtonClickActions {\n  cancel = 'cancel',\n  proceed = 'proceed',\n  decline = 'decline',\n}\n\n@inject('DynamicUiService', Router, Element)\nexport class DynamicUiWrapper {\n  public onButtonClick: (action: ButtonClickActions) => void;\n  @bindable() public currentUserTask: DataModels.UserTasks.UserTask;\n  @bindable() public currentManualTask: DataModels.ManualTasks.ManualTask;\n\n  @bindable() public isModal: boolean;\n  public identity: IIdentity;\n  public activeSolutionEntry: ISolutionEntry;\n\n  private element: Element;\n  private router: Router;\n  private dynamicUiService: IDynamicUiService;\n\n  constructor(dynamicUiService: IDynamicUiService, router: Router, element: Element) {\n    this.dynamicUiService = dynamicUiService;\n    this.router = router;\n    this.element = element;\n\n    this.isModal = false;\n  }\n\n  public async handleUserTaskButtonClick(\n    action: ButtonClickActions,\n    userTask: DataModels.UserTasks.UserTask,\n    results: DataModels.UserTasks.UserTaskResult,\n  ): Promise<void> {\n    const actionCanceled: boolean = action === ButtonClickActions.cancel;\n\n    if (actionCanceled) {\n      this.cancelTask();\n\n      return;\n    }\n\n    this.finishUserTask(action, userTask, results);\n  }\n\n  public async handleManualTaskButtonClick(action: ButtonClickActions): Promise<void> {\n    const actionCanceled: boolean = action === ButtonClickActions.cancel;\n\n    if (actionCanceled) {\n      this.cancelTask();\n\n      return;\n    }\n\n    this.finishManualTask();\n  }\n\n  public get isHandlingManualTask(): boolean {\n    return this.currentManualTask !== undefined;\n  }\n\n  public get isHandlingUserTask(): boolean {\n    return this.currentUserTask !== undefined;\n  }\n\n  private cancelTask(): void {\n    if (this.isModal) {\n      domEventDispatch.dispatchEvent(this.element, 'close-modal', {bubbles: true});\n\n      return;\n    }\n\n    const correlationId: string = this.currentUserTask\n      ? this.currentUserTask.correlationId\n      : this.currentManualTask.correlationId;\n\n    this.router.navigateToRoute('task-list-correlation', {\n      correlationId: correlationId,\n      solutionUri: this.activeSolutionEntry.uri,\n    });\n  }\n\n  private finishUserTask(\n    action: ButtonClickActions,\n    userTask: DataModels.UserTasks.UserTask,\n    results: DataModels.UserTasks.UserTaskResult,\n  ): Promise<void> {\n    const noUserTaskKnown: boolean = !this.isHandlingUserTask;\n\n    if (noUserTaskKnown) {\n      return;\n    }\n\n    const {correlationId, processInstanceId, flowNodeInstanceId} = userTask;\n    this.dynamicUiService.finishUserTask(this.identity, processInstanceId, correlationId, flowNodeInstanceId, results);\n\n    this.currentUserTask = undefined;\n\n    const buttonClickHandlerExists: boolean = this.onButtonClick !== undefined;\n    if (buttonClickHandlerExists) {\n      this.onButtonClick(action);\n    }\n  }\n\n  private finishManualTask(): Promise<void> {\n    const noManualTaskKnown: boolean = !this.isHandlingManualTask;\n\n    if (noManualTaskKnown) {\n      return;\n    }\n\n    const correlationId: string = this.currentManualTask.correlationId;\n    const processInstanceId: string = this.currentManualTask.processInstanceId;\n    const manualTaskInstanceId: string = this.currentManualTask.flowNodeInstanceId;\n\n    this.dynamicUiService.finishManualTask(this.identity, processInstanceId, correlationId, manualTaskInstanceId);\n\n    this.currentManualTask = undefined;\n\n    const buttonClickHandlerExists: boolean = this.onButtonClick !== undefined;\n    if (buttonClickHandlerExists) {\n      this.onButtonClick(ButtonClickActions.proceed);\n    }\n  }\n}\n",".dynamic-ui__button--decline {\n  margin-left: -1px;\n}\n\n// This removes the border of the dynamic ui\n.card {\n  border: none;\n}\n",null,"/* eslint-disable @typescript-eslint/generic-type-naming */\nimport * as EssentialProjectErrors from '@essential-projects/errors_ts';\nimport {IHttpClient, IRequestOptions, IResponse} from '@essential-projects/http_contracts';\n\nexport class HttpFetchClient implements IHttpClient {\n  private httpSuccessResponseCode: number = 200;\n  private httpRedirectResponseCode: number = 300;\n\n  public async get<T>(url: string, options?: IRequestOptions): Promise<IResponse<T>> {\n    const request: Request = new Request(url, {\n      method: 'GET',\n      mode: 'cors',\n      referrer: 'no-referrer',\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json',\n        ...options.headers,\n      },\n    });\n\n    const response: Response = await fetch(request);\n\n    const parsedResponse: IResponse<T> = await this.evaluateResponse<T>(response);\n\n    return parsedResponse;\n  }\n\n  public async post<D, T>(url: string, data: D, options?: IRequestOptions): Promise<IResponse<T>> {\n    const request: Request = new Request(url, {\n      method: 'POST',\n      mode: 'cors',\n      referrer: 'no-referrer',\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json',\n        ...options.headers,\n      },\n      body: JSON.stringify(data),\n    });\n\n    const response: Response = await fetch(request);\n\n    const parsedResponse: IResponse<T> = await this.evaluateResponse<T>(response);\n\n    return parsedResponse;\n  }\n\n  public async put<T>(url: string, data: T, options?: IRequestOptions): Promise<IResponse<T>> {\n    const request: Request = new Request(url, {\n      method: 'PUT',\n      mode: 'cors',\n      referrer: 'no-referrer',\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json',\n        ...options.headers,\n      },\n      body: JSON.stringify(data),\n    });\n\n    const response: Response = await fetch(request);\n\n    const parsedResponse: IResponse<T> = await this.evaluateResponse<T>(response);\n\n    return parsedResponse;\n  }\n\n  public async delete<T>(url: string, options?: IRequestOptions): Promise<IResponse<T>> {\n    const request: Request = new Request(url, {\n      method: 'DELETE',\n      mode: 'cors',\n      referrer: 'no-referrer',\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json',\n        ...options.headers,\n      },\n    });\n\n    const response: Response = await fetch(request);\n\n    const parsedResponse: IResponse<T> = await this.evaluateResponse<T>(response);\n\n    return parsedResponse;\n  }\n\n  private async evaluateResponse<T>(response: Response): Promise<IResponse<T>> {\n    const responseBody: string = await response.text();\n\n    const responseHasErrorCode: boolean = this.responseIsAnError(response.status);\n    if (responseHasErrorCode) {\n      const ErrorTypeToThrow: typeof Error = this.getErrorForStatusCode(response.status);\n\n      throw new ErrorTypeToThrow(responseBody);\n    }\n\n    const parsedResponse: IResponse<T> = {\n      result: this.parseResponseBody(responseBody),\n      status: response.status,\n    };\n\n    return parsedResponse;\n  }\n\n  private responseIsAnError(responseStatus: number): boolean {\n    return responseStatus < this.httpSuccessResponseCode || responseStatus >= this.httpRedirectResponseCode;\n  }\n\n  private getErrorForStatusCode(responseStatus: number): typeof Error {\n    const errorName: string = EssentialProjectErrors.ErrorCodes[responseStatus];\n\n    const isEssentialProjectsError: boolean = this.isEssentialProjectsError(errorName);\n    if (isEssentialProjectsError) {\n      return EssentialProjectErrors[errorName];\n    }\n\n    // return normal error, if there is no subtype for the given code.\n    return Error;\n  }\n\n  private isEssentialProjectsError(errorName: string): boolean {\n    return errorName in EssentialProjectErrors;\n  }\n\n  private parseResponseBody(result: any): any {\n    // NOTE: For whatever reason, every response.body received by popsicle is a string,\n    // even in a response header \"Content-Type application/json\" is set, or if the response body does not exist.\n    // To get around this, we have to cast the result manually.\n    try {\n      return JSON.parse(result);\n    } catch (error) {\n      return result;\n    }\n  }\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\nimport {HttpFetchClient} from './HttpFetchClient';\n\nexport async function configure(config: FrameworkConfiguration): Promise<void> {\n  const httpFetchClient: HttpFetchClient = new HttpFetchClient();\n\n  config.container.registerInstance('HttpFetchClient', httpFetchClient);\n}\n","import {DataModels} from '@process-engine/management_api_contracts';\nimport {bindable, inject} from 'aurelia-framework';\nimport {NotificationType} from '../../contracts/index';\nimport {NotificationService} from '../../services/notification-service/notification.service';\n\n@inject('NotificationService')\nexport class FormWidget {\n  @bindable()\n  public userTaskConfig: DataModels.UserTasks.UserTaskConfig;\n\n  private notificationService: NotificationService;\n\n  constructor(notificationService: NotificationService) {\n    this.notificationService = notificationService;\n  }\n\n  public getFieldControl(field: DataModels.UserTasks.UserTaskFormField): string {\n    switch (field.type) {\n      case DataModels.UserTasks.UserTaskFormFieldType.enum:\n        return 'dropdown';\n      case DataModels.UserTasks.UserTaskFormFieldType.string:\n        return 'textbox';\n      case DataModels.UserTasks.UserTaskFormFieldType.boolean:\n        return 'checkbox';\n      case DataModels.UserTasks.UserTaskFormFieldType.long:\n        return 'number';\n      default:\n        this.showNotSupportedMessage(field);\n\n        return null;\n    }\n  }\n\n  private showNotSupportedMessage(field: DataModels.UserTasks.UserTaskFormField): void {\n    const formFieldHasCustomType: boolean = field.type === undefined;\n    const notSupportedType: string = formFieldHasCustomType ? 'Custom Type' : field.type;\n\n    const errorMessage: string =\n      `Not supported form field type: ${notSupportedType}.` +\n      `</br>Please change the form field type with id \"${field.id}\".`;\n\n    this.notificationService.showNotification(NotificationType.ERROR, errorMessage);\n  }\n}\n","",null,"import {bindable, computedFrom, inject} from 'aurelia-framework';\n\nimport {ManagementApiClientService} from '@process-engine/management_api_client';\nimport {DataModels} from '@process-engine/management_api_contracts';\n\nimport {ForbiddenError, UnauthorizedError, isError} from '@essential-projects/errors_ts';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {ISolutionEntry} from '../../../contracts/index';\nimport environment from '../../../environment';\nimport {getBeautifiedDate} from '../../../services/date-service/date.service';\n\n@inject('ManagementApiClientService', EventAggregator)\nexport class CronjobList {\n  @bindable public activeSolutionEntry: ISolutionEntry;\n  public initialLoadingFinished: boolean = false;\n  public currentPage: number = 1;\n  public pageSize: number = 10;\n  public paginationSize: number = 10;\n  public showError: boolean;\n\n  private managementApiService: ManagementApiClientService;\n\n  private cronjobs: Array<DataModels.Cronjobs.CronjobConfiguration> = [];\n  private pollingTimeout: NodeJS.Timeout;\n  private isAttached: boolean;\n  private eventAggregator: EventAggregator;\n\n  constructor(managementApiService: ManagementApiClientService, eventAggregator: EventAggregator) {\n    this.managementApiService = managementApiService;\n    this.eventAggregator = eventAggregator;\n  }\n\n  public async activeSolutionEntryChanged(newValue): Promise<void> {\n    if (this.isAttached) {\n      this.cronjobs = [];\n      this.initialLoadingFinished = false;\n      this.showError = false;\n      this.eventAggregator.publish(environment.events.configPanel.solutionEntryChanged, newValue);\n\n      await this.updateCronjobs();\n    }\n  }\n\n  public async attached(): Promise<void> {\n    this.isAttached = true;\n\n    await this.updateCronjobs();\n    this.startPolling();\n  }\n\n  public detached(): void {\n    this.isAttached = false;\n    this.stopPolling();\n  }\n\n  @computedFrom('cronjobs.length')\n  public get totalItems(): number {\n    return this.cronjobs.length;\n  }\n\n  @computedFrom('cronjobsToDisplay.length')\n  public get showCronjobList(): boolean {\n    return this.cronjobsToDisplay !== undefined && this.cronjobsToDisplay.length > 0;\n  }\n\n  public get cronjobsToDisplay(): Array<DataModels.Cronjobs.CronjobConfiguration> {\n    const firstCronjobIndex: number = (this.currentPage - 1) * this.pageSize;\n    const lastCronjobIndex: number = this.pageSize * this.currentPage;\n\n    const cronjobsToDisplay: Array<DataModels.Cronjobs.CronjobConfiguration> = [...this.cronjobs]\n      .sort(this.sortCronjobs)\n      .slice(firstCronjobIndex, lastCronjobIndex);\n\n    return cronjobsToDisplay;\n  }\n\n  public getBeautifiedDate(date: Date): string {\n    const beautifiedDate: string = getBeautifiedDate(date);\n\n    return beautifiedDate;\n  }\n\n  public async updateCronjobs(): Promise<void> {\n    try {\n      this.cronjobs = await this.managementApiService.getAllActiveCronjobs(this.activeSolutionEntry.identity);\n\n      this.initialLoadingFinished = true;\n    } catch (error) {\n      this.initialLoadingFinished = true;\n\n      const errorIsForbiddenError: boolean = isError(error, ForbiddenError);\n      const errorIsUnauthorizedError: boolean = isError(error, UnauthorizedError);\n      const errorIsAuthenticationRelated: boolean = errorIsForbiddenError || errorIsUnauthorizedError;\n\n      if (!errorIsAuthenticationRelated) {\n        this.cronjobs = [];\n        this.showError = true;\n      }\n    }\n  }\n\n  private startPolling(): void {\n    this.pollingTimeout = setTimeout(async () => {\n      await this.updateCronjobs();\n\n      if (this.isAttached) {\n        this.startPolling();\n      }\n    }, environment.processengine.dashboardPollingIntervalInMs);\n  }\n\n  private stopPolling(): void {\n    clearTimeout(this.pollingTimeout);\n  }\n\n  private sortCronjobs(\n    firstCronjob: DataModels.Cronjobs.CronjobConfiguration,\n    secondCronjob: DataModels.Cronjobs.CronjobConfiguration,\n  ): number {\n    return firstCronjob.nextExecution.getTime() - secondCronjob.nextExecution.getTime();\n  }\n}\n",".cronjob-list__last-table-cell {\n  width: 1%;\n  white-space: nowrap;\n}\n\n.pagination {\n  padding-right: 0px;\n  justify-content: center;\n}\n\n.loading-spinner {\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 100px;\n}\n\n.cronjob-list-container {\n  flex: 1;\n}\n\n.cronjob-list-item-modelname:hover {\n  color: inherit;\n}\n\n.cronjob-list-header {\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n\n.cronjob-list-total-count {\n  float: right;\n}\n\n.cronjob-list__no-cronjobs-text--error {\n  color: darkred;\n}\n",null,"import {bindable} from 'aurelia-framework';\nimport {ISolutionEntry} from '../../../contracts';\n\nconst versionRegex: RegExp = /(\\d+)\\.(\\d+).(\\d+)/;\nexport class Dashboard {\n  @bindable() public activeSolutionEntry: ISolutionEntry;\n  public showCronjobList: boolean = false;\n\n  public attached(): void {\n    this.showCronjobList = this.processEngineSupportsCronjob();\n  }\n\n  private processEngineSupportsCronjob(): boolean {\n    const processEngineVersion: string = this.activeSolutionEntry.processEngineVersion;\n\n    const noProcessEngineVersionSet: boolean = processEngineVersion === undefined;\n    if (noProcessEngineVersionSet) {\n      return false;\n    }\n\n    const regexResult: RegExpExecArray = versionRegex.exec(processEngineVersion);\n    const majorVersion: number = parseInt(regexResult[1]);\n    const minorVersion: number = parseInt(regexResult[2]);\n\n    // The version must be 8.4.0 or later\n    const processEngineSupportsEvents: boolean = majorVersion > 8 || (majorVersion === 8 && minorVersion >= 4);\n\n    return processEngineSupportsEvents;\n  }\n}\n",".dashboard-container {\n  overflow: auto;\n  height: 100%;\n  padding: 20px 60px;\n}\n\n.dashboard__last-table-cell {\n  width: 1%;\n  white-space: nowrap;\n}\n\n.loading-spinner {\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 100px;\n}\n\n.task-list-container {\n  flex: 1;\n}\n\n.task-list {\n  display: flex;\n  align-items: stretch;\n}\n",null,"export interface IFlowNodeAssociation {\n  associationId: string;\n  sourceId: string;\n  runtime_medianInMs: number;\n}\n","import {IIdentity} from '@essential-projects/iam_contracts';\nimport {DataModels} from '@process-engine/management_api_contracts';\n\nexport interface IHeatmapRepository {\n  getRuntimeInformationForProcessModel(\n    processModelId: string,\n  ): Promise<Array<DataModels.Kpi.FlowNodeRuntimeInformation>>;\n  getProcess(processModelId: string): Promise<DataModels.ProcessModels.ProcessModel>;\n  getActiveTokensForFlowNode(flowNodeId: string): Promise<Array<DataModels.Kpi.ActiveToken>>;\n  setIdentity(identity: IIdentity): void;\n}\n","import {IIdentity} from '@essential-projects/iam_contracts';\nimport {DataModels} from '@process-engine/management_api_contracts';\nimport {IFlowNodeAssociation} from '.';\nimport {IBpmnModeler, IElementRegistry, IOverlayManager} from '../../../../contracts';\n\nexport interface IHeatmapService {\n  getRuntimeInformationForProcessModel(\n    processModelId: string,\n  ): Promise<Array<DataModels.Kpi.FlowNodeRuntimeInformation>>;\n  getProcess(processModelId: string): Promise<DataModels.ProcessModels.ProcessModel>;\n  getFlowNodeAssociations(elementRegistry: IElementRegistry): Array<IFlowNodeAssociation>;\n  getColoredXML(\n    associations: Array<IFlowNodeAssociation>,\n    flowNodeRuntimeInformation: Array<DataModels.Kpi.FlowNodeRuntimeInformation>,\n    modeler: IBpmnModeler,\n  ): Promise<string>;\n  getActiveTokensForFlowNode(flowNodeId: string): Promise<Array<DataModels.Kpi.ActiveToken>>;\n  addOverlays(overlays: IOverlayManager, elementRegistry: IElementRegistry, processModelId: string): void;\n  setIdentity(identity: IIdentity): void;\n}\n","export interface ITokenPositionAndCount {\n  flowNodeId: string;\n  count: number;\n}\n","import {IDefaultOverlayPositions} from '../../../../contracts';\n\nexport const defaultOverlayPositions: IDefaultOverlayPositions = {\n  tasks: {\n    left: 80,\n    top: -15,\n  },\n  gateways: {\n    left: 31,\n    top: -15,\n  },\n  events: {\n    left: 23,\n    top: -24,\n  },\n  participants: {\n    left: 18,\n    top: 20,\n  },\n};\n","export * from './IHeatmap.Repository';\nexport * from './IHeatmap.Service';\nexport * from './IFlowNodeAssociation';\nexport * from './ITokenPositionAndCount';\nexport * from './constants';\n","import {bindable, inject} from 'aurelia-framework';\n\nimport * as bundle from '@process-engine/bpmn-js-custom-bundle';\nimport {DataModels} from '@process-engine/management_api_contracts';\nimport {IDiagram} from '@process-engine/solutionexplorer.contracts';\n\nimport {\n  IBpmnModeler,\n  ICanvas,\n  IElementRegistry,\n  IOverlayManager,\n  ISolutionEntry,\n  IViewbox,\n} from '../../../contracts/index';\n\nimport {IFlowNodeAssociation, IHeatmapService} from './contracts';\n\n@inject('HeatmapService')\nexport class Heatmap {\n  public viewerContainer: HTMLDivElement;\n  public noRuntimeInformation: boolean = false;\n  @bindable() public activeDiagram: IDiagram;\n  @bindable() public activeSolutionEntry: ISolutionEntry;\n\n  private heatmapService: IHeatmapService;\n  private modeler: IBpmnModeler;\n  private viewer: IBpmnModeler;\n\n  constructor(heatmapService: IHeatmapService) {\n    this.heatmapService = heatmapService;\n  }\n\n  public activeSolutionEntryChanged(newValue: ISolutionEntry): void {\n    this.heatmapService.setIdentity(newValue.identity);\n  }\n\n  public activeDiagramChanged(): void {\n    this.noRuntimeInformation = false;\n    const attachedViewer: Element = document.getElementsByClassName('bjs-container')[0];\n\n    const viewerContainerIsAttached: boolean =\n      this.viewerContainer !== undefined &&\n      this.viewerContainer !== null &&\n      this.viewerContainer.childElementCount > 1 &&\n      attachedViewer !== undefined &&\n      attachedViewer !== null;\n\n    if (viewerContainerIsAttached) {\n      this.viewerContainer.removeChild(attachedViewer);\n    }\n\n    const viewerIsInitialized: boolean = this.viewer !== undefined;\n    if (viewerIsInitialized) {\n      this.viewer.detach();\n      this.viewer.destroy();\n    }\n\n    this.initialize();\n  }\n\n  public async initialize(): Promise<void> {\n    const noActiveDiagram: boolean = this.activeDiagram === undefined;\n    if (noActiveDiagram) {\n      return;\n    }\n\n    const diagramIsNoRemoteDiagram: boolean = !this.activeDiagram.uri.startsWith('http');\n    if (diagramIsNoRemoteDiagram) {\n      this.noRuntimeInformation = true;\n      return;\n    }\n\n    // eslint-disable-next-line 6river/new-cap\n    this.modeler = new bundle.modeler({\n      moddleExtensions: {\n        camunda: bundle.camundaModdleDescriptor,\n      },\n    });\n\n    await this.pushXmlToBpmnModeler(this.activeDiagram.xml, this.modeler);\n\n    const elementRegistry: IElementRegistry = this.modeler.get('elementRegistry');\n    /*\n     * TODO: Refactoring opportunity; HeatmapService could use a fluent API; This is how it would look like:\n     * this._heatmapService\n     *   .setFlowNodeAssociations(elementRegistry) // -> associations\n     *   .setRuntimeInformationForProcessModel(this.processmodelid) // -> flowNodeRuntimeInformation\n     *   .getColoredXML(this._modeler) // <- associations, flowNodeRuntimeInformation\n     */\n\n    const associations: Array<IFlowNodeAssociation> = await this.heatmapService.getFlowNodeAssociations(\n      elementRegistry,\n    );\n\n    const flowNodeRuntimeInformation: Array<\n      DataModels.Kpi.FlowNodeRuntimeInformation\n    > = await this.heatmapService.getRuntimeInformationForProcessModel(this.activeDiagram.id);\n\n    const xml: string = await this.heatmapService.getColoredXML(associations, flowNodeRuntimeInformation, this.modeler);\n\n    // eslint-disable-next-line 6river/new-cap\n    this.viewer = new bundle.viewer({\n      additionalModules: [bundle.ZoomScrollModule, bundle.MoveCanvasModule, bundle.MiniMap],\n    });\n\n    await this.pushXmlToBpmnModeler(xml, this.viewer);\n\n    const overlays: IOverlayManager = this.viewer.get('overlays');\n\n    this.heatmapService.addOverlays(overlays, elementRegistry, this.activeDiagram.id);\n\n    const containerIsPresent: boolean = this.viewerContainer !== null;\n    if (containerIsPresent) {\n      this.viewer.attachTo(this.viewerContainer);\n    }\n\n    this.fitDiagramToViewport();\n  }\n\n  private pushXmlToBpmnModeler(xml: string, modeler: IBpmnModeler): Promise<void> {\n    return new Promise((resolve: Function, reject: Function): void => {\n      modeler.importXML(xml, (importXmlError: Error) => {\n        if (importXmlError) {\n          reject(importXmlError);\n          return;\n        }\n        resolve();\n      });\n    });\n  }\n\n  private fitDiagramToViewport(): void {\n    const canvas: ICanvas = this.viewer.get('canvas');\n    const viewbox: IViewbox = canvas.viewbox();\n    const diagramIsVisible: boolean = viewbox.height > 0 && viewbox.width > 0;\n\n    if (diagramIsVisible) {\n      canvas.zoom('fit-viewport', 'auto');\n    }\n  }\n}\n",".heatmap {\n  display: flex;\n  position: relative;\n  width: 100%;\n  height: 100%;\n  padding-right: 36px;\n}\n\n.heatmap__viewer-container {\n  height: 100%;\n  width: 100%;\n}\n\n.heatmap__legend {\n  position: absolute;\n  bottom: 20px;\n  left: 20px;\n  max-width: 155px;\n  background: whitesmoke;\n  user-select: none;\n}\n\n.heatmap__legend-entry {\n  display: block;\n  margin: 0 10px;\n  font-size: 14px;\n}\n\n.heatmap__legend-entry-first {\n  margin-top: 10px;\n  margin-bottom: 2px;\n  font-size: 14px;\n  font-weight: bold;\n}\n\n.heatmap__legend-entry-last {\n  margin-bottom: 10px;\n}\n\n.heatmap__overlay {\n  width: 35px;\n  height: 35px;\n  min-height: 16px;\n  padding: 7px;\n  background-color: black;\n  border-radius: 50%;\n  font-family: Arial;\n  font-size: 14px;\n  color: white;\n  text-align: center;\n}\n\n.red {\n  color: #E53935;\n}\n\n.green {\n  color: #43A047;\n}\n\n.black {\n  color: black;\n}\n\n.heatmap__empty-message {\n  width: 100%;\n  text-align: center;\n  transform: translateY(50%);\n  user-select: none;\n}\n",null,"import {FrameworkConfiguration} from 'aurelia-framework';\n\nimport {HeatmapRepository} from './repositories/heatmap.repository';\nimport {HeatmapService} from './services/heatmap.service';\n\nexport function configure(config: FrameworkConfiguration): void {\n  config.container.registerSingleton('HeatmapRepository', HeatmapRepository);\n  config.container.registerSingleton('HeatmapService', HeatmapService);\n}\n","/* eslint-disable max-lines */\nimport {inject} from 'aurelia-framework';\n\nimport {IIdentity} from '@essential-projects/iam_contracts';\nimport {ManagementApiClientService} from '@process-engine/management_api_client';\nimport {DataModels} from '@process-engine/management_api_contracts';\n\nimport {IHeatmapRepository} from '../contracts/IHeatmap.Repository';\n\n@inject('ManagementApiClientService')\nexport class HeatmapMockRepository implements IHeatmapRepository {\n  private managementApiClient: ManagementApiClientService;\n  private identity: IIdentity;\n\n  private mockDataForHeatmapSampleProcess: Array<DataModels.Kpi.FlowNodeRuntimeInformation> = [\n    /** 3 Tasks */\n    {\n      processModelId: 'heatmap_sample',\n      flowNodeId: 'Task_1sy1ibw',\n      arithmeticMeanRuntimeInMs: 10000.0,\n      firstQuartileRuntimeInMs: NaN,\n      medianRuntimeInMs: 10100.5,\n      thirdQuartileRuntimeInMs: NaN,\n      minRuntimeInMs: NaN,\n      maxRuntimeInMs: NaN,\n    },\n    {\n      processModelId: 'heatmap_sample',\n      flowNodeId: 'Task_0julnc5',\n      arithmeticMeanRuntimeInMs: 10000.0,\n      firstQuartileRuntimeInMs: NaN,\n      medianRuntimeInMs: 10100.5,\n      thirdQuartileRuntimeInMs: NaN,\n      minRuntimeInMs: NaN,\n      maxRuntimeInMs: NaN,\n    },\n    {\n      processModelId: 'heatmap_sample',\n      flowNodeId: 'Task_04fbo5q',\n      arithmeticMeanRuntimeInMs: 10000.0,\n      firstQuartileRuntimeInMs: NaN,\n      medianRuntimeInMs: 10100.5,\n      thirdQuartileRuntimeInMs: NaN,\n      minRuntimeInMs: NaN,\n      maxRuntimeInMs: NaN,\n    },\n    /** 2 Gateways */\n    {\n      processModelId: 'heatmap_sample',\n      flowNodeId: 'ExclusiveGateway_0fi1ct7',\n      arithmeticMeanRuntimeInMs: 5000.0,\n      firstQuartileRuntimeInMs: NaN,\n      medianRuntimeInMs: 5100.5,\n      thirdQuartileRuntimeInMs: NaN,\n      minRuntimeInMs: NaN,\n      maxRuntimeInMs: NaN,\n    },\n    {\n      processModelId: 'heatmap_sample',\n      flowNodeId: 'ExclusiveGateway_134ybqm',\n      arithmeticMeanRuntimeInMs: 5100.0,\n      firstQuartileRuntimeInMs: NaN,\n      medianRuntimeInMs: 4900.5,\n      thirdQuartileRuntimeInMs: NaN,\n      minRuntimeInMs: NaN,\n      maxRuntimeInMs: NaN,\n    },\n    /** 7 Edges */\n    {\n      processModelId: 'heatmap_sample',\n      flowNodeId: 'SequenceFlow_1jdocur',\n      arithmeticMeanRuntimeInMs: 1000.0,\n      firstQuartileRuntimeInMs: NaN,\n      medianRuntimeInMs: 10100.5,\n      thirdQuartileRuntimeInMs: NaN,\n      minRuntimeInMs: NaN,\n      maxRuntimeInMs: NaN,\n    },\n    {\n      processModelId: 'heatmap_sample',\n      flowNodeId: 'SequenceFlow_1g8yhyu',\n      arithmeticMeanRuntimeInMs: 1000.0,\n      firstQuartileRuntimeInMs: NaN,\n      medianRuntimeInMs: 10100.5,\n      thirdQuartileRuntimeInMs: NaN,\n      minRuntimeInMs: NaN,\n      maxRuntimeInMs: NaN,\n    },\n    {\n      processModelId: 'heatmap_sample',\n      flowNodeId: 'SequenceFlow_0szygwm',\n      arithmeticMeanRuntimeInMs: 1000.0,\n      firstQuartileRuntimeInMs: NaN,\n      medianRuntimeInMs: 10100.5,\n      thirdQuartileRuntimeInMs: NaN,\n      minRuntimeInMs: NaN,\n      maxRuntimeInMs: NaN,\n    },\n    {\n      processModelId: 'heatmap_sample',\n      flowNodeId: 'SequenceFlow_17fbkvc',\n      arithmeticMeanRuntimeInMs: 1000.0,\n      firstQuartileRuntimeInMs: NaN,\n      medianRuntimeInMs: 10100.5,\n      thirdQuartileRuntimeInMs: NaN,\n      minRuntimeInMs: NaN,\n      maxRuntimeInMs: NaN,\n    },\n    {\n      processModelId: 'heatmap_sample',\n      flowNodeId: 'SequenceFlow_027yae2',\n      arithmeticMeanRuntimeInMs: 1000.0,\n      firstQuartileRuntimeInMs: NaN,\n      medianRuntimeInMs: 10100.5,\n      thirdQuartileRuntimeInMs: NaN,\n      minRuntimeInMs: NaN,\n      maxRuntimeInMs: NaN,\n    },\n    {\n      processModelId: 'heatmap_sample',\n      flowNodeId: 'SequenceFlow_0nqcs3t',\n      arithmeticMeanRuntimeInMs: 1000.0,\n      firstQuartileRuntimeInMs: NaN,\n      medianRuntimeInMs: 10100.5,\n      thirdQuartileRuntimeInMs: NaN,\n      minRuntimeInMs: NaN,\n      maxRuntimeInMs: NaN,\n    },\n    // {\n    //   processModelId: 'DemoNutztierRiss',\n    //   flowNodeId: 'SequenceFlow_0jc0guj',\n    //   arithmeticMeanRuntimeInMs: 1000.0,\n    //   firstQuartileRuntimeInMs: NaN,\n    //   medianRuntimeInMs: 10100.5,\n    //   thirdQuartileRuntimeInMs: NaN,\n    //   minRuntimeInMs: NaN,\n    //   maxRuntimeInMs: NaN,\n    // },\n  ];\n\n  private mockDataForActiveTokens: Array<DataModels.Kpi.ActiveToken> = [\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_1sy1ibw',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_0julnc5',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_0julnc5',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_0julnc5',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_0julnc5',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_0julnc5',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'Task_04fbo5q',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'EndEvent_0eie6q6',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'EndEvent_0eie6q6',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n    {\n      processInstanceId: 'test',\n      processModelId: 'heatmap_sample',\n      correlationId: 'test',\n      identity: {\n        token: 'test',\n        userId: 'test',\n      },\n      createdAt: new Date(),\n      flowNodeId: 'EndEvent_0eie6q6',\n      flowNodeInstanceId: '<flownodeinstanceidhere>',\n      payload: '',\n    },\n  ];\n\n  constructor(manegementApiClient: ManagementApiClientService) {\n    this.managementApiClient = manegementApiClient;\n  }\n\n  public setIdentity(identity: IIdentity): void {\n    this.identity = identity;\n  }\n\n  public getRuntimeInformationForProcessModel(\n    processModelId: string,\n  ): Promise<Array<DataModels.Kpi.FlowNodeRuntimeInformation>> {\n    return new Promise((resolve: Function, reject: Function): void => {\n      resolve(this.mockDataForHeatmapSampleProcess);\n    });\n  }\n\n  public getActiveTokensForFlowNode(flowNodeId: string): Promise<Array<DataModels.Kpi.ActiveToken>> {\n    return new Promise((resolve: Function, reject: Function): void => {\n      const newArray: Array<DataModels.Kpi.ActiveToken> = this.mockDataForActiveTokens.filter(\n        (element: DataModels.Kpi.ActiveToken) => {\n          const elementIs: boolean = element.flowNodeId === flowNodeId;\n          return elementIs;\n        },\n      );\n      resolve(newArray);\n    });\n  }\n\n  public getProcess(processModelId: string): Promise<DataModels.ProcessModels.ProcessModel> {\n    return this.managementApiClient.getProcessModelById(this.identity, processModelId);\n  }\n}\n","import {inject} from 'aurelia-framework';\n\nimport {IIdentity} from '@essential-projects/iam_contracts';\nimport {DataModels, IManagementApi} from '@process-engine/management_api_contracts';\n\nimport {IHeatmapRepository} from '../contracts/IHeatmap.Repository';\n\n@inject('ManagementApiClientService')\nexport class HeatmapRepository implements IHeatmapRepository {\n  private managementApiClientService: IManagementApi;\n  private identity: IIdentity;\n\n  constructor(managementApiClientService: IManagementApi) {\n    this.managementApiClientService = managementApiClientService;\n  }\n\n  public getRuntimeInformationForProcessModel(\n    processModelId: string,\n  ): Promise<Array<DataModels.Kpi.FlowNodeRuntimeInformation>> {\n    return this.managementApiClientService.getRuntimeInformationForProcessModel(this.identity, processModelId);\n  }\n\n  public getProcess(processModelId: string): Promise<DataModels.ProcessModels.ProcessModel> {\n    return this.managementApiClientService.getProcessModelById(this.identity, processModelId);\n  }\n\n  public getActiveTokensForFlowNode(flowNodeId: string): Promise<Array<DataModels.Kpi.ActiveToken>> {\n    return this.managementApiClientService.getActiveTokensForFlowNode(this.identity, flowNodeId);\n  }\n\n  public setIdentity(identity: IIdentity): void {\n    this.identity = identity;\n  }\n}\n","import {inject} from 'aurelia-framework';\n\nimport {IIdentity} from '@essential-projects/iam_contracts';\nimport {IConnection, IShape} from '@process-engine/bpmn-elements_contracts';\nimport {DataModels} from '@process-engine/management_api_contracts';\n\nimport {\n  IBpmnModeler,\n  IColorPickerColor,\n  IElementRegistry,\n  IModeling,\n  IOverlayManager,\n  IOverlayPosition,\n  defaultBpmnColors,\n} from '../../../../contracts/index';\nimport {\n  IFlowNodeAssociation,\n  IHeatmapRepository,\n  IHeatmapService,\n  ITokenPositionAndCount,\n  defaultOverlayPositions,\n} from '../contracts/index';\n\n// maximalTokenCount is used to sanitise the displayed number to \"99+\"\nconst maximalTokenCount: number = 100;\n\n@inject('HeatmapRepository')\nexport class HeatmapService implements IHeatmapService {\n  private heatmapRepository: IHeatmapRepository;\n\n  constructor(heatmapRepository: IHeatmapRepository) {\n    this.heatmapRepository = heatmapRepository;\n  }\n\n  public setIdentity(identity: IIdentity): void {\n    this.heatmapRepository.setIdentity(identity);\n  }\n\n  public getRuntimeInformationForProcessModel(\n    processModelId: string,\n  ): Promise<Array<DataModels.Kpi.FlowNodeRuntimeInformation>> {\n    return this.heatmapRepository.getRuntimeInformationForProcessModel(processModelId);\n  }\n\n  public getActiveTokensForFlowNode(flowNodeId: string): Promise<Array<DataModels.Kpi.ActiveToken>> {\n    return this.heatmapRepository.getActiveTokensForFlowNode(flowNodeId);\n  }\n\n  /**\n   *\n   * @param overlays IOverlayManager; The overlay module from bpmn-js\n   * @param elementRegistry IElementRegistry; The elementRegistry module from bpmn-js\n   *\n   * This method adds overlays for the activeTokens to the diagram viewer.\n   */\n  public async addOverlays(\n    overlays: IOverlayManager,\n    elementRegistry: IElementRegistry,\n    processModelId: string,\n  ): Promise<void> {\n    let participantsTokenCount: number = 0;\n\n    const addOverlay: (elementId: string, count: number, position: IOverlayPosition) => void = (\n      elementId: string,\n      count: number,\n      position: IOverlayPosition,\n    ): void => {\n      const countIsTooHigh: boolean = count >= maximalTokenCount;\n\n      overlays.add(elementId, {\n        position: {\n          left: position.left,\n          top: position.top,\n        },\n        html: `<div class=\"heatmap__overlay\" title=\"This element has actual ${count} token.\">${\n          countIsTooHigh ? '99+' : count\n        }</div>`,\n      });\n    };\n\n    const elementsForOverlays: Array<IShape> = this.getElementsForOverlays(elementRegistry);\n    const activeTokenListArray: Array<Array<DataModels.Kpi.ActiveToken>> = await this.getActiveTokenListArray(\n      elementsForOverlays,\n      processModelId,\n    );\n\n    this.addShapeTypeToActiveToken(activeTokenListArray, elementsForOverlays);\n\n    const elementsWithoutToken: Array<IShape> = this.getElementsWithoutToken(elementsForOverlays, activeTokenListArray);\n\n    activeTokenListArray.forEach((activeTokenArray: Array<DataModels.Kpi.ActiveToken & {type: string}>) => {\n      const elementIsEvent: boolean = this.elementIsEvent(activeTokenArray[0].type);\n      const elementIsGateway: boolean = this.elementIsGateway(activeTokenArray[0].type);\n      const elementIsTask: boolean = this.elementIsTask(activeTokenArray[0].type);\n\n      if (elementIsGateway) {\n        addOverlay(activeTokenArray[0].flowNodeId, activeTokenArray.length, defaultOverlayPositions.gateways);\n      } else if (elementIsEvent) {\n        addOverlay(activeTokenArray[0].flowNodeId, activeTokenArray.length, defaultOverlayPositions.events);\n      } else if (elementIsTask) {\n        addOverlay(activeTokenArray[0].flowNodeId, activeTokenArray.length, defaultOverlayPositions.tasks);\n      }\n\n      participantsTokenCount += activeTokenArray.length;\n    });\n\n    elementsWithoutToken.forEach((element: IShape) => {\n      const elementIsEvent: boolean = this.elementIsEvent(element.type);\n      const elementIsGateway: boolean = this.elementIsGateway(element.type);\n      const elementIsTask: boolean = this.elementIsTask(element.type);\n\n      if (elementIsGateway) {\n        addOverlay(element.id, 0, defaultOverlayPositions.gateways);\n      } else if (elementIsEvent) {\n        addOverlay(element.id, 0, defaultOverlayPositions.events);\n      } else if (elementIsTask) {\n        addOverlay(element.id, 0, defaultOverlayPositions.tasks);\n      }\n    });\n\n    const participantShape: IShape = this.getParticipantShape(elementRegistry);\n    addOverlay(participantShape.id, participantsTokenCount, {\n      left: participantShape.width - defaultOverlayPositions.participants.left,\n      top: participantShape.height - defaultOverlayPositions.participants.top,\n    });\n  }\n\n  public getProcess(processModelId: string): Promise<DataModels.ProcessModels.ProcessModel> {\n    return this.heatmapRepository.getProcess(processModelId);\n  }\n\n  /**\n   *\n   * @param elementRegistry IElementRegistry; The elementRegistry module from bpmn-js\n   *\n   * This method finds all associations (IConnection) on flowNodes which are defined with 'RT:'\n   * and returns them as IFlowNodeAssociation.\n   *\n   * A flowNodeAssociation contains the associationId, the elementId with which\n   * it is connected and the expected runtime.\n   *\n   */\n  public getFlowNodeAssociations(elementRegistry: IElementRegistry): Array<IFlowNodeAssociation> {\n    const flowNodeAssociations: Array<IFlowNodeAssociation> = [];\n\n    const associations: Array<IConnection> = elementRegistry.filter((element: IShape) => {\n      const elementIsNoValidAssociation: boolean =\n        element.target === undefined ||\n        element.target.businessObject === undefined ||\n        element.target.businessObject.text === undefined;\n\n      if (elementIsNoValidAssociation) {\n        return false;\n      }\n\n      const elementIsAssociation: boolean = element.type === 'bpmn:Association';\n      const annotationHasRuntime: boolean = element.target.businessObject.text.includes('RT:');\n\n      return elementIsAssociation && annotationHasRuntime;\n    });\n\n    associations.forEach((association: IConnection) => {\n      const medianRunTime: number = this.getMedianRunTimeForAssociation(association);\n\n      const flowNodeAssociation: IFlowNodeAssociation = {\n        associationId: association.id,\n        sourceId: association.source.id,\n        runtime_medianInMs: medianRunTime,\n      };\n\n      flowNodeAssociations.push(flowNodeAssociation);\n    });\n\n    return flowNodeAssociations;\n  }\n\n  /**\n   *\n   * @param associations Array<IFlowNodeAssociation>;\n   * @param flowNodeRuntimeInformation Array<DataModels.Kpi.FlowNodeRuntimeInformation>; RuntimeInformation which comes from the backend.\n   * @param modeler IBpmnModeler; The bpmn-js diagram modeler (only the modeler can color elements).\n   *\n   * Checks if the runtime for a flowNode is greater than expected and colors the element\n   * depending on the result.\n   *\n   * greater => red\n   * smaller => green\n   *\n   */\n  public async getColoredXML(\n    associations: Array<IFlowNodeAssociation>,\n    flowNodeRuntimeInformation: Array<DataModels.Kpi.FlowNodeRuntimeInformation>,\n    modeler: IBpmnModeler,\n  ): Promise<string> {\n    const elementRegistry: IElementRegistry = modeler.get('elementRegistry');\n    const modeling: IModeling = modeler.get('modeling');\n\n    const elementsToColor: Array<DataModels.Kpi.FlowNodeRuntimeInformation> = this.getElementsToColor(\n      associations,\n      flowNodeRuntimeInformation,\n    );\n\n    associations.forEach((association: IFlowNodeAssociation) => {\n      const elementToColor: DataModels.Kpi.FlowNodeRuntimeInformation = elementsToColor.find(\n        (element: DataModels.Kpi.FlowNodeRuntimeInformation) => {\n          return element.flowNodeId === association.sourceId;\n        },\n      );\n\n      const elementToColorIsUndefined: boolean = elementToColor === undefined;\n\n      if (elementToColorIsUndefined) {\n        return;\n      }\n\n      const shapeToColor: IShape = this.getShape(elementRegistry, elementToColor);\n      const flowNodeRuntimeIsGreaterThanExpected: boolean =\n        elementToColor.medianRuntimeInMs > association.runtime_medianInMs;\n\n      if (flowNodeRuntimeIsGreaterThanExpected) {\n        this.colorElement(modeling, shapeToColor, defaultBpmnColors.red);\n      } else {\n        this.colorElement(modeling, shapeToColor, defaultBpmnColors.green);\n      }\n    });\n\n    const xml: string = await this.getXmlFromModeler(modeler);\n\n    return xml;\n  }\n\n  private colorElement(modeling: IModeling, shapeToColor: IShape, color: IColorPickerColor): void {\n    modeling.setColor(shapeToColor, {\n      stroke: color.border,\n      fill: color.fill,\n    });\n  }\n\n  /**\n   *\n   * @param associations Array<IFlowNodeAssociation>; Expected runtime information.\n   * @param flowNodeRuntimeInformation Array<DataModels.Kpi.FlowNodeRuntimeInformation>; RuntimeInformation which comes from the backend.\n   *\n   * Returns the flowNodeRuntimeInformation from the elements which must get colored.\n   */\n  private getElementsToColor(\n    associations: Array<IFlowNodeAssociation>,\n    flowNodeRuntimeInformation: Array<DataModels.Kpi.FlowNodeRuntimeInformation>,\n  ): Array<DataModels.Kpi.FlowNodeRuntimeInformation> {\n    const elementsToColor: Array<DataModels.Kpi.FlowNodeRuntimeInformation> = flowNodeRuntimeInformation.filter(\n      (information: DataModels.Kpi.FlowNodeRuntimeInformation) => {\n        const associationWithSameId: IFlowNodeAssociation = associations.find((association: IFlowNodeAssociation) => {\n          return association.sourceId === information.flowNodeId;\n        });\n\n        return associationWithSameId;\n      },\n    );\n\n    return elementsToColor;\n  }\n\n  /**\n   *\n   * @param elementRegistry IElementRegistry;\n   * @param elementToColor FlowNodeRuntimeInformation | ITokenPositionAndCount | ActiveToken;\n   *\n   * Returns the IShape of an element.\n   * The IShape is needed by the IModeling module from bpmn-js to color an element.\n   */\n  private getShape(\n    elementRegistry: IElementRegistry,\n    elementToColor: DataModels.Kpi.FlowNodeRuntimeInformation | ITokenPositionAndCount | DataModels.Kpi.ActiveToken,\n  ): IShape {\n    const elementShape: IShape = elementRegistry.get(elementToColor.flowNodeId);\n\n    return elementShape;\n  }\n\n  private getParticipantShape(elementRegistry: IElementRegistry): IShape {\n    const allElements: Array<IShape> = elementRegistry.getAll();\n\n    const participantShape: IShape = allElements.find((element: IShape) => {\n      const elementIsParticipant: boolean = element.type === 'bpmn:Participant';\n\n      return elementIsParticipant;\n    });\n\n    return participantShape;\n  }\n\n  private getElementsForOverlays(elementRegistry: IElementRegistry): Array<IShape> {\n    const allElements: Array<IShape> = elementRegistry.getAll();\n    const filteredElements: Array<IShape> = allElements.filter((element: IShape) => {\n      const condition: boolean =\n        element.type !== 'bpmn:Association' &&\n        element.type !== 'bpmn:SequenceFlow' &&\n        element.type !== 'bpmn:TextAnnotation' &&\n        element.type !== 'bpmn:Participant' &&\n        element.type !== 'bpmn:Collaboration' &&\n        element.type !== 'bpmn:Lane' &&\n        element.type !== 'label';\n\n      return condition;\n    });\n\n    return filteredElements;\n  }\n\n  private async getXmlFromModeler(modeler: IBpmnModeler): Promise<string> {\n    const saveXmlPromise: Promise<string> = new Promise((resolve: Function, reject: Function): void => {\n      modeler.saveXML({format: true}, async (saveXmlError: Error, xml: string) => {\n        if (saveXmlError) {\n          reject(saveXmlError);\n\n          return;\n        }\n\n        resolve(xml);\n      });\n    });\n\n    return saveXmlPromise;\n  }\n\n  private getMedianRunTimeForAssociation(association: IConnection): number {\n    const annotationText: string = association.target.businessObject.text;\n    const lengthOfRTStamp: number = 4;\n    const startRunTimeText: number = annotationText.search('RT:') + lengthOfRTStamp;\n    const lengthOfRunTimeText: number = 12;\n    const runTimeTimeStamp: string = annotationText.substr(startRunTimeText, lengthOfRunTimeText);\n    const date: Date = new Date(`1970-01-01T${runTimeTimeStamp}Z`);\n    const medianRunTimeInMs: number = date.getTime();\n\n    return medianRunTimeInMs;\n  }\n\n  private async getActiveTokenListArray(\n    elementsForOverlays: Array<IShape>,\n    processModelId: string,\n  ): Promise<Array<Array<DataModels.Kpi.ActiveToken>>> {\n    const promisesForElements: Array<Promise<Array<DataModels.Kpi.ActiveToken>>> = elementsForOverlays.map(\n      async (element: IShape) => {\n        const elementsActiveTokens: Array<DataModels.Kpi.ActiveToken> = await this.getActiveTokensForFlowNode(\n          element.id,\n        );\n\n        const elementActiveTokensForProcessModel: Array<DataModels.Kpi.ActiveToken> = elementsActiveTokens.filter(\n          (token: DataModels.Kpi.ActiveToken) => {\n            const tokenIsInProcessModel: boolean = token.processModelId === processModelId;\n\n            return tokenIsInProcessModel;\n          },\n        );\n\n        return elementActiveTokensForProcessModel;\n      },\n    );\n\n    const activeTokenListArrayForAllElements: Array<Array<DataModels.Kpi.ActiveToken>> = await Promise.all(\n      promisesForElements,\n    );\n\n    const filteredActiveTokenListArray: Array<\n      Array<DataModels.Kpi.ActiveToken>\n    > = activeTokenListArrayForAllElements.filter((element: Array<DataModels.Kpi.ActiveToken>) => {\n      const arrayIsEmpty: boolean = element.length !== 0;\n\n      return arrayIsEmpty;\n    });\n\n    return filteredActiveTokenListArray;\n  }\n\n  private addShapeTypeToActiveToken(\n    activeTokenListArray: Array<Array<DataModels.Kpi.ActiveToken>>,\n    elementsForOverlays: Array<IShape>,\n  ): void {\n    activeTokenListArray.forEach((activeTokenArray: Array<DataModels.Kpi.ActiveToken & {type: string}>) => {\n      const elementOfActiveToken: IShape = elementsForOverlays.find((element: IShape) => {\n        const isCorrectElement: boolean = element.id === activeTokenArray[0].flowNodeId;\n\n        return isCorrectElement;\n      });\n\n      // eslint-disable-next-line no-param-reassign\n      activeTokenArray[0].type = elementOfActiveToken.type;\n    });\n  }\n\n  private getElementsWithoutToken(\n    elementsForOverlays: Array<IShape>,\n    activeTokenListArray: Array<Array<DataModels.Kpi.ActiveToken>>,\n  ): Array<IShape> {\n    const elementsWithoutToken: Array<IShape> = elementsForOverlays.filter((element: IShape) => {\n      const activeTokenForElement: Array<DataModels.Kpi.ActiveToken> = activeTokenListArray.find(\n        (activeTokenArray: Array<DataModels.Kpi.ActiveToken>) => {\n          return activeTokenArray[0].flowNodeId === element.id;\n        },\n      );\n\n      const noActiveTokenForElement: boolean = activeTokenForElement === undefined;\n\n      return noActiveTokenForElement;\n    });\n\n    return elementsWithoutToken;\n  }\n\n  private elementIsEvent(type: string): boolean {\n    const elementTypeIsEvent: boolean =\n      type === 'bpmn:StartEvent' ||\n      type === 'bpmn:EndEvent' ||\n      type === 'bpmn:IntermediateThrowEvent' ||\n      type === 'bpmn:IntermediateCatchEvent' ||\n      type === 'bpmn:BoundaryEvent';\n\n    return elementTypeIsEvent;\n  }\n\n  private elementIsGateway(type: string): boolean {\n    const elementTypeIsGateway: boolean =\n      type === 'bpmn:ExclusiveGateway' ||\n      type === 'bpmn:ParallelGateway' ||\n      type === 'bpmn:InclusiveGateway' ||\n      type === 'bpmn:ComplexGateway' ||\n      type === 'bpmn:EventBasedGateway';\n\n    return elementTypeIsGateway;\n  }\n\n  private elementIsTask(type: string): boolean {\n    const elementTypeIsTask: boolean =\n      type === 'bpmn:UserTask' ||\n      type === 'bpmn:ScriptTask' ||\n      type === 'bpmn:ServiceTask' ||\n      type === 'bpmn:Task' ||\n      type === 'bpmn:SendTask' ||\n      type === 'bpmn:ReceiveTask' ||\n      type === 'bpmn:ManualTask' ||\n      type === 'bpmn:BusinessRuleTask' ||\n      type === 'bpmn:CallActivity' ||\n      type === 'bpmn:SubProcess';\n\n    return elementTypeIsTask;\n  }\n}\n","import {EventAggregator, Subscription} from 'aurelia-event-aggregator';\nimport {bindable, inject} from 'aurelia-framework';\nimport {activationStrategy} from 'aurelia-router';\n\nimport {IDiagram} from '@process-engine/solutionexplorer.contracts';\n\nimport {ISolutionEntry, ISolutionService, InspectPanelTab, NotificationType} from '../../contracts/index';\nimport environment from '../../environment';\nimport {NotificationService} from '../../services/notification-service/notification.service';\nimport {Dashboard} from './dashboard/dashboard';\n\ninterface IInspectRouteParameters {\n  view?: string;\n  diagramName?: string;\n  solutionUri?: string;\n  processInstanceToSelect?: string;\n  flowNodeToSelect?: string;\n  inspectPanelTabToShow?: InspectPanelTab;\n}\n\n@inject(EventAggregator, 'SolutionService', 'NotificationService')\nexport class Inspect {\n  @bindable() public showDashboard: boolean = true;\n  @bindable() public activeDiagram: IDiagram;\n  @bindable() public activeSolutionEntry: ISolutionEntry;\n\n  public showHeatmap: boolean = false;\n  public showInspectCorrelation: boolean = false;\n  public dashboard: Dashboard;\n  public showTokenViewer: boolean = false;\n  public tokenViewerButtonDisabled: boolean = false;\n  public processInstanceToSelect: string;\n  public flowNodeToSelect: string;\n  public inspectPanelTabToShow: InspectPanelTab;\n\n  private eventAggregator: EventAggregator;\n  private subscriptions: Array<Subscription>;\n  private solutionService: ISolutionService;\n  private notificationService: NotificationService;\n  private ipcRenderer: any;\n\n  constructor(\n    eventAggregator: EventAggregator,\n    solutionService: ISolutionService,\n    notificationService: NotificationService,\n  ) {\n    this.eventAggregator = eventAggregator;\n    this.solutionService = solutionService;\n    this.notificationService = notificationService;\n  }\n\n  public determineActivationStrategy(): string {\n    return activationStrategy.invokeLifecycle;\n  }\n\n  public canActivate(routeParameters: IInspectRouteParameters): boolean {\n    const solutionUri: string = routeParameters.solutionUri\n      ? routeParameters.solutionUri\n      : window.localStorage.getItem('InternalProcessEngineRoute');\n\n    if (solutionUri === 'about:open-diagrams') {\n      this.activeSolutionEntry = this.solutionService.getSolutionEntryForUri(\n        window.localStorage.getItem('InternalProcessEngineRoute'),\n      );\n\n      return true;\n    }\n\n    this.activeSolutionEntry = this.solutionService.getSolutionEntryForUri(solutionUri);\n\n    const noSolutionEntry: boolean = this.activeSolutionEntry === undefined;\n    if (noSolutionEntry) {\n      this.notificationService.showNotification(NotificationType.INFO, 'Please open a solution first.');\n\n      return false;\n    }\n\n    return true;\n  }\n\n  public async activate(routeParameters: IInspectRouteParameters): Promise<void> {\n    const solutionUri: string = routeParameters.solutionUri;\n    const diagramName: string = routeParameters.diagramName;\n\n    await this.updateInspectView(diagramName, solutionUri);\n\n    const routeViewIsDashboard: boolean = routeParameters.view === 'dashboard';\n    const routeViewIsHeatmap: boolean = routeParameters.view === 'heatmap';\n    const routeViewIsInspectCorrelation: boolean = routeParameters.view === 'inspect-correlation';\n\n    this.processInstanceToSelect = routeParameters.processInstanceToSelect;\n    this.flowNodeToSelect = routeParameters.flowNodeToSelect;\n    this.inspectPanelTabToShow = routeParameters.inspectPanelTabToShow;\n\n    if (routeViewIsDashboard) {\n      this.showHeatmap = false;\n      this.showDashboard = true;\n      this.showInspectCorrelation = false;\n\n      this.eventAggregator.publish(environment.events.navBar.toggleDashboardView);\n    } else if (routeViewIsHeatmap) {\n      this.eventAggregator.publish(environment.events.navBar.toggleHeatmapView);\n\n      this.showDashboard = false;\n      this.showHeatmap = true;\n      this.showInspectCorrelation = false;\n    } else if (routeViewIsInspectCorrelation) {\n      this.eventAggregator.publish(environment.events.navBar.toggleInspectCorrelationView);\n\n      this.showDashboard = false;\n      this.showHeatmap = false;\n      this.showInspectCorrelation = true;\n    }\n\n    const isRunningInElectron: boolean = Boolean((window as any).nodeRequire);\n\n    if (isRunningInElectron) {\n      this.ipcRenderer = (window as any).nodeRequire('electron').ipcRenderer;\n      this.ipcRenderer.on('menubar__start_close_diagram', this.closeBpmnStudio);\n    }\n  }\n\n  public deactivate(): void {\n    const isRunningInElectron: boolean = Boolean((window as any).nodeRequire);\n\n    if (isRunningInElectron) {\n      this.ipcRenderer.removeListener('menubar__start_close_diagram', this.closeBpmnStudio);\n    }\n  }\n\n  public attached(): void {\n    this.subscriptions = [\n      this.eventAggregator.subscribe(\n        environment.events.inspect.shouldDisableTokenViewerButton,\n        (tokenViewerButtonDisabled: boolean) => {\n          this.tokenViewerButtonDisabled = tokenViewerButtonDisabled;\n        },\n      ),\n    ];\n\n    const previousTokenViewerState: boolean = JSON.parse(\n      window.localStorage.getItem('tokenViewerInspectCollapseState'),\n    );\n    this.showTokenViewer = previousTokenViewerState || false;\n  }\n\n  public detached(): void {\n    this.eventAggregator.publish(environment.events.navBar.inspectNavigateToDashboard);\n\n    for (const subscription of this.subscriptions) {\n      subscription.dispose();\n    }\n  }\n\n  public toggleShowTokenViewer(): void {\n    if (this.tokenViewerButtonDisabled) {\n      return;\n    }\n\n    this.showTokenViewer = !this.showTokenViewer;\n\n    this.eventAggregator.publish(environment.events.inspectCorrelation.showTokenViewer, this.showTokenViewer);\n    window.localStorage.setItem('tokenViewerInspectCollapseState', JSON.stringify(this.showTokenViewer));\n  }\n\n  private async updateInspectView(diagramName: string, solutionUri?: string): Promise<void> {\n    const solutionUriIsSet: boolean = solutionUri !== undefined;\n\n    const solutionUriToUse: string = solutionUriIsSet\n      ? solutionUri\n      : window.localStorage.getItem('InternalProcessEngineRoute');\n\n    this.activeSolutionEntry = this.solutionService.getSolutionEntryForUri(solutionUriToUse);\n    await this.activeSolutionEntry.service.openSolution(\n      this.activeSolutionEntry.uri,\n      this.activeSolutionEntry.identity,\n    );\n\n    const solutionIsRemote: boolean = solutionUriToUse.startsWith('http');\n    if (solutionIsRemote) {\n      this.eventAggregator.publish(\n        environment.events.configPanel.solutionEntryChanged,\n        this.solutionService.getSolutionEntryForUri(solutionUriToUse),\n      );\n    }\n\n    const diagramIsSet: boolean = diagramName !== undefined;\n    if (diagramIsSet) {\n      const activeSolutionIsOpenSolution: boolean = solutionUriToUse === 'about:open-diagrams';\n      if (activeSolutionIsOpenSolution) {\n        const persistedDiagrams: Array<IDiagram> = this.solutionService.getOpenDiagrams();\n\n        this.activeDiagram = persistedDiagrams.find((diagram: IDiagram) => {\n          return diagram.name === diagramName;\n        });\n      } else {\n        try {\n          this.activeDiagram = await this.activeSolutionEntry.service.loadDiagram(diagramName);\n        } catch {\n          // If loading the diagram failed, do nothing\n        }\n      }\n    }\n  }\n\n  private closeBpmnStudio: Function = (): void => {\n    const activeDiagramNotSet: boolean = this.activeDiagram === undefined;\n    if (activeDiagramNotSet) {\n      this.ipcRenderer.send('close_bpmn-studio');\n    }\n  };\n}\n","import {bindable, inject} from 'aurelia-framework';\n\nimport {IShape} from '@process-engine/bpmn-elements_contracts';\nimport * as bundle from '@process-engine/bpmn-js-custom-bundle';\nimport {DataModels} from '@process-engine/management_api_contracts';\nimport {IDiagram} from '@process-engine/solutionexplorer.contracts';\n\nimport {EventAggregator, Subscription} from 'aurelia-event-aggregator';\nimport {\n  IBpmnModeler,\n  ICanvas,\n  IDiagramExportService,\n  IElementRegistry,\n  IEvent,\n  ISolutionEntry,\n  NotificationType,\n} from '../../../../../contracts/index';\nimport environment from '../../../../../environment';\nimport {NotificationService} from '../../../../../services/notification-service/notification.service';\nimport {DiagramExportService} from '../../../../design/bpmn-io/services/index';\nimport {ILiveExecutionTrackerService} from '../../../../live-execution-tracker/contracts';\n\n@inject('NotificationService', EventAggregator, 'LiveExecutionTrackerService')\nexport class DiagramViewer {\n  @bindable public processInstance: DataModels.Correlations.CorrelationProcessInstance;\n  @bindable public xml: string;\n  @bindable public activeDiagram: IDiagram;\n  @bindable public selectedFlowNode: IShape;\n  @bindable public activeSolutionEntry: ISolutionEntry;\n  public noCorrelationsFound: boolean = true;\n  public xmlIsNotSelected: boolean = true;\n  public canvasModel: HTMLElement;\n\n  private notificationService: NotificationService;\n  private elementRegistry: IElementRegistry;\n  private diagramViewer: IBpmnModeler;\n  private xmlWithColorizedProgress: string;\n  private uncoloredSVG: string;\n  private subscriptions: Array<Subscription>;\n  private diagramExportService: IDiagramExportService;\n  private eventAggregator: EventAggregator;\n  private flowNodeToSetAfterProcessInstanceIsSet: string;\n  private liveExecutionTrackerService: ILiveExecutionTrackerService;\n\n  constructor(\n    notificationService: NotificationService,\n    eventAggregator: EventAggregator,\n    liveExecutionTrackerService: ILiveExecutionTrackerService,\n  ) {\n    this.notificationService = notificationService;\n    this.diagramExportService = new DiagramExportService();\n    this.eventAggregator = eventAggregator;\n    this.liveExecutionTrackerService = liveExecutionTrackerService;\n  }\n\n  public attached(): void {\n    // eslint-disable-next-line 6river/new-cap\n    this.diagramViewer = new bundle.viewer({\n      additionalModules: [bundle.ZoomScrollModule, bundle.MoveCanvasModule],\n    });\n\n    this.elementRegistry = this.diagramViewer.get('elementRegistry');\n\n    this.diagramViewer.attachTo(this.canvasModel);\n\n    this.diagramViewer.on('element.click', async (event: IEvent) => {\n      this.selectFlowNode(event.element.id);\n    });\n\n    this.subscriptions = [\n      this.eventAggregator.subscribe(`${environment.events.inspect.exportDiagramAs}:BPMN`, async () => {\n        try {\n          const exportName: string = `${this.activeDiagram.name}.bpmn`;\n          await this.diagramExportService\n            .loadXML(this.xmlWithColorizedProgress)\n            .asBpmn()\n            .export(exportName);\n        } catch (error) {\n          this.notificationService.showNotification(\n            NotificationType.ERROR,\n            'An error occurred while preparing the diagram for exporting',\n          );\n        }\n      }),\n\n      this.eventAggregator.subscribe(`${environment.events.inspect.exportDiagramAs}:SVG`, async () => {\n        try {\n          const exportName: string = `${this.activeDiagram.name}.svg`;\n          await this.diagramExportService\n            .loadSVG(this.uncoloredSVG)\n            .asSVG()\n            .export(exportName);\n        } catch (error) {\n          this.notificationService.showNotification(\n            NotificationType.ERROR,\n            'An error occurred while preparing the diagram for exporting',\n          );\n        }\n      }),\n\n      this.eventAggregator.subscribe(`${environment.events.inspect.exportDiagramAs}:PNG`, async () => {\n        try {\n          const exportName: string = `${this.activeDiagram.name}.png`;\n          await this.diagramExportService\n            .loadSVG(this.uncoloredSVG)\n            .asPNG()\n            .export(exportName);\n        } catch (error) {\n          this.notificationService.showNotification(\n            NotificationType.ERROR,\n            'An error occurred while preparing the diagram for exporting',\n          );\n        }\n      }),\n\n      this.eventAggregator.subscribe(`${environment.events.inspect.exportDiagramAs}:JPEG`, async () => {\n        try {\n          const exportName: string = `${this.activeDiagram.name}.jpeg`;\n          await this.diagramExportService\n            .loadSVG(this.uncoloredSVG)\n            .asJPEG()\n            .export(exportName);\n        } catch (error) {\n          this.notificationService.showNotification(\n            NotificationType.ERROR,\n            'An error occurred while preparing the diagram for exporting',\n          );\n        }\n      }),\n\n      this.eventAggregator.subscribe(\n        environment.events.inspectCorrelation.noCorrelationsFound,\n        (noCorrelationsFound: boolean) => {\n          this.noCorrelationsFound = noCorrelationsFound;\n        },\n      ),\n    ];\n\n    document.addEventListener('keydown', this.handleArrowKeyInput);\n  }\n\n  public selectFlowNode(flowNodeId: string): void {\n    if (this.processInstance === undefined) {\n      this.flowNodeToSetAfterProcessInstanceIsSet = flowNodeId;\n\n      return;\n    }\n\n    const element: IShape = this.elementRegistry.get(flowNodeId);\n\n    this.selectedFlowNode = element;\n    this.diagramViewer.get('selection').select(element);\n  }\n\n  public detached(): void {\n    document.removeEventListener('keydown', this.handleArrowKeyInput);\n    const bjsContainer: Element = this.canvasModel.getElementsByClassName('bjs-container')[0];\n\n    const bjsContainerIsExisting: boolean =\n      this.canvasModel !== undefined &&\n      this.canvasModel !== null &&\n      this.canvasModel.childElementCount > 1 &&\n      bjsContainer !== undefined &&\n      bjsContainer !== null;\n\n    if (bjsContainerIsExisting) {\n      this.canvasModel.removeChild(bjsContainer);\n    }\n\n    const diagramViewerIsExisting: boolean = this.diagramViewer !== undefined;\n\n    if (diagramViewerIsExisting) {\n      this.diagramViewer.detach();\n      this.diagramViewer.destroy();\n\n      this.diagramViewer = undefined;\n      this.xml = undefined;\n      this.xmlIsNotSelected = true;\n    }\n\n    this.subscriptions.forEach((subscription: Subscription) => subscription.dispose());\n  }\n\n  public async processInstanceChanged(): Promise<void> {\n    const noProcessInstanceSelected: boolean = this.processInstance === undefined;\n    if (noProcessInstanceSelected) {\n      return;\n    }\n\n    this.xml = this.processInstance.xml;\n\n    const uncoloredXml: string = await this.liveExecutionTrackerService.clearDiagramColors(this.xml);\n\n    this.xmlWithColorizedProgress = await this.liveExecutionTrackerService.getColorizedDiagram(\n      this.activeSolutionEntry.identity,\n      uncoloredXml,\n      this.processInstance.processInstanceId,\n      true,\n    );\n\n    await this.importXml(this.xmlWithColorizedProgress);\n    this.uncoloredSVG = await this.getSVG();\n\n    const elementSelected: boolean = this.selectedFlowNode !== undefined;\n    if (elementSelected) {\n      const previouslySelectedElementFound: boolean = this.elementRegistry.getAll().some((element: IShape) => {\n        const isSelectedElement: boolean = element.id === this.selectedFlowNode.id;\n\n        return isSelectedElement;\n      });\n\n      if (previouslySelectedElementFound) {\n        this.selectFlowNode(this.selectedFlowNode.id);\n      } else {\n        this.selectStartEvent();\n      }\n    } else {\n      this.selectStartEvent();\n    }\n\n    this.fitDiagramToViewport();\n\n    const flowNodeNeedsToBeSelected: boolean = this.flowNodeToSetAfterProcessInstanceIsSet !== undefined;\n    if (flowNodeNeedsToBeSelected) {\n      this.selectFlowNode(this.flowNodeToSetAfterProcessInstanceIsSet);\n\n      this.flowNodeToSetAfterProcessInstanceIsSet = undefined;\n    }\n  }\n\n  public activeDiagramChanged(): void {\n    const diagramViewerIsNotSet: boolean = this.diagramViewer === undefined;\n\n    if (diagramViewerIsNotSet) {\n      return;\n    }\n\n    this.diagramViewer.clear();\n    this.xmlIsNotSelected = true;\n    this.noCorrelationsFound = false;\n    this.xml = undefined;\n\n    this.fitDiagramToViewport();\n  }\n\n  public xmlChanged(): void {\n    this.xmlIsNotSelected = this.xml === undefined;\n  }\n\n  private selectStartEvent(): void {\n    const startEvent: IShape = this.elementRegistry.filter((element: IShape): boolean => {\n      return element.type === 'bpmn:StartEvent';\n    })[0];\n\n    this.selectFlowNode(startEvent.id);\n  }\n\n  private fitDiagramToViewport(): void {\n    const canvas: ICanvas = this.diagramViewer.get('canvas');\n    canvas.zoom('fit-viewport', 'auto');\n  }\n\n  private async importXml(xml: string): Promise<void> {\n    const xmlIsNotLoaded: boolean = xml === undefined || xml === null;\n\n    if (xmlIsNotLoaded) {\n      const notificationMessage: string =\n        'The xml could not be loaded. Please try to reopen the Inspect Correlation View.';\n      this.notificationService.showNotification(NotificationType.ERROR, notificationMessage);\n\n      return undefined;\n    }\n\n    const xmlImportPromise: Promise<void> = new Promise((resolve: Function, reject: Function): void => {\n      this.diagramViewer.importXML(xml, (importXmlError: Error) => {\n        if (importXmlError) {\n          reject(importXmlError);\n\n          return;\n        }\n\n        resolve();\n      });\n    });\n\n    return xmlImportPromise;\n  }\n\n  private async getSVG(): Promise<string> {\n    const returnPromise: Promise<string> = new Promise((resolve: Function, reject: Function): void => {\n      this.diagramViewer.saveSVG({format: true}, (error: Error, result: string) => {\n        if (error) {\n          reject(error);\n        }\n\n        resolve(result);\n      });\n    });\n\n    return returnPromise;\n  }\n\n  private handleArrowKeyInput: EventListenerOrEventListenerObject = (event: KeyboardEvent): void => {\n    const noElementSelected: boolean = this.selectedFlowNode === undefined;\n    if (noElementSelected) {\n      return;\n    }\n\n    const leftKeyPressed: boolean = event.code === 'ArrowLeft';\n    const rightKeyPressed: boolean = event.code === 'ArrowRight';\n    const topKeyPressed: boolean = event.code === 'ArrowUp';\n    const bottomKeyPressed: boolean = event.code === 'ArrowDown';\n\n    let elementToSelect: IShape;\n    if (leftKeyPressed) {\n      elementToSelect = this.getClosestElementOnTheLeftOfSelected();\n    } else if (rightKeyPressed) {\n      elementToSelect = this.getClosestElementOnTheRightOfSelected();\n    } else if (topKeyPressed) {\n      elementToSelect = this.getClosestElementAboveSelected();\n    } else if (bottomKeyPressed) {\n      elementToSelect = this.getClosestElementUnderSelected();\n    }\n\n    const elementToSelectNotFound: boolean = elementToSelect === undefined;\n    if (elementToSelectNotFound) {\n      return;\n    }\n\n    this.selectFlowNode(elementToSelect.id);\n  };\n\n  private getClosestElementOnTheLeftOfSelected(): IShape {\n    const elementsOnTheLeft: Array<IShape> = this.getElementsOnTheLeftOfTheSelected();\n\n    const noElementsAreOnTheLeftOfTheSelected: boolean = elementsOnTheLeft.length === 0;\n    if (noElementsAreOnTheLeftOfTheSelected) {\n      return undefined;\n    }\n\n    const elementsOnTheLeftOverlappingOnYAxis: Array<IShape> = this.filterElementsThatOverlapWithSelectedOnYAxis(\n      elementsOnTheLeft,\n    );\n\n    const elementsOnTheLeftOverlappingOnYAxisIsNotEmpty: boolean = elementsOnTheLeftOverlappingOnYAxis.length > 0;\n    const elementsToWorkWith: Array<IShape> = elementsOnTheLeftOverlappingOnYAxisIsNotEmpty\n      ? elementsOnTheLeftOverlappingOnYAxis\n      : elementsOnTheLeft;\n\n    return this.getClosestElementByX(elementsToWorkWith);\n  }\n\n  private getClosestElementOnTheRightOfSelected(): IShape {\n    const elementsOnTheRight: Array<IShape> = this.getElementsOnTheRightOfTheSelected();\n\n    const noElementsAreOnTheRightOfTheSelected: boolean = elementsOnTheRight.length === 0;\n    if (noElementsAreOnTheRightOfTheSelected) {\n      return undefined;\n    }\n\n    const elementsOnTheRightOverlappingOnYAxis: Array<IShape> = this.filterElementsThatOverlapWithSelectedOnYAxis(\n      elementsOnTheRight,\n    );\n\n    const elementsOnTheRightOverlappingOnYAxisIsNotEmpty: boolean = elementsOnTheRightOverlappingOnYAxis.length > 0;\n    const elementsToWorkWith: Array<IShape> = elementsOnTheRightOverlappingOnYAxisIsNotEmpty\n      ? elementsOnTheRightOverlappingOnYAxis\n      : elementsOnTheRight;\n\n    return this.getClosestElementByX(elementsToWorkWith);\n  }\n\n  private getClosestElementAboveSelected(): IShape {\n    const elementsAboveSelected: Array<IShape> = this.getElementsAboveTheSelected();\n\n    const noElementsAreAboveTheSelected: boolean = elementsAboveSelected.length === 0;\n    if (noElementsAreAboveTheSelected) {\n      return undefined;\n    }\n\n    const elementsAboveSelectedOverlappingOnXAxis: Array<IShape> = this.filterElementsThatOverlapWithSelectedOnXAxis(\n      elementsAboveSelected,\n    );\n\n    const elementsAboveSelectedOverlappingOnXAxisIsNotEmpty: boolean =\n      elementsAboveSelectedOverlappingOnXAxis.length > 0;\n    const elementsToWorkWith: Array<IShape> = elementsAboveSelectedOverlappingOnXAxisIsNotEmpty\n      ? elementsAboveSelectedOverlappingOnXAxis\n      : elementsAboveSelected;\n\n    return this.getClosestElementByY(elementsToWorkWith);\n  }\n\n  private getClosestElementUnderSelected(): IShape {\n    const elementsUnderSelected: Array<IShape> = this.getElementsUnderTheSelected();\n\n    const noElementsAreUnderTheSelected: boolean = elementsUnderSelected.length === 0;\n    if (noElementsAreUnderTheSelected) {\n      return undefined;\n    }\n\n    const elementsUnderSelectedOverlappingOnXAxis: Array<IShape> = this.filterElementsThatOverlapWithSelectedOnXAxis(\n      elementsUnderSelected,\n    );\n\n    const elementsUnderSelectedOverlappingOnXAxisIsNotEmpty: boolean =\n      elementsUnderSelectedOverlappingOnXAxis.length > 0;\n    const elementsToWorkWith: Array<IShape> = elementsUnderSelectedOverlappingOnXAxisIsNotEmpty\n      ? elementsUnderSelectedOverlappingOnXAxis\n      : elementsUnderSelected;\n\n    return this.getClosestElementByY(elementsToWorkWith);\n  }\n\n  private getClosestElementByX(elements: Array<IShape>): IShape {\n    return elements.reduce(\n      (previousElement: IShape, currentElement: IShape): IShape => {\n        const noPreviousElementExists: boolean = previousElement === undefined;\n        if (noPreviousElementExists) {\n          return currentElement;\n        }\n\n        const distancePreviousElement: number = Math.abs(this.selectedFlowNode.x - previousElement.x);\n        const distanceCurrentElement: number = Math.abs(this.selectedFlowNode.x - currentElement.x);\n\n        const currentElementIsCloser: boolean = distanceCurrentElement < distancePreviousElement;\n        return currentElementIsCloser ? currentElement : previousElement;\n      },\n    );\n  }\n\n  private getClosestElementByY(elements: Array<IShape>): IShape {\n    return elements.reduce(\n      (previousElement: IShape, currentElement: IShape): IShape => {\n        const noPreviousElementExists: boolean = previousElement === undefined;\n        if (noPreviousElementExists) {\n          return currentElement;\n        }\n\n        const distancePreviousElement: number = Math.abs(this.selectedFlowNode.y - previousElement.y);\n        const distanceCurrentElement: number = Math.abs(this.selectedFlowNode.y - currentElement.y);\n\n        const currentElementIsCloser: boolean = distanceCurrentElement < distancePreviousElement;\n        return currentElementIsCloser ? currentElement : previousElement;\n      },\n    );\n  }\n\n  private filterElementsThatOverlapWithSelectedOnYAxis(elementsToFilter: Array<IShape>): Array<IShape> {\n    return elementsToFilter.filter((element: IShape): boolean => {\n      const elementStartsBetweenSelectedElement: boolean =\n        element.y >= this.selectedFlowNode.y && element.y <= this.selectedFlowNode.y + this.selectedFlowNode.height;\n\n      const elementEndsBetweenSelectedElement: boolean =\n        element.y + element.height >= this.selectedFlowNode.y &&\n        element.y + element.height <= this.selectedFlowNode.y + this.selectedFlowNode.height;\n\n      const elementStartsBeforeSelectedAndEndsAfterSelected: boolean =\n        this.selectedFlowNode.y > element.y &&\n        this.selectedFlowNode.y + this.selectedFlowNode.height < element.y + element.height;\n\n      return (\n        elementStartsBetweenSelectedElement ||\n        elementEndsBetweenSelectedElement ||\n        elementStartsBeforeSelectedAndEndsAfterSelected\n      );\n    });\n  }\n\n  private filterElementsThatOverlapWithSelectedOnXAxis(elementsToFilter: Array<IShape>): Array<IShape> {\n    return elementsToFilter.filter((element: IShape): boolean => {\n      const elementStartsBetweenSelectedElement: boolean =\n        element.x >= this.selectedFlowNode.x && element.x <= this.selectedFlowNode.x + this.selectedFlowNode.width;\n\n      const elementEndsBetweenSelectedElement: boolean =\n        element.x + element.width >= this.selectedFlowNode.x &&\n        element.x + element.width <= this.selectedFlowNode.x + this.selectedFlowNode.width;\n\n      const elementStartsBeforeSelectedAndEndsAfterSelected: boolean =\n        this.selectedFlowNode.x > element.x &&\n        this.selectedFlowNode.x + this.selectedFlowNode.width < element.x + element.width;\n\n      return (\n        elementStartsBetweenSelectedElement ||\n        elementEndsBetweenSelectedElement ||\n        elementStartsBeforeSelectedAndEndsAfterSelected\n      );\n    });\n  }\n\n  private getElementsAboveTheSelected(): Array<IShape> {\n    const elementsThatCanHaveAToken: Array<IShape> = this.getElementsThatCanHaveAToken();\n\n    return elementsThatCanHaveAToken.filter((element: IShape): boolean => {\n      const elementIsAboveTheSelectedFlowNode: boolean = this.selectedFlowNode.y > element.y + element.height;\n\n      return elementIsAboveTheSelectedFlowNode;\n    });\n  }\n\n  private getElementsUnderTheSelected(): Array<IShape> {\n    const elementsThatCanHaveAToken: Array<IShape> = this.getElementsThatCanHaveAToken();\n\n    return elementsThatCanHaveAToken.filter((element: IShape): boolean => {\n      const elementIsUnderTheSelectedFlowNode: boolean =\n        this.selectedFlowNode.y + this.selectedFlowNode.height < element.y;\n\n      return elementIsUnderTheSelectedFlowNode;\n    });\n  }\n\n  private getElementsOnTheRightOfTheSelected(): Array<IShape> {\n    const elementsThatCanHaveAToken: Array<IShape> = this.getElementsThatCanHaveAToken();\n\n    return elementsThatCanHaveAToken.filter((element: IShape): boolean => {\n      const elementIsOnTheRightOfTheSelectedFlowNode: boolean = this.selectedFlowNode.x < element.x;\n\n      return elementIsOnTheRightOfTheSelectedFlowNode;\n    });\n  }\n\n  private getElementsOnTheLeftOfTheSelected(): Array<IShape> {\n    const elementsThatCanHaveAToken: Array<IShape> = this.getElementsThatCanHaveAToken();\n\n    return elementsThatCanHaveAToken.filter((element: IShape): boolean => {\n      const elementIsOnTheLeftOfTheSelectedFlowNode: boolean = this.selectedFlowNode.x > element.x;\n\n      return elementIsOnTheLeftOfTheSelectedFlowNode;\n    });\n  }\n\n  private getElementsThatCanHaveAToken(): Array<IShape> {\n    return this.elementRegistry.filter((element: IShape) => {\n      const elementCanHaveAToken: boolean =\n        element.type !== 'bpmn:Participant' &&\n        element.type !== 'bpmn:Collaboration' &&\n        element.type !== 'bpmn:Lane' &&\n        element.type !== 'bpmn:LaneSet' &&\n        element.type !== 'label' &&\n        element.type !== 'bpmn:TextAnnotation' &&\n        element.type !== 'bpmn:SequenceFlow';\n\n      return elementCanHaveAToken;\n    });\n  }\n}\n",".diagram-viewer {\n  position: relative;\n  height: calc(50% - 14px);\n  margin-bottom: 21px;\n  overflow: hidden;\n  background: #f7f7f7;\n  border: 1px solid #ccc;\n}\n\n.diagram-viewer__body {\n  position: relative;\n  height: 100%;\n}\n\n.diagram-viewer__empty-message {\n  position: absolute;\n  left: 50%;\n  top: 60%;\n  white-space: nowrap;\n  transform: translate(-50%, -50%);\n  user-select: none;\n}\n\n.diagram-viewer__loading-spinner {\n  position: absolute;\n  top: 25%;\n  left: 50%;\n  display: inline-block;\n  transform: translate(-50%, -50%);\n  user-select: none;\n  white-space: nowrap;\n}\n",null,"import {EventAggregator} from 'aurelia-event-aggregator';\nimport {bindable, inject} from 'aurelia-framework';\n\nimport {DataModels} from '@process-engine/management_api_contracts';\n\nimport {IDiagram} from '@process-engine/solutionexplorer.contracts';\nimport {\n  CorrelationListSortProperty,\n  ICorrelationSortSettings,\n  ICorrelationTableEntry,\n} from '../../../../../../../contracts/index';\nimport environment from '../../../../../../../environment';\nimport {getBeautifiedDate} from '../../../../../../../services/date-service/date.service';\nimport {IProcessInstanceWithCorrelation} from '../../../../contracts/index';\n\n@inject(EventAggregator)\nexport class CorrelationList {\n  @bindable public processInstanceToSelect: string;\n  @bindable public selectedProcessInstance: DataModels.Correlations.CorrelationProcessInstance;\n  @bindable public selectedCorrelation: DataModels.Correlations.Correlation;\n  @bindable public correlations: Array<DataModels.Correlations.Correlation>;\n  @bindable public activeDiagram: IDiagram;\n  @bindable public sortedTableData: Array<ICorrelationTableEntry>;\n  public correlationListSortProperty: typeof CorrelationListSortProperty = CorrelationListSortProperty;\n  public sortSettings: ICorrelationSortSettings = {\n    ascending: false,\n    sortProperty: undefined,\n  };\n\n  public selectedTableEntry: ICorrelationTableEntry;\n\n  private tableData: Array<ICorrelationTableEntry> = [];\n  private eventAggregator: EventAggregator;\n\n  constructor(eventAggregator: EventAggregator) {\n    this.eventAggregator = eventAggregator;\n  }\n\n  public showLogViewer(): void {\n    this.eventAggregator.publish(environment.events.inspectCorrelation.showLogViewer);\n  }\n\n  public selectCorrelation(selectedTableEntry: ICorrelationTableEntry): void {\n    this.selectedProcessInstance = this.getProcessModelForTableEntry(selectedTableEntry);\n    this.selectedCorrelation = this.getCorrelationForTableEntry(selectedTableEntry);\n    this.selectedTableEntry = selectedTableEntry;\n  }\n\n  public correlationsChanged(): void {\n    const processInstancesWithCorrelation = this.getProcessInstancesWithCorrelations(\n      this.correlations,\n      this.activeDiagram.id,\n    );\n\n    this.tableData = this.convertCorrelationsIntoTableData(processInstancesWithCorrelation);\n\n    const tableDataIsExisiting: boolean = this.tableData.length > 0;\n\n    if (tableDataIsExisiting) {\n      const latestCorelationTableEntry: ICorrelationTableEntry = this.tableData[this.tableData.length - 1];\n\n      this.selectCorrelation(latestCorelationTableEntry);\n    }\n\n    const sortSettingsExisitng: boolean = this.sortSettings.sortProperty !== undefined;\n    if (sortSettingsExisitng) {\n      this.sortSettings.ascending = !this.sortSettings.ascending;\n\n      this.sortedTableData = this.sortList(this.sortSettings.sortProperty);\n    } else {\n      this.sortedTableData = this.tableData.reverse();\n    }\n\n    const processInstanceToSelectExists: boolean = this.processInstanceToSelect !== undefined;\n    if (processInstanceToSelectExists) {\n      const entryToSelect: ICorrelationTableEntry = this.sortedTableData.find((entry: ICorrelationTableEntry) => {\n        return entry.processInstanceId === this.processInstanceToSelect;\n      });\n\n      this.selectCorrelation(entryToSelect);\n\n      this.processInstanceToSelect = undefined;\n    }\n  }\n\n  private convertCorrelationsIntoTableData(\n    processInstancesWithCorrelation: Array<IProcessInstanceWithCorrelation>,\n  ): Array<ICorrelationTableEntry> {\n    return processInstancesWithCorrelation.map((processInstanceWithCorrelation: IProcessInstanceWithCorrelation) => {\n      const correlation: DataModels.Correlations.Correlation = processInstanceWithCorrelation.correlation;\n      const processInstance: DataModels.Correlations.CorrelationProcessInstance =\n        processInstanceWithCorrelation.processInstance;\n\n      const formattedStartedDate: string = getBeautifiedDate(processInstanceWithCorrelation.correlation.createdAt);\n\n      const tableEntry: ICorrelationTableEntry = {\n        startedAt: formattedStartedDate,\n        state: correlation.state,\n        user: 'Not supported yet.',\n        correlationId: correlation.id,\n        processInstanceId: processInstance.processInstanceId,\n      };\n\n      return tableEntry;\n    });\n  }\n\n  public sortList(property: CorrelationListSortProperty): Array<ICorrelationTableEntry> {\n    const isSameSortPropertyAsBefore: boolean = this.sortSettings.sortProperty === property;\n    const ascending: boolean = isSameSortPropertyAsBefore ? !this.sortSettings.ascending : true;\n\n    this.sortSettings.ascending = ascending;\n    this.sortSettings.sortProperty = property;\n\n    const sortByDate: boolean = property === CorrelationListSortProperty.StartedAt;\n\n    const sortedTableData: Array<ICorrelationTableEntry> = sortByDate\n      ? this.sortListByStartDate()\n      : this.sortListByProperty(property);\n\n    return ascending ? sortedTableData : sortedTableData.reverse();\n  }\n\n  private sortListByProperty(property: CorrelationListSortProperty): Array<ICorrelationTableEntry> {\n    const sortedTableData: Array<ICorrelationTableEntry> = this.tableData.sort(\n      (firstEntry: ICorrelationTableEntry, secondEntry: ICorrelationTableEntry) => {\n        const firstEntryIsBigger: boolean = firstEntry[property] > secondEntry[property];\n        if (firstEntryIsBigger) {\n          return 1;\n        }\n\n        const secondEntryIsBigger: boolean = firstEntry[property] < secondEntry[property];\n        if (secondEntryIsBigger) {\n          return -1;\n        }\n\n        return 0;\n      },\n    );\n\n    return sortedTableData;\n  }\n\n  private sortListByStartDate(): Array<ICorrelationTableEntry> {\n    const sortedTableData: Array<ICorrelationTableEntry> = this.tableData.sort(\n      (firstEntry: ICorrelationTableEntry, secondEntry: ICorrelationTableEntry) => {\n        const firstCorrelation: DataModels.Correlations.Correlation = this.getCorrelationForTableEntry(firstEntry);\n        const secondCorrelation: DataModels.Correlations.Correlation = this.getCorrelationForTableEntry(secondEntry);\n\n        const firstCorrelationDate: Date = new Date(firstCorrelation.createdAt);\n        const secondCorrelationDate: Date = new Date(secondCorrelation.createdAt);\n\n        const firstEntryIsBigger: boolean = firstCorrelationDate.getTime() > secondCorrelationDate.getTime();\n        if (firstEntryIsBigger) {\n          return 1;\n        }\n\n        const secondEntryIsBigger: boolean = firstCorrelationDate.getTime() < secondCorrelationDate.getTime();\n        if (secondEntryIsBigger) {\n          return -1;\n        }\n\n        return 0;\n      },\n    );\n\n    return sortedTableData;\n  }\n\n  private getCorrelationForTableEntry(tableEntry: ICorrelationTableEntry): DataModels.Correlations.Correlation {\n    const correlationForTableEntry: DataModels.Correlations.Correlation = this.correlations.find(\n      (correlation: DataModels.Correlations.Correlation) => {\n        return correlation.id === tableEntry.correlationId;\n      },\n    );\n\n    return correlationForTableEntry;\n  }\n\n  private getProcessModelForTableEntry(\n    tableEntry: ICorrelationTableEntry,\n  ): DataModels.Correlations.CorrelationProcessInstance {\n    const correlationForTableEntry = this.getCorrelationForTableEntry(tableEntry);\n\n    const processModelForTableEntry: DataModels.Correlations.CorrelationProcessInstance = correlationForTableEntry.processInstances.find(\n      (processModel: DataModels.Correlations.CorrelationProcessInstance) => {\n        return processModel.processInstanceId === tableEntry.processInstanceId;\n      },\n    );\n\n    return processModelForTableEntry;\n  }\n\n  private getProcessInstancesWithCorrelations(\n    correlations: Array<DataModels.Correlations.Correlation>,\n    processModelId: string,\n  ): Array<IProcessInstanceWithCorrelation> {\n    const processInstancesWithCorrelation: Array<IProcessInstanceWithCorrelation> = [];\n\n    correlations.forEach((correlation: DataModels.Correlations.Correlation) => {\n      correlation.processInstances.forEach((processInstance: DataModels.Correlations.CorrelationProcessInstance) => {\n        const isNotSelectedProcessModel: boolean = processInstance.processModelId !== processModelId;\n\n        if (isNotSelectedProcessModel) {\n          return;\n        }\n\n        const processInstanceWithCorrelation: IProcessInstanceWithCorrelation = {\n          processInstance: processInstance,\n          correlation: correlation,\n        };\n\n        processInstancesWithCorrelation.push(processInstanceWithCorrelation);\n      });\n    });\n\n    return processInstancesWithCorrelation;\n  }\n}\n",".correlation-container {\n  position: relative;\n  width: 100%;\n  height: 100%;\n}\n\n.correlation-table{\n  width: 100%;\n  height: 100%;\n  background: #f0f0f0;\n  user-select: none;\n}\n\n.correlation-table__headlines {\n  display: flex;\n  width: 100%;\n  cursor: pointer;\n}\n\n.correlation-table__headline {\n  width: 30%;\n  padding: 8px;\n  overflow: hidden;\n  border-bottom: 2px solid #ccc !important;\n  font-size: 14px;\n  font-weight: 900;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.correlation-table__headline--number {\n  width: 10%;\n  padding: 8px;\n  overflow: hidden;\n  border-bottom: 2px solid #ccc !important;\n  font-size: 14px;\n  font-weight: 900;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.correlation-table__body {\n  display: block;\n  height: 100%;\n  overflow: auto;\n}\n\n.correlation-table__table-row {\n  display: flex;\n  width: 100%;\n  cursor: pointer;\n}\n\n.correlation-table__table-entry {\n  width: 30%;\n  padding: 8px;\n  overflow: hidden;\n  border-top: none !important;\n  border-bottom: 1px solid #ccc;\n  text-overflow: ellipsis;\n}\n\n.correlation-table__table-entry--state {\n  text-transform: uppercase;\n}\n\n.correlation-table__selected-entry {\n  background-color: #d3d3d3 !important;\n}\n\n.correlation-table__empty-message {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  user-select: none;\n}\n",null,"import {bindable, inject} from 'aurelia-framework';\n\nimport * as clipboard from 'clipboard-polyfill';\n\nimport {DataModels} from '@process-engine/management_api_contracts';\n\nimport {\n  ILogSortSettings,\n  ISolutionEntry,\n  LogSortProperty,\n  NotificationType,\n} from '../../../../../../../contracts/index';\nimport {getBeautifiedDate} from '../../../../../../../services/date-service/date.service';\nimport {NotificationService} from '../../../../../../../services/notification-service/notification.service';\nimport {IInspectCorrelationService} from '../../../../contracts';\n\ninterface IClipboard {\n  writeText?(text: string): void;\n}\n\n@inject('NotificationService', 'InspectCorrelationService')\nexport class LogViewer {\n  @bindable public log: Array<DataModels.Logging.LogEntry>;\n  @bindable public processInstance: DataModels.Correlations.CorrelationProcessInstance;\n  @bindable public activeSolutionEntry: ISolutionEntry;\n  public logSortProperty: typeof LogSortProperty = LogSortProperty;\n  public sortedLog: Array<DataModels.Logging.LogEntry>;\n  public sortSettings: ILogSortSettings = {\n    ascending: false,\n    sortProperty: undefined,\n  };\n\n  private notificationService: NotificationService;\n  private inspectCorrelationService: IInspectCorrelationService;\n\n  constructor(notificationService: NotificationService, inspectCorrelationService: IInspectCorrelationService) {\n    this.notificationService = notificationService;\n    this.inspectCorrelationService = inspectCorrelationService;\n  }\n\n  public async processInstanceChanged(): Promise<void> {\n    const noProcessInstanceSet: boolean = this.processInstance === undefined;\n    if (noProcessInstanceSet) {\n      return;\n    }\n\n    setTimeout(async () => {\n      this.log = await this.inspectCorrelationService.getLogsForProcessInstance(\n        this.processInstance.processModelId,\n        this.processInstance.processInstanceId,\n        this.activeSolutionEntry.identity,\n      );\n\n      this.sortSettings = {\n        ascending: false,\n        sortProperty: undefined,\n      };\n\n      this.sortList(LogSortProperty.Time);\n    }, 0);\n  }\n\n  public copyToClipboard(textToCopy: string): void {\n    (clipboard as IClipboard).writeText(textToCopy);\n\n    this.notificationService.showNotification(NotificationType.SUCCESS, 'Successfully copied to clipboard.');\n  }\n\n  public getDateStringFromTimestamp(timestamp: string): string {\n    const dateString: string = getBeautifiedDate(timestamp);\n\n    return dateString;\n  }\n\n  public sortList(property: LogSortProperty): void {\n    this.sortedLog = [];\n    const isSamePropertyAsPrevious: boolean = this.sortSettings.sortProperty === property;\n    const ascending: boolean = isSamePropertyAsPrevious ? !this.sortSettings.ascending : true;\n\n    this.sortSettings.ascending = ascending;\n    this.sortSettings.sortProperty = property;\n\n    const sortPropertyIsTime: boolean = property === LogSortProperty.Time;\n\n    const sortedLog: Array<DataModels.Logging.LogEntry> = sortPropertyIsTime\n      ? this.getSortedLogByDate()\n      : this.getSortedLogByProperty(property);\n\n    this.sortedLog = ascending ? sortedLog : sortedLog.reverse();\n  }\n\n  private getSortedLogByProperty(property: LogSortProperty): Array<DataModels.Logging.LogEntry> {\n    const sortedLog: Array<DataModels.Logging.LogEntry> = this.log.sort(\n      (firstEntry: DataModels.Logging.LogEntry, secondEntry: DataModels.Logging.LogEntry) => {\n        // FlowNodeId and FlowNodeInstanceId can be 'undefined', if the LogEntry is for a ProcessInstance.\n        // Using 'greaterThan' in conjunction with 'undefined' will always be \"false\", which will mess up the sorting.\n        // So these cases must be handled separately.\n        const firstFieldIsUndefined: boolean = !firstEntry[property];\n        if (firstFieldIsUndefined) {\n          return -1;\n        }\n\n        const secondFieldIsUndefined: boolean = !secondEntry[property];\n        if (secondFieldIsUndefined) {\n          return 1;\n        }\n\n        const firstEntryIsBigger: boolean = firstEntry[property] > secondEntry[property];\n        if (firstEntryIsBigger) {\n          return 1;\n        }\n\n        const secondEntryIsBigger: boolean = firstEntry[property] < secondEntry[property];\n        if (secondEntryIsBigger) {\n          return -1;\n        }\n\n        return 0;\n      },\n    );\n\n    return sortedLog;\n  }\n\n  private getSortedLogByDate(): Array<DataModels.Logging.LogEntry> {\n    const sortedLog: Array<DataModels.Logging.LogEntry> = this.log.sort(\n      (firstEntry: DataModels.Logging.LogEntry, secondEntry: DataModels.Logging.LogEntry) => {\n        const firstCorrelationDate: Date = new Date(firstEntry.timeStamp);\n        const secondCorrelationDate: Date = new Date(secondEntry.timeStamp);\n\n        const firstEntryIsBigger: boolean = firstCorrelationDate.getTime() > secondCorrelationDate.getTime();\n        if (firstEntryIsBigger) {\n          return 1;\n        }\n\n        const secondEntryIsBigger: boolean = firstCorrelationDate.getTime() < secondCorrelationDate.getTime();\n        if (secondEntryIsBigger) {\n          return -1;\n        }\n\n        return 0;\n      },\n    );\n\n    return sortedLog;\n  }\n}\n",".log-viewer {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n}\n\n.log-table{\n  width: 100%;\n  height: 100%;\n  background: #f0f0f0;\n  user-select: none;\n}\n\n.log-table__headlines {\n  display: flex;\n  width: 100%;\n  cursor: default;\n}\n\n.log-table__headline {\n  padding: 8px;\n  overflow: hidden;\n  border-bottom: 2px solid #ccc !important;\n  font-size: 14px;\n  font-weight: 900;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.log-table__body {\n  display: block;\n  height: 100%;\n  overflow: auto;\n}\n\n.log-table__table-row {\n  display: flex;\n  width: 100%;\n  cursor: pointer;\n}\n\n.log-table__table-entry {\n  padding: 8px;\n  overflow: hidden;\n  border-top: none !important;\n  border-bottom: 1px solid #ccc;\n  text-overflow: ellipsis;\n}\n\n.log-table__selected-entry {\n  background-color: #e6e6e6 !important;\n}\n\n.log-table__time-column {\n  width: 150px;\n}\n.log-table__log-level-column {\n  width: 100px;\n}\n\n.log-table__flow-node-id-column {\n  width: 150px;\n}\n\n.log-table__flow-node-instance-id-column {\n  width: 200px;\n}\n\n.log-table__message-column {\n  width: calc(100% - 600px);\n}\n\n.log-table__empty-message {\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  user-select: none;\n}\n",null,"import {EventAggregator, Subscription} from 'aurelia-event-aggregator';\nimport {bindable, inject} from 'aurelia-framework';\n\nimport {DataModels} from '@process-engine/management_api_contracts';\nimport {IDiagram} from '@process-engine/solutionexplorer.contracts';\n\nimport {ICorrelationTableEntry, ISolutionEntry, InspectPanelTab} from '../../../../../contracts/index';\nimport environment from '../../../../../environment';\n\n@inject(EventAggregator)\nexport class InspectPanel {\n  @bindable public processInstanceToSelect: string;\n  @bindable public correlations: Array<DataModels.Correlations.Correlation>;\n  @bindable public sortedTableData: Array<ICorrelationTableEntry>;\n  @bindable public selectedProcessInstance: DataModels.Correlations.CorrelationProcessInstance;\n  @bindable public selectedCorrelation: DataModels.Correlations.Correlation;\n  @bindable public fullscreen: boolean = false;\n  @bindable public activeDiagram: IDiagram;\n  @bindable public activeSolutionEntry: ISolutionEntry;\n  public inspectPanelTab: typeof InspectPanelTab = InspectPanelTab;\n  public showCorrelationList: boolean = true;\n  public showLogViewer: boolean = false;\n\n  private eventAggregator: EventAggregator;\n  private subscriptions: Array<Subscription>;\n\n  constructor(eventAggregator: EventAggregator) {\n    this.eventAggregator = eventAggregator;\n  }\n\n  public attached(): void {\n    this.subscriptions = [\n      this.eventAggregator.subscribe(environment.events.inspectCorrelation.showLogViewer, () => {\n        this.changeTab(InspectPanelTab.LogViewer);\n      }),\n    ];\n  }\n\n  public detached(): void {\n    for (const subscription of this.subscriptions) {\n      subscription.dispose();\n    }\n  }\n\n  public toggleFullscreen(): void {\n    this.fullscreen = !this.fullscreen;\n\n    this.eventAggregator.publish(environment.events.inspect.shouldDisableTokenViewerButton, this.fullscreen);\n  }\n\n  public activeDiagramChanged(): void {\n    this.selectedProcessInstance = undefined;\n\n    this.showLogViewer = false;\n    this.showCorrelationList = true;\n  }\n\n  public changeTab(inspectPanelTab: InspectPanelTab): void {\n    const shouldShowCorrelationList: boolean = inspectPanelTab === InspectPanelTab.CorrelationList;\n    const shouldShowLogViewer: boolean = inspectPanelTab === InspectPanelTab.LogViewer;\n\n    this.showCorrelationList = shouldShowCorrelationList;\n    this.showLogViewer = shouldShowLogViewer;\n  }\n\n  public correlationChanged(\n    newCorrelation: DataModels.Correlations.Correlation,\n    oldCorrelation: DataModels.Correlations.Correlation,\n  ): void {\n    const firstCorrelationGotSelected: boolean = oldCorrelation !== undefined;\n    const shouldEnableTokenViewerButton: boolean = !(firstCorrelationGotSelected || this.fullscreen);\n\n    if (shouldEnableTokenViewerButton) {\n      this.eventAggregator.publish(environment.events.inspect.shouldDisableTokenViewerButton, false);\n    }\n  }\n}\n",".inspect-panel {\n  width: 100%;\n  height: 100%;\n  background: whitesmoke;\n}\n\n.inspect-panel__control-bar {\n  width: 100%;\n  height: 40px;\n  border-top: 1px solid #ccc;\n  border-bottom: 1px solid #ccc;\n}\n\n.inspect-panel__tabs {\n  float: left;\n  width: calc(100% - 40px);\n  height: 100%;\n  overflow: hidden;\n}\n\n.inspect-panel__fullscreen-button {\n  display: flex;\n  height: 100%;\n  border-left: 1px solid #ccc;\n  cursor: default;\n}\n\n.inspect-panel__fullscreen-button > i {\n  margin: auto;\n  font-size: 20px;\n}\n\n.inspect-panel__tab {\n  float: left;\n  height: 100%;\n  padding-right: 10px;\n  padding-left: 10px;\n  background: whitesmoke;\n  border: none;\n}\n\n.inspect-panel__tab:hover:enabled {\n  background: #eaeaea;\n}\n\n.inspect-panel__active-tab {\n  border-bottom: 1px solid black;\n}\n\n.inspect-panel__disabled-tab {\n  cursor: default;\n  color: #ccc;\n}\n\n.inspect-panel__body {\n  height: calc(100% - 40px);\n}\n",null,"import {IIdentity} from '@essential-projects/iam_contracts';\nimport {DataModels} from '@process-engine/management_api_contracts';\n\nexport interface IInspectCorrelationRepository {\n  getAllCorrelationsForProcessModelId(\n    processModelId: string,\n    identity: IIdentity,\n  ): Promise<Array<DataModels.Correlations.Correlation>>;\n  getLogsForCorrelation(\n    correlation: DataModels.Correlations.Correlation,\n    identity: IIdentity,\n  ): Promise<Array<DataModels.Logging.LogEntry>>;\n  getLogsForProcessInstance(\n    processModelId: string,\n    processInstance: string,\n    identity: IIdentity,\n  ): Promise<Array<DataModels.Logging.LogEntry>>;\n  getTokenForFlowNodeInstance(\n    processModelId: string,\n    correlationId: string,\n    flowNodeId: string,\n    identity: IIdentity,\n  ): Promise<Array<DataModels.TokenHistory.TokenHistoryEntry>>;\n  getTokenForFlowNodeByProcessInstanceId(\n    processInstanceId: string,\n    flowNodeId: string,\n    identity: IIdentity,\n  ): Promise<DataModels.TokenHistory.TokenHistoryGroup>;\n}\n","import {IIdentity} from '@essential-projects/iam_contracts';\nimport {DataModels} from '@process-engine/management_api_contracts';\n\nexport interface IInspectCorrelationService {\n  getAllCorrelationsForProcessModelId(\n    processModelId: string,\n    identity: IIdentity,\n  ): Promise<Array<DataModels.Correlations.Correlation>>;\n  getLogsForCorrelation(\n    correlation: DataModels.Correlations.Correlation,\n    identity: IIdentity,\n  ): Promise<Array<DataModels.Logging.LogEntry>>;\n  getLogsForProcessInstance(\n    processModelId: string,\n    processInstance: string,\n    identity: IIdentity,\n  ): Promise<Array<DataModels.Logging.LogEntry>>;\n  getTokenForFlowNodeInstance(\n    processModelId: string,\n    correlationId: string,\n    flowNodeId: string,\n    identity: IIdentity,\n  ): Promise<DataModels.TokenHistory.TokenHistoryGroup | undefined>;\n  getTokenForFlowNodeByProcessInstanceId(\n    processInstanceId: string,\n    flowNodeId: string,\n    identity: IIdentity,\n  ): Promise<DataModels.TokenHistory.TokenHistoryGroup | undefined>;\n}\n","import {DataModels} from '@process-engine/management_api_contracts';\n\nexport interface IProcessInstanceWithCorrelation {\n  processInstance: DataModels.Correlations.CorrelationProcessInstance;\n  correlation: DataModels.Correlations.Correlation;\n}\n","export * from './IInspect-correlation.repository';\nexport * from './IInspect-correlation.service';\nexport * from './IProcessInstanceWithCorrelation';\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nimport {InspectCorrelationRepository} from './repositories/inspect-correlation.repository';\nimport {InspectCorrelationService} from './services/inspect-correlation.service';\n\nexport function configure(config: FrameworkConfiguration): void {\n  config.container.registerSingleton('InspectCorrelationRepository', InspectCorrelationRepository);\n  config.container.registerSingleton('InspectCorrelationService', InspectCorrelationService);\n}\n","import {EventAggregator, Subscription} from 'aurelia-event-aggregator';\nimport {bindable, inject, observable} from 'aurelia-framework';\n\nimport {IShape} from '@process-engine/bpmn-elements_contracts';\nimport {DataModels} from '@process-engine/management_api_contracts';\nimport {IDiagram} from '@process-engine/solutionexplorer.contracts';\n\nimport {IEventFunction, ISolutionEntry, InspectPanelTab} from '../../../contracts/index';\nimport environment from '../../../environment';\nimport {IInspectCorrelationService} from './contracts';\nimport {DiagramViewer} from './components/diagram-viewer/diagram-viewer';\nimport {InspectPanel} from './components/inspect-panel/inspect-panel';\n\n@inject('InspectCorrelationService', EventAggregator)\nexport class InspectCorrelation {\n  @bindable public processInstanceToSelect: string;\n  @bindable public flowNodeToSelect: string;\n  @bindable public activeDiagram: IDiagram;\n  @bindable public activeSolutionEntry: ISolutionEntry;\n  @bindable public selectedProcessInstance: DataModels.Correlations.CorrelationProcessInstance;\n  @bindable public selectedCorrelation: DataModels.Correlations.Correlation;\n  @bindable public inspectPanelFullscreen: boolean = false;\n  @observable public bottomPanelHeight: number = 250;\n  @observable public tokenViewerWidth: number = 250;\n  @bindable public diagramViewer: DiagramViewer;\n  @bindable public inspectPanel: InspectPanel;\n  @bindable public inspectPanelTabToShow: InspectPanelTab;\n\n  public correlations: Array<DataModels.Correlations.Correlation>;\n  public token: string;\n  public showInspectPanel: boolean = true;\n  public showTokenViewer: boolean = false;\n  public bottomPanelResizeDiv: HTMLDivElement;\n  public rightPanelResizeDiv: HTMLDivElement;\n  public selectedFlowNode: IShape;\n\n  public viewIsAttached: boolean = false;\n\n  private inspectCorrelationService: IInspectCorrelationService;\n  private eventAggregator: EventAggregator;\n  private subscriptions: Array<Subscription>;\n\n  constructor(inspectCorrelationService: IInspectCorrelationService, eventAggregator: EventAggregator) {\n    this.inspectCorrelationService = inspectCorrelationService;\n    this.eventAggregator = eventAggregator;\n  }\n\n  public async attached(): Promise<void> {\n    try {\n      this.correlations = await this.inspectCorrelationService.getAllCorrelationsForProcessModelId(\n        this.activeDiagram.id,\n        this.activeSolutionEntry.identity,\n      );\n    } catch (error) {\n      this.eventAggregator.publish(environment.events.inspectCorrelation.noCorrelationsFound, true);\n      this.correlations = [];\n    }\n\n    this.eventAggregator.publish(environment.events.statusBar.showInspectCorrelationButtons, true);\n\n    this.subscriptions = [\n      this.eventAggregator.subscribe(\n        environment.events.inspectCorrelation.showInspectPanel,\n        (showInspectPanel: boolean) => {\n          this.showInspectPanel = showInspectPanel;\n        },\n      ),\n      this.eventAggregator.subscribe(\n        environment.events.inspectCorrelation.showTokenViewer,\n        (showTokenViewer: boolean) => {\n          this.showTokenViewer = showTokenViewer;\n        },\n      ),\n    ];\n\n    this.bottomPanelResizeDiv.addEventListener('mousedown', (mouseDownEvent: Event) => {\n      const windowEvent: Event = mouseDownEvent || window.event;\n      windowEvent.cancelBubble = true;\n\n      const mousemoveFunction: IEventFunction = (mouseMoveEvent: MouseEvent): void => {\n        this.resizeInspectPanel(mouseMoveEvent);\n        document.getSelection().empty();\n      };\n\n      const mouseUpFunction: IEventFunction = (): void => {\n        document.removeEventListener('mousemove', mousemoveFunction);\n        document.removeEventListener('mouseup', mouseUpFunction);\n      };\n\n      document.addEventListener('mousemove', mousemoveFunction);\n      document.addEventListener('mouseup', mouseUpFunction);\n    });\n\n    this.rightPanelResizeDiv.addEventListener('mousedown', (mouseDownEvent: Event) => {\n      const windowEvent: Event = mouseDownEvent || window.event;\n      windowEvent.cancelBubble = true;\n\n      const mousemoveFunction: IEventFunction = (mouseMoveEvent: MouseEvent): void => {\n        this.resizeTokenViewer(mouseMoveEvent);\n        document.getSelection().empty();\n      };\n\n      const mouseUpFunction: IEventFunction = (): void => {\n        document.removeEventListener('mousemove', mousemoveFunction);\n        document.removeEventListener('mouseup', mouseUpFunction);\n      };\n\n      document.addEventListener('mousemove', mousemoveFunction);\n      document.addEventListener('mouseup', mouseUpFunction);\n    });\n\n    this.viewIsAttached = true;\n\n    const previousTokenViewerState: boolean = JSON.parse(\n      window.localStorage.getItem('tokenViewerInspectCollapseState'),\n    );\n    this.showTokenViewer = previousTokenViewerState || false;\n\n    const flowNodeToSelectExists: boolean = this.flowNodeToSelect !== undefined;\n    if (flowNodeToSelectExists) {\n      this.diagramViewer.selectFlowNode(this.flowNodeToSelect);\n    }\n\n    const shouldDisplaySpecificInspectPanelTab: boolean = this.inspectPanelTabToShow !== undefined;\n    if (shouldDisplaySpecificInspectPanelTab) {\n      this.inspectPanel.changeTab(this.inspectPanelTabToShow);\n    }\n  }\n\n  public detached(): void {\n    this.eventAggregator.publish(environment.events.statusBar.showInspectCorrelationButtons, false);\n\n    for (const subscription of this.subscriptions) {\n      subscription.dispose();\n    }\n  }\n\n  public async activeDiagramChanged(): Promise<void> {\n    if (this.viewIsAttached) {\n      try {\n        this.correlations = await this.inspectCorrelationService.getAllCorrelationsForProcessModelId(\n          this.activeDiagram.id,\n          this.activeSolutionEntry.identity,\n        );\n      } catch (error) {\n        this.eventAggregator.publish(environment.events.inspectCorrelation.noCorrelationsFound, true);\n        this.correlations = [];\n      }\n    }\n  }\n\n  private resizeInspectPanel(mouseEvent: MouseEvent): void {\n    const mouseYPosition: number = mouseEvent.clientY;\n\n    const menuBarHeight: number = 40;\n    const inspectCorrelation: HTMLElement = this.bottomPanelResizeDiv.parentElement.parentElement;\n    const inspectPanelHeightWithStatusBar: number = inspectCorrelation.clientHeight + menuBarHeight;\n\n    const minInspectPanelHeight: number = 250;\n\n    const newBottomPanelHeight: number = inspectPanelHeightWithStatusBar - mouseYPosition;\n\n    this.bottomPanelHeight = Math.max(newBottomPanelHeight, minInspectPanelHeight);\n  }\n\n  private resizeTokenViewer(mouseEvent: MouseEvent): void {\n    const mouseXPosition: number = mouseEvent.clientX;\n\n    const inspectCorrelation: HTMLElement = this.bottomPanelResizeDiv.parentElement.parentElement;\n    const minSpaceForDiagramViewer: number = 300;\n\n    const windowWidth: number = window.innerWidth;\n    const rightToolbarWidth: number = 36;\n\n    const minTokenViewerWidth: number = 250;\n    const maxTokenViewerWidth: number = inspectCorrelation.clientWidth - minSpaceForDiagramViewer;\n\n    const newTokenViewerWidth: number = windowWidth - mouseXPosition - rightToolbarWidth;\n\n    /*\n     * This sets the new width of the token viewer to the minimum or maximum width,\n     * if the new width is smaller than the minimum or bigger than the maximum width.\n     */\n    this.tokenViewerWidth = Math.min(maxTokenViewerWidth, Math.max(newTokenViewerWidth, minTokenViewerWidth));\n  }\n}\n",".inspect-correlation {\n  position: relative;\n  width: 100%;\n  height: 100%;\n}\n\n.inspect-correlation__panels {\n  display: flex;\n  width: calc(100% - 72px);\n  height: 100%;\n  margin-right: 36px;\n  margin-left: 36px;\n  flex-direction: column;\n}\n\n.inspect-correlation__correlation-selection {\n  position: relative;\n  height: 175px;\n  margin-top: 20px;\n  margin-right: 20px;\n  margin-left: 20px;\n  overflow: hidden;\n  background-color: #f7f7f7;\n  border: 1px solid #ccc;\n  user-select: none;\n}\n\n.inspect-correlation__correlation-data {\n  height: calc(100% - 175px - 20px);\n  padding: 20px;\n}\n\n.inspect-correlation__bottom-panel {\n  width: 100%;\n  max-height: calc(100% - 150px);\n}\n\n.inspect-correlation__bottom-panel--fullscreen {\n  height: 100% !important;\n  max-height: 100%;\n}\n\n.inspect-correlation__bottom-resize-div {\n  z-index: 1;\n  height: 9px;\n  width: 100%;\n  margin-top: -4px;\n  margin-bottom: -4px;\n  cursor: row-resize;\n  flex-shrink: 0;\n}\n\n.inspect-correlation__right-resize-div {\n  z-index: 1;\n  width: 6px;\n  margin-right: -4px;\n  cursor: col-resize;\n  flex-shrink: 0;\n}\n\n.inspect-correlation__upper-panel {\n  display: flex;\n  flex-grow: 1;\n}\n\n.inspect-correlation__diagram-viewer {\n  flex-basis: 100%;\n}\n\n.inspect-correlation__token-viewer {\n  height: 100%;\n  max-width: calc(100% - 300px);\n  flex-shrink: 0;\n}\n\n.inspect-correlation__right-toolbar {\n  position: absolute;\n  z-index: 1;\n  top: 0px;\n  right: 0px;\n  width: 36px;\n  height: 100%;\n  padding-bottom: 22px;\n}\n\n.inspect-correlation__left-toolbar {\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  width: 36px;\n  height: 100%;\n  background-color: #f7f7f7;\n  border-right: 2px solid #ccc;\n  padding-bottom: 22px;\n}\n",null,"import {inject} from 'aurelia-framework';\n\nimport {IIdentity} from '@essential-projects/iam_contracts';\nimport {DataModels, IManagementApi} from '@process-engine/management_api_contracts';\n\nimport {IInspectCorrelationRepository} from '../contracts';\n\n@inject('ManagementApiClientService')\nexport class InspectCorrelationRepository implements IInspectCorrelationRepository {\n  private managementApiService: IManagementApi;\n\n  constructor(managementApi: IManagementApi) {\n    this.managementApiService = managementApi;\n  }\n\n  public async getAllCorrelationsForProcessModelId(\n    processModelId: string,\n    identity: IIdentity,\n  ): Promise<Array<DataModels.Correlations.Correlation>> {\n    return this.managementApiService.getCorrelationsByProcessModelId(identity, processModelId);\n  }\n\n  public async getLogsForCorrelation(\n    correlation: DataModels.Correlations.Correlation,\n    identity: IIdentity,\n  ): Promise<Array<DataModels.Logging.LogEntry>> {\n    const logsForAllProcessModelsOfCorrelation: Array<Array<DataModels.Logging.LogEntry>> = [];\n\n    for (const processModel of correlation.processInstances) {\n      const logsForProcessModel: Array<\n        DataModels.Logging.LogEntry\n      > = await this.managementApiService.getProcessModelLog(identity, processModel.processModelId, correlation.id);\n\n      logsForAllProcessModelsOfCorrelation.push(logsForProcessModel);\n    }\n\n    const logsForCorrelation: Array<DataModels.Logging.LogEntry> = [].concat(...logsForAllProcessModelsOfCorrelation);\n\n    return logsForCorrelation;\n  }\n\n  public async getLogsForProcessInstance(\n    processModelId: string,\n    processInstanceId: string,\n    identity: IIdentity,\n  ): Promise<Array<DataModels.Logging.LogEntry>> {\n    const logs: Array<DataModels.Logging.LogEntry> = await this.managementApiService.getProcessInstanceLog(\n      identity,\n      processModelId,\n      processInstanceId,\n    );\n\n    return logs;\n  }\n\n  public async getTokenForFlowNodeInstance(\n    processModelId: string,\n    correlationId: string,\n    flowNodeId: string,\n    identity: IIdentity,\n  ): Promise<Array<DataModels.TokenHistory.TokenHistoryEntry>> {\n    return this.managementApiService.getTokensForFlowNode(identity, correlationId, processModelId, flowNodeId);\n  }\n\n  public async getTokenForFlowNodeByProcessInstanceId(\n    processInstanceId: string,\n    flowNodeId: string,\n    identity: IIdentity,\n  ): Promise<DataModels.TokenHistory.TokenHistoryGroup> {\n    return this.managementApiService.getTokensForFlowNodeByProcessInstanceId(identity, processInstanceId, flowNodeId);\n  }\n}\n","import {inject} from 'aurelia-framework';\n\nimport {IIdentity} from '@essential-projects/iam_contracts';\nimport {DataModels} from '@process-engine/management_api_contracts';\n\nimport {IInspectCorrelationRepository, IInspectCorrelationService} from '../contracts';\n\n@inject('InspectCorrelationRepository')\nexport class InspectCorrelationService implements IInspectCorrelationService {\n  private inspectCorrelationRepository: IInspectCorrelationRepository;\n\n  constructor(inspectCorrelationRepository: IInspectCorrelationRepository) {\n    this.inspectCorrelationRepository = inspectCorrelationRepository;\n  }\n\n  public getAllCorrelationsForProcessModelId(\n    processModelId: string,\n    identity: IIdentity,\n  ): Promise<Array<DataModels.Correlations.Correlation>> {\n    return this.inspectCorrelationRepository.getAllCorrelationsForProcessModelId(processModelId, identity);\n  }\n\n  public getLogsForCorrelation(\n    correlation: DataModels.Correlations.Correlation,\n    identity: IIdentity,\n  ): Promise<Array<DataModels.Logging.LogEntry>> {\n    return this.inspectCorrelationRepository.getLogsForCorrelation(correlation, identity);\n  }\n\n  public getLogsForProcessInstance(\n    processModelId: string,\n    processInstanceId: string,\n    identity: IIdentity,\n  ): Promise<Array<DataModels.Logging.LogEntry>> {\n    return this.inspectCorrelationRepository.getLogsForProcessInstance(processModelId, processInstanceId, identity);\n  }\n\n  public async getTokenForFlowNodeInstance(\n    processModelId: string,\n    correlationId: string,\n    flowNodeId: string,\n    identity: IIdentity,\n  ): Promise<DataModels.TokenHistory.TokenHistoryGroup | undefined> {\n    try {\n      const tokenHistory: DataModels.TokenHistory.TokenHistoryGroup = {};\n      const tokenForFlowNodeInstance: Array<\n        DataModels.TokenHistory.TokenHistoryEntry\n      > = await this.inspectCorrelationRepository.getTokenForFlowNodeInstance(\n        processModelId,\n        correlationId,\n        flowNodeId,\n        identity,\n      );\n\n      tokenHistory[tokenForFlowNodeInstance[0].flowNodeId] = tokenForFlowNodeInstance;\n      return tokenHistory;\n    } catch (error) {\n      return undefined;\n    }\n  }\n\n  public async getTokenForFlowNodeByProcessInstanceId(\n    processInstanceId: string,\n    flowNodeId: string,\n    identity: IIdentity,\n  ): Promise<DataModels.TokenHistory.TokenHistoryGroup | undefined> {\n    try {\n      return await this.inspectCorrelationRepository.getTokenForFlowNodeByProcessInstanceId(\n        processInstanceId,\n        flowNodeId,\n        identity,\n      );\n    } catch (error) {\n      return undefined;\n    }\n  }\n}\n",".inspect {\n  width: 100%;\n  height: 100%;\n}\n\n.inspect-layout__tools-right {\n  position: fixed;\n  width: 36px;\n  top: 42px;\n  right: 0px;\n  bottom: 0;\n  background-color: #f7f7f7;\n  border-left: 2px solid #dcdbdb;\n}\n\n.inspect-layout__tool {\n  padding: 5px;\n  margin: 0 5px;\n  opacity: 0.5;\n  text-align: center;\n  cursor: default\n}\n\n.inspect-layout__tool:hover {\n  opacity: 1;\n}\n\n.inspect-layout__tool--active {\n  opacity: 1;\n}\n\n.inspect-layout__tool--disabled {\n  opacity: 0.2 !important;\n  cursor: default;\n}\n\n.inspect-layout__tool--disabled:hover {\n  opacity: 0.2;\n  cursor: default;\n}\n\n.dashboard__heatmap-container {\n  margin-right: 36px;\n}\n",null,"import {EventAggregator, Subscription} from 'aurelia-event-aggregator';\nimport {bindable, inject, observable} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\n\nimport {IIdentity} from '@essential-projects/iam_contracts';\nimport {DataModels, IManagementApi} from '@process-engine/management_api_contracts';\n\nimport {ForbiddenError, UnauthorizedError, isError} from '@essential-projects/errors_ts';\nimport {AuthenticationStateEvent, ISolutionEntry, ISolutionService, NotificationType} from '../../../contracts/index';\nimport {getBeautifiedDate} from '../../../services/date-service/date.service';\nimport {NotificationService} from '../../../services/notification-service/notification.service';\nimport environment from '../../../environment';\n\ntype ProcessInstanceWithCorrelation = {\n  processInstance: DataModels.Correlations.CorrelationProcessInstance;\n  correlation: DataModels.Correlations.Correlation;\n};\n\n@inject('ManagementApiClientService', EventAggregator, 'NotificationService', 'SolutionService', Router)\nexport class ProcessList {\n  @observable public currentPage: number = 1;\n  @bindable() public activeSolutionEntry: ISolutionEntry;\n  public pageSize: number = 10;\n  public totalItems: number;\n  public paginationSize: number = 10;\n  public initialLoadingFinished: boolean = false;\n  public processInstancesToDisplay: Array<ProcessInstanceWithCorrelation> = [];\n  public showError: boolean;\n\n  private managementApiService: IManagementApi;\n  private eventAggregator: EventAggregator;\n  private notificationService: NotificationService;\n  private solutionService: ISolutionService;\n  private activeSolutionUri: string;\n  private router: Router;\n\n  private subscriptions: Array<Subscription>;\n  private correlations: Array<DataModels.Correlations.Correlation> = [];\n  private processInstancesWithCorrelation: Array<ProcessInstanceWithCorrelation> = [];\n  private stoppedProcessInstancesWithCorrelation: Array<ProcessInstanceWithCorrelation> = [];\n\n  constructor(\n    managementApiService: IManagementApi,\n    eventAggregator: EventAggregator,\n    notificationService: NotificationService,\n    solutionService: ISolutionService,\n    router: Router,\n  ) {\n    this.managementApiService = managementApiService;\n    this.eventAggregator = eventAggregator;\n    this.notificationService = notificationService;\n    this.solutionService = solutionService;\n    this.router = router;\n  }\n\n  public async activeSolutionEntryChanged(newValue: ISolutionEntry): Promise<void> {\n    if (!newValue.uri.includes('http')) {\n      return;\n    }\n\n    this.correlations = [];\n    this.processInstancesWithCorrelation = [];\n    this.processInstancesToDisplay = [];\n    this.stoppedProcessInstancesWithCorrelation = [];\n    this.initialLoadingFinished = false;\n\n    this.eventAggregator.publish(environment.events.configPanel.solutionEntryChanged, newValue);\n    await this.updateCorrelationList();\n  }\n\n  public async currentPageChanged(newValue: number, oldValue: number): Promise<void> {\n    const oldValueIsDefined: boolean = oldValue !== undefined && oldValue !== null;\n\n    if (oldValueIsDefined) {\n      this.updateCorrelationsToDisplay();\n    }\n  }\n\n  public async attached(): Promise<void> {\n    this.activeSolutionUri = this.router.currentInstruction.queryParams.solutionUri;\n\n    const activeSolutionUriIsNotSet: boolean = this.activeSolutionUri === undefined;\n\n    if (activeSolutionUriIsNotSet) {\n      this.activeSolutionUri = window.localStorage.getItem('InternalProcessEngineRoute');\n    }\n\n    const activeSolutionUriIsNotRemote: boolean = !this.activeSolutionUri.startsWith('http');\n    if (activeSolutionUriIsNotRemote) {\n      this.activeSolutionUri = window.localStorage.getItem('InternalProcessEngineRoute');\n    }\n\n    this.activeSolutionEntry = this.solutionService.getSolutionEntryForUri(this.activeSolutionUri);\n\n    await this.updateCorrelationList();\n\n    this.subscriptions = [\n      this.eventAggregator.subscribe(AuthenticationStateEvent.LOGIN, async () => {\n        await this.updateCorrelationList();\n      }),\n      this.eventAggregator.subscribe(AuthenticationStateEvent.LOGOUT, async () => {\n        await this.updateCorrelationList();\n      }),\n    ];\n\n    this.managementApiService.onProcessStarted(this.activeSolutionEntry.identity, async () => {\n      await this.updateCorrelationList();\n    });\n\n    this.managementApiService.onProcessEnded(this.activeSolutionEntry.identity, async () => {\n      await this.updateCorrelationList();\n    });\n\n    /**\n     * This notification gets also triggered when the processinstance has been terminated.\n     * Currently the onProcessTerminated notification does not work.\n     */\n    this.managementApiService.onProcessError(this.activeSolutionEntry.identity, async () => {\n      await this.updateCorrelationList();\n    });\n  }\n\n  public detached(): void {\n    if (this.subscriptions !== undefined) {\n      for (const subscription of this.subscriptions) {\n        subscription.dispose();\n      }\n    }\n  }\n\n  public async updateCorrelationList(): Promise<void> {\n    try {\n      const correlations: Array<DataModels.Correlations.Correlation> = await this.getAllActiveCorrelations();\n      const correlationListWasUpdated: boolean =\n        JSON.stringify(correlations.sort(this.sortCorrelations)) !== JSON.stringify(this.correlations);\n\n      if (correlationListWasUpdated) {\n        this.correlations = correlations;\n        this.correlations.sort(this.sortCorrelations);\n\n        this.processInstancesWithCorrelation = [];\n        for (const correlation of this.correlations) {\n          const processInstancesWithCorrelation: Array<\n            ProcessInstanceWithCorrelation\n          > = correlation.processInstances.map(\n            (processInstance: DataModels.Correlations.CorrelationProcessInstance) => {\n              return {\n                processInstance: processInstance,\n                correlation: correlation,\n              };\n            },\n          );\n\n          this.processInstancesWithCorrelation.push(...processInstancesWithCorrelation);\n        }\n\n        this.updateCorrelationsToDisplay();\n      }\n\n      this.initialLoadingFinished = true;\n    } catch (error) {\n      this.initialLoadingFinished = true;\n\n      const errorIsForbiddenError: boolean = isError(error, ForbiddenError);\n      const errorIsUnauthorizedError: boolean = isError(error, UnauthorizedError);\n      const errorIsAuthenticationRelated: boolean = errorIsForbiddenError || errorIsUnauthorizedError;\n\n      if (!errorIsAuthenticationRelated) {\n        this.processInstancesToDisplay = [];\n        this.processInstancesWithCorrelation = [];\n        this.correlations = [];\n        this.showError = true;\n      }\n    }\n\n    const correlationsAreNotSet: boolean = this.correlations === undefined || this.correlations === null;\n    if (correlationsAreNotSet) {\n      this.correlations = [];\n      this.processInstancesWithCorrelation = [];\n    }\n\n    this.totalItems = this.processInstancesWithCorrelation.length;\n  }\n\n  public async stopProcessInstance(\n    processInstance: DataModels.Correlations.CorrelationProcessInstance,\n    correlation: DataModels.Correlations.Correlation,\n  ): Promise<void> {\n    try {\n      this.managementApiService.onProcessError(this.activeSolutionEntry.identity, () => {\n        processInstance.state = DataModels.Correlations.CorrelationState.error;\n      });\n\n      await this.managementApiService.terminateProcessInstance(\n        this.activeSolutionEntry.identity,\n        processInstance.processInstanceId,\n      );\n\n      const processInstanceWithCorrelation: ProcessInstanceWithCorrelation = {\n        processInstance: processInstance,\n        correlation: correlation,\n      };\n\n      this.stoppedProcessInstancesWithCorrelation.push(processInstanceWithCorrelation);\n\n      await this.updateCorrelationList();\n    } catch (error) {\n      this.notificationService.showNotification(NotificationType.ERROR, `Error while stopping Process! ${error}`);\n    }\n  }\n\n  public formatDate(date: string): string {\n    return getBeautifiedDate(date);\n  }\n\n  private async getAllActiveCorrelations(): Promise<Array<DataModels.Correlations.Correlation>> {\n    const identity: IIdentity = this.activeSolutionEntry.identity;\n\n    return this.managementApiService.getActiveCorrelations(identity);\n  }\n\n  private sortCorrelations(\n    correlation1: DataModels.Correlations.Correlation,\n    correlation2: DataModels.Correlations.Correlation,\n  ): number {\n    return Date.parse(correlation2.createdAt.toString()) - Date.parse(correlation1.createdAt.toString());\n  }\n\n  private sortProcessInstancesWithCorrelation(\n    firstProcessInstanceWithCorrelation: ProcessInstanceWithCorrelation,\n    secondProcessInstanceWithCorrelation: ProcessInstanceWithCorrelation,\n  ): number {\n    const firstCorrelation: DataModels.Correlations.Correlation = firstProcessInstanceWithCorrelation.correlation;\n    const secondCorrelation: DataModels.Correlations.Correlation = secondProcessInstanceWithCorrelation.correlation;\n\n    const correlationsAreDifferent: boolean = firstCorrelation.id !== secondCorrelation.id;\n    if (correlationsAreDifferent) {\n      return Date.parse(secondCorrelation.createdAt.toString()) - Date.parse(firstCorrelation.createdAt.toString());\n    }\n\n    const firstProcessInstance: DataModels.Correlations.CorrelationProcessInstance =\n      firstProcessInstanceWithCorrelation.processInstance;\n    const secondProcessInstance: DataModels.Correlations.CorrelationProcessInstance =\n      secondProcessInstanceWithCorrelation.processInstance;\n\n    return (\n      Date.parse(secondProcessInstance.createdAt.toString()) - Date.parse(firstProcessInstance.createdAt.toString())\n    );\n  }\n\n  private updateCorrelationsToDisplay(): void {\n    const firstProcessInstanceIndex: number = (this.currentPage - 1) * this.pageSize;\n    const lastProcessInstanceIndex: number = this.pageSize * this.currentPage;\n\n    this.processInstancesToDisplay = this.processInstancesWithCorrelation;\n\n    this.stoppedProcessInstancesWithCorrelation.forEach(\n      (stoppedProcessInstanceWithCorrelation: ProcessInstanceWithCorrelation) => {\n        const processInstanceExistInDisplayArray: boolean = this.processInstancesToDisplay.some(\n          (processInstanceWithCorrelation: ProcessInstanceWithCorrelation) => {\n            return (\n              stoppedProcessInstanceWithCorrelation.processInstance === processInstanceWithCorrelation.processInstance\n            );\n          },\n        );\n\n        if (!processInstanceExistInDisplayArray) {\n          this.processInstancesToDisplay.push(stoppedProcessInstanceWithCorrelation);\n        }\n      },\n    );\n\n    this.processInstancesToDisplay.sort(this.sortProcessInstancesWithCorrelation);\n    this.processInstancesToDisplay = this.processInstancesToDisplay.slice(\n      firstProcessInstanceIndex,\n      lastProcessInstanceIndex,\n    );\n  }\n}\n",".process-list__last-table-cell {\n  width: 1%;\n  white-space: nowrap;\n}\n\n.pagination {\n  padding-right: 0px;\n  justify-content: center;\n}\n\n.loading-spinner {\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 100px;\n}\n\n.process-list-container {\n  flex: 1;\n}\n\n.process-list {\n  display: flex;\n  align-items: stretch;\n}\n\n.process-list-item-stopped {\n  background-color: #ff00005c !important;\n}\n\n.process-list-item-modelname:hover {\n  color: inherit;\n}\n\n.process-list-header {\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n\n.process-list-total-count {\n  float: right;\n}\n\n.process-list__no-processes-text--error {\n  color: darkred;\n}\n",null,"import {EventAggregator, Subscription} from 'aurelia-event-aggregator';\nimport {bindable, inject} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\n\nimport {ForbiddenError, NotFoundError, UnauthorizedError, isError} from '@essential-projects/errors_ts';\nimport {DataModels, IManagementApi} from '@process-engine/management_api_contracts';\n\nimport {AuthenticationStateEvent, ISolutionEntry, ISolutionService} from '../../../contracts/index';\nimport environment from '../../../environment';\n\ninterface ITaskListRouteParameters {\n  processInstanceId?: string;\n  diagramName?: string;\n  correlationId?: string;\n}\n\ntype TaskSource =\n  | DataModels.EmptyActivities.EmptyActivity\n  | DataModels.ManualTasks.ManualTask\n  | DataModels.UserTasks.UserTask;\n\nenum TaskType {\n  UserTask = 'UserTask',\n  ManualTask = 'ManualTask',\n  EmptyActivity = 'EmptyActivity',\n}\n\ntype TaskListEntry = {\n  id: string;\n  flowNodeInstanceId?: string;\n  name: string;\n  correlationId: string;\n  processModelId: string;\n  processInstanceId: string;\n  taskType: TaskType;\n};\n\n@inject(EventAggregator, 'ManagementApiClientService', Router, 'SolutionService')\nexport class TaskList {\n  @bindable() public activeSolutionEntry: ISolutionEntry;\n\n  public currentPage: number = 0;\n  public pageSize: number = 10;\n  public totalItems: number;\n  public paginationSize: number = 10;\n\n  public initialLoadingFinished: boolean = false;\n  public showError: boolean = false;\n\n  private activeSolutionUri: string;\n  private eventAggregator: EventAggregator;\n  private managementApiService: IManagementApi;\n  private router: Router;\n  private solutionService: ISolutionService;\n\n  private subscriptions: Array<Subscription>;\n  private tasks: Array<TaskListEntry> = [];\n  private getTasks: () => Promise<Array<TaskListEntry>>;\n  private isAttached: boolean = false;\n\n  constructor(\n    eventAggregator: EventAggregator,\n    managementApiService: IManagementApi,\n    router: Router,\n    solutionService: ISolutionService,\n  ) {\n    this.eventAggregator = eventAggregator;\n    this.managementApiService = managementApiService;\n    this.router = router;\n    this.solutionService = solutionService;\n  }\n\n  public get shownTasks(): Array<TaskListEntry> {\n    return this.tasks.slice((this.currentPage - 1) * this.pageSize, this.pageSize * this.currentPage);\n  }\n\n  public initializeTaskList(routeParameters: ITaskListRouteParameters): void {\n    const diagramName: string = routeParameters.diagramName;\n    const correlationId: string = routeParameters.correlationId;\n    const processInstanceId: string = routeParameters.processInstanceId;\n\n    const hasDiagramName: boolean = diagramName !== undefined;\n    const hasCorrelationId: boolean = correlationId !== undefined;\n    const hasProcessInstanceId: boolean = processInstanceId !== undefined;\n\n    if (hasDiagramName) {\n      this.getTasks = (): Promise<Array<TaskListEntry>> => {\n        return this.getTasksForProcessModel(diagramName);\n      };\n    } else if (hasCorrelationId) {\n      this.getTasks = (): Promise<Array<TaskListEntry>> => {\n        return this.getTasksForCorrelation(correlationId);\n      };\n    } else if (hasProcessInstanceId) {\n      this.getTasks = (): Promise<Array<TaskListEntry>> => {\n        return this.getTasksForProcessInstanceId(processInstanceId);\n      };\n    } else {\n      this.getTasks = this.getAllTasks;\n    }\n  }\n\n  public async activeSolutionEntryChanged(newValue): Promise<void> {\n    if (this.isAttached) {\n      this.tasks = [];\n      this.initialLoadingFinished = false;\n      this.showError = false;\n      this.eventAggregator.publish(environment.events.configPanel.solutionEntryChanged, newValue);\n\n      await this.updateTasks();\n    }\n  }\n\n  public async attached(): Promise<void> {\n    const getTasksIsUndefined: boolean = this.getTasks === undefined;\n\n    this.activeSolutionUri = this.router.currentInstruction.queryParams.solutionUri;\n\n    const activeSolutionUriIsNotSet: boolean = this.activeSolutionUri === undefined;\n\n    if (activeSolutionUriIsNotSet) {\n      this.activeSolutionUri = window.localStorage.getItem('InternalProcessEngineRoute');\n    }\n\n    this.activeSolutionEntry = this.solutionService.getSolutionEntryForUri(this.activeSolutionUri);\n\n    if (getTasksIsUndefined) {\n      this.getTasks = this.getAllTasks;\n    }\n\n    this.subscriptions = [\n      this.eventAggregator.subscribe(AuthenticationStateEvent.LOGIN, async () => {\n        await this.updateTasks();\n      }),\n      this.eventAggregator.subscribe(AuthenticationStateEvent.LOGOUT, async () => {\n        await this.updateTasks();\n      }),\n    ];\n\n    await this.updateTasks();\n\n    this.managementApiService.onEmptyActivityFinished(this.activeSolutionEntry.identity, async () => {\n      await this.updateTasks();\n    });\n\n    this.managementApiService.onEmptyActivityWaiting(this.activeSolutionEntry.identity, async () => {\n      await this.updateTasks();\n    });\n\n    this.managementApiService.onUserTaskFinished(this.activeSolutionEntry.identity, async () => {\n      await this.updateTasks();\n    });\n\n    this.managementApiService.onUserTaskWaiting(this.activeSolutionEntry.identity, async () => {\n      await this.updateTasks();\n    });\n\n    this.managementApiService.onManualTaskFinished(this.activeSolutionEntry.identity, async () => {\n      await this.updateTasks();\n    });\n\n    this.managementApiService.onManualTaskWaiting(this.activeSolutionEntry.identity, async () => {\n      await this.updateTasks();\n    });\n\n    this.managementApiService.onProcessError(this.activeSolutionEntry.identity, async () => {\n      await this.updateTasks();\n    });\n\n    this.isAttached = true;\n  }\n\n  public detached(): void {\n    for (const subscription of this.subscriptions) {\n      subscription.dispose();\n    }\n\n    this.isAttached = false;\n  }\n\n  public goBack(): void {\n    this.router.navigateBack();\n  }\n\n  public continueTask(task: TaskListEntry): void {\n    const {correlationId, id, processInstanceId} = task;\n\n    this.router.navigateToRoute('live-execution-tracker', {\n      diagramName: task.processModelId,\n      solutionUri: this.activeSolutionEntry.uri,\n      correlationId: correlationId,\n      processInstanceId: processInstanceId,\n      taskId: id,\n    });\n  }\n\n  private async getAllTasks(): Promise<Array<TaskListEntry>> {\n    const allProcessModels: DataModels.ProcessModels.ProcessModelList = await this.managementApiService.getProcessModels(\n      this.activeSolutionEntry.identity,\n    );\n\n    // TODO (ph): This will create 1 + n http reqeusts, where n is the number of process models in the processengine.\n    const promisesForAllUserTasks: Array<Promise<Array<TaskListEntry>>> = allProcessModels.processModels.map(\n      async (processModel: DataModels.ProcessModels.ProcessModel): Promise<Array<TaskListEntry>> => {\n        const userTaskList: DataModels.UserTasks.UserTaskList = await this.managementApiService.getUserTasksForProcessModel(\n          this.activeSolutionEntry.identity,\n          processModel.id,\n        );\n\n        return this.mapToTaskListEntry(userTaskList.userTasks, TaskType.UserTask);\n      },\n    );\n\n    const promisesForAllManualTasks: Array<Promise<Array<TaskListEntry>>> = allProcessModels.processModels.map(\n      async (processModel: DataModels.ProcessModels.ProcessModel): Promise<Array<TaskListEntry>> => {\n        const manualTaskList: DataModels.ManualTasks.ManualTaskList = await this.managementApiService.getManualTasksForProcessModel(\n          this.activeSolutionEntry.identity,\n          processModel.id,\n        );\n\n        return this.mapToTaskListEntry(manualTaskList.manualTasks, TaskType.ManualTask);\n      },\n    );\n\n    const promisesForAllEmptyActivities: Array<Promise<Array<TaskListEntry>>> = allProcessModels.processModels.map(\n      async (processModel: DataModels.ProcessModels.ProcessModel): Promise<Array<TaskListEntry>> => {\n        const emptyActivityList: DataModels.EmptyActivities.EmptyActivityList = await this.managementApiService.getEmptyActivitiesForProcessModel(\n          this.activeSolutionEntry.identity,\n          processModel.id,\n        );\n\n        return this.mapToTaskListEntry(emptyActivityList.emptyActivities, TaskType.EmptyActivity);\n      },\n    );\n    // Concatenate the Promises for requesting UserTasks and requesting ManualTasks.\n    const promisesForAllTasksForAllProcessModels: Array<TaskListEntry> = [].concat(\n      promisesForAllUserTasks,\n      promisesForAllManualTasks,\n      promisesForAllEmptyActivities,\n    );\n\n    // Await all promises.\n    const allTasksForAllProcessModels: Array<TaskListEntry> = await Promise.all(promisesForAllTasksForAllProcessModels);\n\n    // Flatten all results.\n    const allTasks: Array<TaskListEntry> = [].concat(...allTasksForAllProcessModels);\n\n    return allTasks;\n  }\n\n  private async getTasksForProcessModel(processModelId: string): Promise<Array<TaskListEntry>> {\n    const userTaskList: DataModels.UserTasks.UserTaskList = await this.managementApiService.getUserTasksForProcessModel(\n      this.activeSolutionEntry.identity,\n      processModelId,\n    );\n\n    const manualTaskList: DataModels.ManualTasks.ManualTaskList = await this.managementApiService.getManualTasksForProcessModel(\n      this.activeSolutionEntry.identity,\n      processModelId,\n    );\n\n    const emptyActivityList: DataModels.EmptyActivities.EmptyActivityList = await this.managementApiService.getEmptyActivitiesForProcessModel(\n      this.activeSolutionEntry.identity,\n      processModelId,\n    );\n\n    const userTasks: Array<TaskListEntry> = this.mapToTaskListEntry(userTaskList.userTasks, TaskType.UserTask);\n    const manualTasks: Array<TaskListEntry> = this.mapToTaskListEntry(manualTaskList.manualTasks, TaskType.ManualTask);\n    const emptyActivities: Array<TaskListEntry> = this.mapToTaskListEntry(\n      emptyActivityList.emptyActivities,\n      TaskType.EmptyActivity,\n    );\n\n    return [].concat(userTasks, manualTasks, emptyActivities);\n  }\n\n  private async getTasksForCorrelation(correlationId: string): Promise<Array<TaskListEntry>> {\n    const runningCorrelations: Array<\n      DataModels.Correlations.Correlation\n    > = await this.managementApiService.getActiveCorrelations(this.activeSolutionEntry.identity);\n\n    const correlation: DataModels.Correlations.Correlation = runningCorrelations.find(\n      (otherCorrelation: DataModels.Correlations.Correlation) => {\n        return otherCorrelation.id === correlationId;\n      },\n    );\n\n    const correlationWasNotFound: boolean = correlation === undefined;\n    if (correlationWasNotFound) {\n      throw new NotFoundError(`No correlation found with id ${correlationId}.`);\n    }\n\n    const userTaskList: DataModels.UserTasks.UserTaskList = await this.managementApiService.getUserTasksForCorrelation(\n      this.activeSolutionEntry.identity,\n      correlationId,\n    );\n\n    const manualTaskList: DataModels.ManualTasks.ManualTaskList = await this.managementApiService.getManualTasksForCorrelation(\n      this.activeSolutionEntry.identity,\n      correlationId,\n    );\n\n    const emptyActivityList: DataModels.EmptyActivities.EmptyActivityList = await this.managementApiService.getEmptyActivitiesForCorrelation(\n      this.activeSolutionEntry.identity,\n      correlationId,\n    );\n\n    const userTasks: Array<TaskListEntry> = this.mapToTaskListEntry(userTaskList.userTasks, TaskType.UserTask);\n\n    const manualTasks: Array<TaskListEntry> = this.mapToTaskListEntry(manualTaskList.manualTasks, TaskType.ManualTask);\n\n    const emptyActivities: Array<TaskListEntry> = this.mapToTaskListEntry(\n      emptyActivityList.emptyActivities,\n      TaskType.EmptyActivity,\n    );\n\n    return [].concat(userTasks, manualTasks, emptyActivities);\n  }\n\n  private async getTasksForProcessInstanceId(processInstanceId: string): Promise<Array<TaskListEntry>> {\n    const userTaskList: DataModels.UserTasks.UserTaskList = await this.managementApiService.getUserTasksForProcessInstance(\n      this.activeSolutionEntry.identity,\n      processInstanceId,\n    );\n\n    const manualTaskList: DataModels.ManualTasks.ManualTaskList = await this.managementApiService.getManualTasksForProcessInstance(\n      this.activeSolutionEntry.identity,\n      processInstanceId,\n    );\n\n    const emptyActivityList: DataModels.EmptyActivities.EmptyActivityList = await this.managementApiService.getEmptyActivitiesForProcessInstance(\n      this.activeSolutionEntry.identity,\n      processInstanceId,\n    );\n\n    const userTasksAndProcessModels: Array<TaskListEntry> = this.mapToTaskListEntry(\n      userTaskList.userTasks,\n      TaskType.UserTask,\n    );\n    const manualTasks: Array<TaskListEntry> = this.mapToTaskListEntry(manualTaskList.manualTasks, TaskType.ManualTask);\n    const emptyActivities: Array<TaskListEntry> = this.mapToTaskListEntry(\n      emptyActivityList.emptyActivities,\n      TaskType.EmptyActivity,\n    );\n\n    return [].concat(userTasksAndProcessModels, manualTasks, emptyActivities);\n  }\n\n  private mapToTaskListEntry(tasks: Array<TaskSource>, targetType: TaskType): Array<TaskListEntry> {\n    const mappedTasks: Array<TaskListEntry> = tasks.map(\n      (task: TaskSource): TaskListEntry => {\n        return {\n          correlationId: task.correlationId,\n          id: task.id,\n          flowNodeInstanceId: task.flowNodeInstanceId,\n          processInstanceId: task.processInstanceId,\n          processModelId: task.processModelId,\n          name: task.name,\n          // NOTE: Can't use instanceof or typeof, because the tasks were received as a plain JSON that does not have any type infos.\n          // TODO: Add type mapping to the Management API Client.\n          taskType: targetType,\n        };\n      },\n    );\n\n    return mappedTasks;\n  }\n\n  private async updateTasks(): Promise<void> {\n    try {\n      this.tasks = await this.getTasks();\n      this.initialLoadingFinished = true;\n    } catch (error) {\n      this.tasks = [];\n      this.initialLoadingFinished = true;\n\n      const errorIsForbiddenError: boolean = isError(error, ForbiddenError);\n      const errorIsUnauthorizedError: boolean = isError(error, UnauthorizedError);\n      const errorIsAuthenticationRelated: boolean = errorIsForbiddenError || errorIsUnauthorizedError;\n\n      if (!errorIsAuthenticationRelated) {\n        this.showError = true;\n      }\n    }\n\n    this.totalItems = this.tasks.length;\n  }\n}\n",".task-list__last-table-cell {\n  width: 1%;\n  white-space: nowrap;\n}\n\n.pagination {\n  padding-right: 0px;\n  justify-content: center;\n}\n\n.loading-spinner {\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 100px;\n}\n\n.task-list-container {\n  flex: 1;\n}\n\n.task-list-item-modelname:hover {\n  color: inherit;\n}\n\n.task-list-header {\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n\n.task-list-total-count {\n  float: right;\n}\n\n.task-list__no-tasks-text--error {\n  color: darkred;\n}\n",null,"import {IPayloadEntryValue} from './index';\n\nexport interface IPayloadEntry {\n  name?: string;\n  values: Array<IPayloadEntryValue>;\n}\n","export interface IPayloadEntryValue {\n  title?: string;\n  value: string;\n}\n","export interface IRawTokenEntry {\n  entryNr: number;\n  eventType: string;\n  createdAt: Date;\n  payload: string;\n}\n","import {IPayloadEntry} from './index';\n\nexport interface ITokenEntry {\n  entryNr: number;\n  eventType: string;\n  createdAt: Date;\n  payload: Array<IPayloadEntry>;\n}\n","import {IIdentity} from '@essential-projects/iam_contracts';\nimport {DataModels} from '@process-engine/management_api_contracts';\n\nexport interface ITokenViewerRepository {\n  getTokenForFlowNodeInstance(\n    processModelId: string,\n    correlationId: string,\n    flowNodeId: string,\n    identity: IIdentity,\n  ): Promise<Array<DataModels.TokenHistory.TokenHistoryEntry>>;\n  getTokenForFlowNodeByProcessInstanceId(\n    processInstanceId: string,\n    flowNodeId: string,\n    identity: IIdentity,\n  ): Promise<DataModels.TokenHistory.TokenHistoryGroup>;\n}\n","import {IIdentity} from '@essential-projects/iam_contracts';\nimport {DataModels} from '@process-engine/management_api_contracts';\n\nexport interface ITokenViewerService {\n  getTokenForFlowNodeInstance(\n    processModelId: string,\n    correlationId: string,\n    flowNodeId: string,\n    identity: IIdentity,\n  ): Promise<DataModels.TokenHistory.TokenHistoryGroup | undefined>;\n  getTokenForFlowNodeByProcessInstanceId(\n    processInstanceId: string,\n    flowNodeId: string,\n    identity: IIdentity,\n  ): Promise<DataModels.TokenHistory.TokenHistoryGroup | undefined>;\n}\n","export * from './IPayloadEntry';\nexport * from './IPayloadEntryValue';\nexport * from './IRawTokenEntry';\nexport * from './ITokenEntry';\nexport * from './ITokenViewerRepository';\nexport * from './ITokenViewerService';\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nimport {TokenViewerRepository} from './repository/token-viewer.repository';\nimport {TokenViewerService} from './service/token-viewer.service';\n\nexport function configure(config: FrameworkConfiguration): void {\n  config.container.registerSingleton('TokenViewerRepository', TokenViewerRepository);\n  config.container.registerSingleton('TokenViewerService', TokenViewerService);\n}\n","import {inject} from 'aurelia-framework';\n\nimport {IIdentity} from '@essential-projects/iam_contracts';\nimport {DataModels, IManagementApi} from '@process-engine/management_api_contracts';\n\nimport {ITokenViewerRepository} from '../contracts';\n\n@inject('ManagementApiClientService')\nexport class TokenViewerRepository implements ITokenViewerRepository {\n  private managementApiService: IManagementApi;\n\n  constructor(managementApiService: IManagementApi) {\n    this.managementApiService = managementApiService;\n  }\n\n  public async getTokenForFlowNodeInstance(\n    processModelId: string,\n    correlationId: string,\n    flowNodeId: string,\n    identity: IIdentity,\n  ): Promise<Array<DataModels.TokenHistory.TokenHistoryEntry>> {\n    return this.managementApiService.getTokensForFlowNode(identity, correlationId, processModelId, flowNodeId);\n  }\n\n  public async getTokenForFlowNodeByProcessInstanceId(\n    processInstanceId: string,\n    flowNodeId: string,\n    identity: IIdentity,\n  ): Promise<DataModels.TokenHistory.TokenHistoryGroup> {\n    return this.managementApiService.getTokensForFlowNodeByProcessInstanceId(identity, processInstanceId, flowNodeId);\n  }\n}\n","import {inject} from 'aurelia-framework';\n\nimport {IIdentity} from '@essential-projects/iam_contracts';\nimport {DataModels} from '@process-engine/management_api_contracts';\n\nimport {ITokenViewerRepository, ITokenViewerService} from '../contracts';\n\n@inject('TokenViewerRepository')\nexport class TokenViewerService implements ITokenViewerService {\n  private tokenViewerRepository: ITokenViewerRepository;\n\n  constructor(tokenViewerRepository: ITokenViewerRepository) {\n    this.tokenViewerRepository = tokenViewerRepository;\n  }\n\n  public async getTokenForFlowNodeInstance(\n    processModelId: string,\n    correlationId: string,\n    flowNodeId: string,\n    identity: IIdentity,\n  ): Promise<DataModels.TokenHistory.TokenHistoryGroup | undefined> {\n    try {\n      const tokenHistory: DataModels.TokenHistory.TokenHistoryGroup = {};\n      const tokenForFlowNodeInstance: Array<\n        DataModels.TokenHistory.TokenHistoryEntry\n      > = await this.tokenViewerRepository.getTokenForFlowNodeInstance(\n        processModelId,\n        correlationId,\n        flowNodeId,\n        identity,\n      );\n\n      tokenHistory[tokenForFlowNodeInstance[0].flowNodeId] = tokenForFlowNodeInstance;\n      return tokenHistory;\n    } catch (error) {\n      return undefined;\n    }\n  }\n\n  public async getTokenForFlowNodeByProcessInstanceId(\n    processInstanceId: string,\n    flowNodeId: string,\n    identity: IIdentity,\n  ): Promise<DataModels.TokenHistory.TokenHistoryGroup | undefined> {\n    try {\n      return await this.tokenViewerRepository.getTokenForFlowNodeByProcessInstanceId(\n        processInstanceId,\n        flowNodeId,\n        identity,\n      );\n    } catch (error) {\n      return undefined;\n    }\n  }\n}\n","import {bindable, inject} from 'aurelia-framework';\n\nimport {IShape} from '@process-engine/bpmn-elements_contracts';\nimport {DataModels} from '@process-engine/management_api_contracts';\n\nimport {IDiagram} from '@process-engine/solutionexplorer.contracts';\nimport {ISolutionEntry} from '../../../contracts';\nimport {IPayloadEntry, IPayloadEntryValue, IRawTokenEntry, ITokenEntry, ITokenViewerService} from './contracts/index';\n\n// tslint:disable: no-magic-numbers\n\nconst versionRegex: RegExp = /(\\d+)\\.(\\d+).(\\d+)/;\n\n@inject('TokenViewerService')\nexport class TokenViewer {\n  @bindable({changeHandler: 'processInstanceIdOrCorrelationChanged'})\n  public correlation: DataModels.Correlations.Correlation;\n\n  @bindable() public activeDiagram: IDiagram;\n  @bindable() public activeSolutionEntry: ISolutionEntry;\n  @bindable() public flowNode: IShape;\n  @bindable() public token: string;\n  @bindable() public showBeautifiedToken: boolean = true;\n  @bindable({changeHandler: 'processInstanceIdOrCorrelationChanged'}) public processInstanceId: string;\n\n  public tokenEntries: Array<ITokenEntry> = [];\n  public showTokenEntries: boolean = false;\n  public firstElementSelected: boolean = false;\n  public shouldShowFlowNodeId: boolean = false;\n  public rawTokenEntries: Array<IRawTokenEntry>;\n\n  private tokenViewerService: ITokenViewerService;\n  private getTokenHistoryGroup: Promise<DataModels.TokenHistory.TokenHistoryGroup>;\n\n  constructor(tokenViewerService: ITokenViewerService) {\n    this.tokenViewerService = tokenViewerService;\n  }\n\n  public processInstanceIdOrCorrelationChanged(): void {\n    const noFlowNodeSelected: boolean = this.flowNode === undefined;\n    if (noFlowNodeSelected) {\n      return;\n    }\n\n    const flowNodeIsSequenceFlow: boolean = this.flowNode.type === 'bpmn:SequenceFlow';\n    if (flowNodeIsSequenceFlow) {\n      this.shouldShowFlowNodeId = false;\n      this.showTokenEntries = false;\n      this.tokenEntries = [];\n      this.rawTokenEntries = [];\n\n      return;\n    }\n\n    this.updateFlowNode();\n  }\n\n  public flowNodeChanged(newFlowNode: IShape): Promise<void> {\n    const flowNodeCannotHaveTokenHistory: boolean =\n      newFlowNode.type === 'bpmn:Participant' ||\n      newFlowNode.type === 'bpmn:Collaboration' ||\n      newFlowNode.type === 'bpmn:Lane' ||\n      newFlowNode.type === 'bpmn:LaneSet' ||\n      newFlowNode.type === 'bpmn:SequenceFlow';\n\n    if (flowNodeCannotHaveTokenHistory) {\n      this.shouldShowFlowNodeId = false;\n      this.showTokenEntries = false;\n      this.tokenEntries = [];\n      this.rawTokenEntries = [];\n\n      return;\n    }\n\n    this.updateFlowNode();\n  }\n\n  private async updateFlowNode(): Promise<void> {\n    this.firstElementSelected = true;\n    this.tokenEntries = [];\n\n    if (this.processEngineSupportsFetchingTokensByProcessInstanceId()) {\n      const processInstanceIdIsUndefined: boolean = this.processInstanceId === undefined;\n      if (processInstanceIdIsUndefined) {\n        this.clearTokenViewer();\n\n        return;\n      }\n\n      this.getTokenHistoryGroup = this.tokenViewerService.getTokenForFlowNodeByProcessInstanceId(\n        this.processInstanceId,\n        this.flowNode.id,\n        this.activeSolutionEntry.identity,\n      );\n    } else {\n      const correlationIsUndefined: boolean = this.correlation === undefined;\n      if (correlationIsUndefined) {\n        this.clearTokenViewer();\n\n        return;\n      }\n\n      this.getTokenHistoryGroup = this.tokenViewerService.getTokenForFlowNodeInstance(\n        this.activeDiagram.id,\n        this.correlation.id,\n        this.flowNode.id,\n        this.activeSolutionEntry.identity,\n      );\n    }\n\n    const tokenHistoryGroup: DataModels.TokenHistory.TokenHistoryGroup = await this.getTokenHistoryGroup;\n\n    this.tokenEntries = this.getBeautifiedTokenEntriesForFlowNode(tokenHistoryGroup);\n    this.rawTokenEntries = this.getRawTokenEntriesForFlowNode(tokenHistoryGroup);\n\n    this.showTokenEntries = this.tokenEntries.length > 0;\n    this.shouldShowFlowNodeId = this.tokenEntries.length > 0;\n  }\n\n  private clearTokenViewer(): void {\n    this.tokenEntries = undefined;\n    this.rawTokenEntries = undefined;\n    this.showTokenEntries = false;\n    this.shouldShowFlowNodeId = false;\n  }\n\n  private processEngineSupportsFetchingTokensByProcessInstanceId(): boolean {\n    const processEngineVersion: string = this.activeSolutionEntry.processEngineVersion;\n\n    const noProcessEngineVersionSet: boolean = processEngineVersion === undefined;\n    if (noProcessEngineVersionSet) {\n      return false;\n    }\n\n    const regexResult: RegExpExecArray = versionRegex.exec(processEngineVersion);\n    const majorVersion: number = parseInt(regexResult[1]);\n    const minorVersion: number = parseInt(regexResult[2]);\n\n    // The version must be 8.1.0 or later\n    const processEngineSupportsEvents: boolean = majorVersion > 8 || (majorVersion === 8 && minorVersion >= 1);\n\n    return processEngineSupportsEvents;\n  }\n\n  private getRawTokenEntriesForFlowNode(\n    tokenHistoryGroup: DataModels.TokenHistory.TokenHistoryGroup,\n  ): Array<IRawTokenEntry> {\n    const tokenEntries: Array<IRawTokenEntry> = [];\n\n    const elementHasNoToken: boolean = tokenHistoryGroup === undefined;\n    if (elementHasNoToken) {\n      return [];\n    }\n\n    Object.entries(tokenHistoryGroup).forEach(\n      ([flowNodeId, tokenHistoryEntries]: [string, Array<DataModels.TokenHistory.TokenHistoryEntry>]) => {\n        tokenHistoryEntries.forEach((historyEntry: DataModels.TokenHistory.TokenHistoryEntry, index: number) => {\n          // tslint:disable-next-line no-magic-numbers\n          const payloadAsString: string = JSON.stringify(historyEntry.payload, null, 2);\n\n          const tokenEntry: IRawTokenEntry = {\n            entryNr: index,\n            eventType: historyEntry.tokenEventType,\n            createdAt: historyEntry.createdAt,\n            payload: payloadAsString,\n          };\n\n          tokenEntries.push(tokenEntry);\n        });\n      },\n    );\n\n    return tokenEntries;\n  }\n\n  private getBeautifiedTokenEntriesForFlowNode(\n    tokenHistoryGroup: DataModels.TokenHistory.TokenHistoryGroup,\n  ): Array<ITokenEntry> {\n    const tokenEntries: Array<ITokenEntry> = [];\n\n    const elementHasNoToken: boolean = tokenHistoryGroup === undefined;\n    if (elementHasNoToken) {\n      return [];\n    }\n\n    Object.entries(tokenHistoryGroup).forEach(\n      ([flowNodeId, tokenHistoryEntries]: [string, Array<DataModels.TokenHistory.TokenHistoryEntry>]) => {\n        tokenHistoryEntries.forEach((historyEntry: DataModels.TokenHistory.TokenHistoryEntry, index: number) => {\n          const historyEntryPayload: any = historyEntry.payload;\n\n          const historyEntryHasNoPayload: boolean = historyEntryPayload === undefined;\n          if (historyEntryHasNoPayload) {\n            return;\n          }\n\n          const tokenEntryPayload: Array<IPayloadEntry> = this.convertHistoryEntryPayloadToTokenEntryPayload(\n            historyEntryPayload,\n          );\n\n          const tokenEntry: ITokenEntry = {\n            entryNr: index,\n            eventType: historyEntry.tokenEventType,\n            createdAt: historyEntry.createdAt,\n            payload: tokenEntryPayload,\n          };\n\n          tokenEntries.push(tokenEntry);\n        });\n      },\n    );\n\n    return tokenEntries;\n  }\n\n  private convertHistoryEntryPayloadToTokenEntryPayload(tokenEntryPayload: any): Array<IPayloadEntry> {\n    const formattedTokenEntryPayload: Array<IPayloadEntry> = [];\n\n    const payloadIsNotAnObjectOrArray: boolean = typeof tokenEntryPayload !== 'object';\n    if (payloadIsNotAnObjectOrArray) {\n      const payloadEntry: IPayloadEntry = this.getPayloadEntryForNonObject(tokenEntryPayload);\n\n      formattedTokenEntryPayload.push(payloadEntry);\n    } else {\n      const payloadEntries: Array<IPayloadEntry> = this.getAllPayloadEntriesForObject(tokenEntryPayload);\n\n      formattedTokenEntryPayload.push(...payloadEntries);\n    }\n\n    return formattedTokenEntryPayload;\n  }\n\n  private getAllPayloadEntriesForObject(payload: any): Array<IPayloadEntry> {\n    const payloadEntries: Array<IPayloadEntry> = [];\n\n    const payloadEntryIndexes: Array<string> = Object.keys(payload);\n\n    for (const payloadIndex of payloadEntryIndexes) {\n      const currentLoad: any = payload[payloadIndex];\n\n      const payloadEntry: IPayloadEntry = this.getPayloadEntryForObject(currentLoad, payloadIndex);\n\n      payloadEntries.push(payloadEntry);\n    }\n\n    return payloadEntries;\n  }\n\n  private getPayloadEntryForObject(load: any, loadName: string): IPayloadEntry {\n    const payloadEntry: IPayloadEntry = {\n      name: loadName,\n      values: [],\n    };\n\n    const entryIsNotAnObject: boolean = typeof load !== 'object';\n    if (entryIsNotAnObject) {\n      const payloadEntryValues: Array<IPayloadEntryValue> = this.getPayloadEntryValuesForNonObject(load);\n\n      payloadEntry.values = payloadEntryValues;\n    } else {\n      const payloadEntryValues: Array<IPayloadEntryValue> = this.getPayloadEntryValuesForObject(load);\n\n      payloadEntry.values = payloadEntryValues;\n    }\n\n    return payloadEntry;\n  }\n\n  private getPayloadEntryValuesForObject(payload: any): Array<IPayloadEntryValue> {\n    const payloadEntryValues: Array<IPayloadEntryValue> = [];\n\n    const payloadIndexes: Array<string> = Object.keys(payload);\n\n    for (const entryIndex of payloadIndexes) {\n      // tslint:disable-next-line no-magic-numbers\n      const payloadEntryValue: string = JSON.stringify(payload[entryIndex], null, 2);\n\n      payloadEntryValues.push({\n        title: entryIndex,\n        value: payloadEntryValue,\n      });\n    }\n\n    return payloadEntryValues;\n  }\n\n  private getPayloadEntryForNonObject(payload: any): IPayloadEntry {\n    const payloadEntryValues: any = this.getPayloadEntryValuesForNonObject(payload);\n\n    const payloadEntry: IPayloadEntry = {\n      values: payloadEntryValues,\n    };\n\n    return payloadEntry;\n  }\n\n  private getPayloadEntryValuesForNonObject(payload: any): Array<IPayloadEntryValue> {\n    const payloadIsString: boolean = typeof payload === 'string';\n\n    const payloadEntryValue: string = payloadIsString ? `\"${payload}\"` : payload.toString();\n\n    const payloadEntryValues: Array<IPayloadEntryValue> = [{value: payloadEntryValue}];\n\n    return payloadEntryValues;\n  }\n}\n",".token-viewer {\n  position: relative;\n  height: 100%;\n  overflow: auto;\n  background: #f7f7f7;\n  border-left: 2px solid #ccc;\n}\n\n.token-viewer__headline {\n  padding-top: 10px;\n  padding-left: 10px;\n  border-bottom: 1px solid #ccc;\n  font-size: 14px;\n}\n\n.headline__node-id {\n  font-size: 14px;\n  font-weight: normal;\n}\n\n.token-viewer__empty-message {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 100%;\n  transform: translate(-50%, -50%);\n  user-select: none;\n  font-size: 20px;\n  font-weight: 900;\n  text-align: center;\n}\n\n.token-entry-container {\n  margin: 20px 5px;\n}\n\n.token-entry {\n  font-size: 14px;\n  font-weight: bold;\n}\n\n.payload__title {\n  margin-top: 5px;\n  text-decoration: underline;\n}\n\n.payload__name {\n  padding: 0;\n  background: none;\n  border: none;\n}\n\n.switch-container {\n  width: 100%;\n  padding: 10px;\n  margin-bottom: -20px;\n  cursor: default;\n  user-select: none;\n}\n\n.token-viewer-switch {\n  position: relative;\n  display: inline-block;\n  width: 30px;\n  height: 17px;\n  margin-bottom: 0;\n  vertical-align: text-bottom;\n}\n\n/*\n * Hide default HTML checkbox\n */\n.token-viewer-switch input {\n  display: none;\n}\n\n.token-viewer-switch--slider {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  cursor: pointer;\n  background-color: #ccc;\n  border-radius: 17px;\n  transition: .2s;\n  -webkit-transition: .2s;\n}\n\n.token-viewer-switch--slider:before {\n  position: absolute;\n  bottom: 2px;\n  left: 2px;\n  height: 13px;\n  width: 13px;\n  background-color: white;\n  border-radius: 50%;\n  content: \"\";\n  transition: .2s;\n  -webkit-transition: .2s;\n}\n\ninput:checked + .token-viewer-switch--slider {\n  background-color: #565656;\n}\n\ninput:checked + .token-viewer-switch--slider:before {\n  transform: translateX(13px);\n  -webkit-transform: translateX(13px);\n  -ms-transform: translateX(13px);\n}\n",null,"import {Subscription} from '@essential-projects/event_aggregator_contracts';\nimport {IIdentity} from '@essential-projects/iam_contracts';\nimport {DataModels} from '@process-engine/management_api_contracts';\n\nexport interface ILiveExecutionTrackerRepository {\n  finishEmptyActivity(\n    identity: IIdentity,\n    processInstanceId: string,\n    correlationId: string,\n    emptyActivity: DataModels.EmptyActivities.EmptyActivity,\n  ): Promise<void>;\n  terminateProcess(identity: IIdentity, processInstanceId: string): Promise<void>;\n\n  getActiveTokensForProcessInstance(\n    identity: IIdentity,\n    processInstanceId: string,\n  ): Promise<Array<DataModels.Kpi.ActiveToken> | null>;\n  getCorrelationById(identity: IIdentity, correlationId: string): Promise<DataModels.Correlations.Correlation>;\n  getEmptyActivitiesForProcessInstance(\n    identity: IIdentity,\n    processInstanceId: string,\n  ): Promise<DataModels.EmptyActivities.EmptyActivityList | null>;\n  getFlowNodeInstancesForProcessInstance(\n    identity: IIdentity,\n    processInstanceId: string,\n  ): Promise<Array<DataModels.FlowNodeInstances.FlowNodeInstance>>;\n  getProcessModelById(identity: IIdentity, processModelId: string): Promise<DataModels.ProcessModels.ProcessModel>;\n  getTokenHistoryGroupForProcessInstance(\n    identity: IIdentity,\n    processInstanceId: string,\n  ): Promise<DataModels.TokenHistory.TokenHistoryGroup | null>;\n\n  isProcessInstanceActive(identity: IIdentity, processInstanceId: string): Promise<boolean>;\n\n  createProcessEndedEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription>;\n  createProcessTerminatedEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription>;\n\n  createActivityReachedEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription>;\n  createActivityFinishedEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription>;\n  createEmptyActivityWaitingEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription>;\n  createEmptyActivityFinishedEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription>;\n  createManualTaskWaitingEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription>;\n  createManualTaskFinishedEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription>;\n  createUserTaskWaitingEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription>;\n  createUserTaskFinishedEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription>;\n  createBoundaryEventTriggeredEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription>;\n  createIntermediateThrowEventTriggeredEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription>;\n  createIntermediateCatchEventReachedEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription>;\n  createIntermediateCatchEventFinishedEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription>;\n\n  removeSubscription(identity: IIdentity, subscription: Subscription): Promise<void>;\n}\n","import {Subscription} from '@essential-projects/event_aggregator_contracts';\nimport {IIdentity} from '@essential-projects/iam_contracts';\nimport {IShape} from '@process-engine/bpmn-elements_contracts';\nimport {DataModels} from '@process-engine/management_api_contracts';\nimport {IElementRegistry} from '../../../contracts';\n\nexport interface ILiveExecutionTrackerService {\n  finishEmptyActivity(\n    identity: IIdentity,\n    processInstanceId: string,\n    correlationId: string,\n    emptyActivity: DataModels.EmptyActivities.EmptyActivity,\n  ): Promise<void>;\n  terminateProcess(identity: IIdentity, processInstanceId: string): Promise<void>;\n\n  getActiveTokensForProcessInstance(\n    identity: IIdentity,\n    processInstanceId: string,\n  ): Promise<Array<DataModels.Kpi.ActiveToken> | null>;\n  getCorrelationById(identity: IIdentity, correlationId: string): Promise<DataModels.Correlations.Correlation>;\n  getEmptyActivitiesForProcessInstance(\n    identity: IIdentity,\n    processInstanceId: string,\n  ): Promise<DataModels.EmptyActivities.EmptyActivityList | null>;\n  getProcessModelByProcessInstanceId(\n    identity: IIdentity,\n    correlationId: string,\n    processInstanceId: string,\n  ): Promise<DataModels.Correlations.CorrelationProcessInstance>;\n  getProcessModelById(identity: IIdentity, processModelId: string): Promise<DataModels.ProcessModels.ProcessModel>;\n  getTokenHistoryGroupForProcessInstance(\n    identity: IIdentity,\n    processInstanceId: string,\n  ): Promise<DataModels.TokenHistory.TokenHistoryGroup | null>;\n\n  getProcessInstanceIdOfCallActivityTarget(\n    identity: IIdentity,\n    correlationId: string,\n    processInstanceIdOfOrigin: string,\n    callActivityTargetId: string,\n  ): Promise<string>;\n  getElementsWithActiveToken(\n    identity: IIdentity,\n    processInstanceId: string,\n    elementRegistry: IElementRegistry,\n  ): Promise<Array<IShape> | null>;\n  getElementsWithTokenHistory(\n    identity: IIdentity,\n    processInstanceId: string,\n    elementRegistry: IElementRegistry,\n  ): Promise<Array<IShape> | null>;\n  getElementsWithError(\n    identity: IIdentity,\n    processInstanceId: string,\n    elementRegistry: IElementRegistry,\n  ): Promise<Array<IShape>>;\n  getActiveCallActivities(\n    identity: IIdentity,\n    processInstanceId: string,\n    elementRegistry: IElementRegistry,\n  ): Promise<Array<IShape>>;\n  getInactiveCallActivities(\n    identity: IIdentity,\n    processInstanceId: string,\n    elementRegistry: IElementRegistry,\n  ): Promise<Array<IShape>>;\n\n  elementHasActiveToken(elementId: string, activeTokens: Array<DataModels.Kpi.ActiveToken>): boolean;\n  elementHasTokenHistory(elementId: string, tokenHistoryGroups: DataModels.TokenHistory.TokenHistoryGroup): boolean;\n\n  clearDiagramColors(xml: string): Promise<string>;\n  getColorizedDiagram(\n    identity: IIdentity,\n    xml: string,\n    processInstanceId: string,\n    processEngineSupportsGettingFlowNodeInstances?: boolean,\n  ): Promise<string>;\n\n  isProcessInstanceActive(identity: IIdentity, processInstanceId: string): Promise<boolean>;\n\n  createProcessEndedEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription>;\n  createProcessTerminatedEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription>;\n\n  createActivityReachedEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription>;\n  createActivityFinishedEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription>;\n  createEmptyActivityWaitingEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription>;\n  createEmptyActivityFinishedEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription>;\n  createManualTaskWaitingEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription>;\n  createManualTaskFinishedEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription>;\n  createUserTaskWaitingEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription>;\n  createUserTaskFinishedEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription>;\n  createBoundaryEventTriggeredEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription>;\n  createIntermediateThrowEventTriggeredEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription>;\n  createIntermediateCatchEventReachedEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription>;\n  createIntermediateCatchEventFinishedEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription>;\n\n  removeSubscription(identity: IIdentity, subscription: Subscription): Promise<void>;\n}\n","export enum RequestError {\n  ConnectionLost = 'connectionLost',\n  OtherError = 'otherError',\n}\n","export * from './ILiveExecutionTracker.Repository';\nexport * from './ILiveExecutionTracker.Service';\nexport * from './constants';\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nimport {LiveExecutionTrackerRepository} from './repositories/live-execution-tracker.repository';\nimport {LiveExecutionTrackerService} from './services/live-execution-tracker.service';\n\nexport function configure(config: FrameworkConfiguration): void {\n  config.container.registerSingleton('LiveExecutionTrackerRepository', LiveExecutionTrackerRepository);\n  config.container.registerSingleton('LiveExecutionTrackerService', LiveExecutionTrackerService);\n}\n","/* eslint-disable max-lines */\n/* eslint-disable 6river/new-cap */\nimport {computedFrom, inject, observable} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\n\nimport * as bundle from '@process-engine/bpmn-js-custom-bundle';\n\nimport {DataModels} from '@process-engine/management_api_contracts';\n\nimport {Subscription} from '@essential-projects/event_aggregator_contracts';\nimport {IShape} from '@process-engine/bpmn-elements_contracts';\nimport {IDiagram} from '@process-engine/solutionexplorer.contracts';\n\nimport {\n  IBpmnModeler,\n  IBpmnXmlSaveOptions,\n  ICanvas,\n  IElementRegistry,\n  IEvent,\n  IEventFunction,\n  IOverlay,\n  IOverlayManager,\n  IOverlays,\n  ISolutionEntry,\n  ISolutionService,\n  InspectPanelTab,\n  NotificationType,\n} from '../../contracts/index';\n\nimport environment from '../../environment';\nimport {NotificationService} from '../../services/notification-service/notification.service';\nimport {TaskDynamicUi} from '../task-dynamic-ui/task-dynamic-ui';\nimport {ILiveExecutionTrackerService, RequestError} from './contracts/index';\n\ntype RouteParameters = {\n  diagramName: string;\n  solutionUri: string;\n  correlationId: string;\n  processInstanceId: string;\n  taskId?: string;\n};\n\nconst versionRegex: RegExp = /(\\d+)\\.(\\d+).(\\d+)/;\n\n// tslint:disable: no-magic-numbers\n@inject(Router, 'NotificationService', 'SolutionService', 'LiveExecutionTrackerService')\nexport class LiveExecutionTracker {\n  public canvasModel: HTMLElement;\n  public previewCanvasModel: HTMLElement;\n  public showDynamicUiModal: boolean = false;\n  public showDiagramPreviewViewer: boolean = false;\n  public nameOfDiagramToPreview: string;\n  public dynamicUi: TaskDynamicUi;\n  public liveExecutionTracker: LiveExecutionTracker = this;\n  public modalStyleString: string = 'position: relative; top: 20%; bottom: 20%; width: 400px; height: 60%;';\n  public contentStyleString: string = 'height: auto;';\n\n  @observable public tokenViewerWidth: number = 250;\n  public tokenViewer: HTMLElement;\n  public tokenViewerResizeDiv: HTMLElement;\n  public showTokenViewer: boolean = false;\n\n  @observable public activeSolutionEntry: ISolutionEntry;\n  public activeDiagram: IDiagram;\n  public selectedFlowNode: IShape;\n  public correlation: DataModels.Correlations.Correlation;\n\n  public correlationId: string;\n  public processModelId: string;\n  public processInstanceId: string;\n  public taskId: string;\n\n  private diagramViewer: IBpmnModeler;\n  private diagramPreviewViewer: IBpmnModeler;\n  private elementRegistry: IElementRegistry;\n  private viewerCanvas: ICanvas;\n  private overlays: IOverlayManager;\n\n  private router: Router;\n  private notificationService: NotificationService;\n  private solutionService: ISolutionService;\n\n  private xml: string;\n\n  private processStopped: boolean = false;\n  private isAttached: boolean = false;\n  private parentProcessInstanceId: string;\n  private parentProcessModelId: string;\n  private activeCallActivities: Array<IShape> = [];\n  private pollingTimer: NodeJS.Timer;\n  private isColorizing: boolean = false;\n  private colorizeAgain: boolean = false;\n\n  private eventListenerSubscriptions: Array<Subscription> = [];\n  private overlaysWithEventListeners: Array<string> = [];\n\n  private liveExecutionTrackerService: ILiveExecutionTrackerService;\n\n  constructor(\n    router: Router,\n    notificationService: NotificationService,\n    solutionService: ISolutionService,\n    liveExecutionTrackerService: ILiveExecutionTrackerService,\n  ) {\n    this.router = router;\n    this.notificationService = notificationService;\n    this.solutionService = solutionService;\n    this.liveExecutionTrackerService = liveExecutionTrackerService;\n  }\n\n  public async activate(routeParameters: RouteParameters): Promise<void> {\n    this.correlationId = routeParameters.correlationId;\n    this.processModelId = routeParameters.diagramName;\n\n    this.activeSolutionEntry = await this.solutionService.getSolutionEntryForUri(routeParameters.solutionUri);\n    this.activeSolutionEntry.service.openSolution(routeParameters.solutionUri, this.activeSolutionEntry.identity);\n\n    this.processInstanceId = routeParameters.processInstanceId;\n\n    this.parentProcessInstanceId = await this.getParentProcessInstanceId();\n    this.parentProcessModelId = await this.getParentProcessModelId();\n\n    this.correlation = await this.liveExecutionTrackerService.getCorrelationById(\n      this.activeSolutionEntry.identity,\n      this.correlationId,\n    );\n\n    // This is needed to make sure the SolutionExplorerService is completely initiated\n    setTimeout(async () => {\n      this.activeDiagram = await this.activeSolutionEntry.service.loadDiagram(this.processModelId);\n\n      const routeParameterContainsTaskId: boolean = routeParameters.taskId !== undefined;\n      if (routeParameterContainsTaskId) {\n        this.taskId = routeParameters.taskId;\n\n        const emptyActivitiesInProcessInstance: DataModels.EmptyActivities.EmptyActivityList = await this.liveExecutionTrackerService.getEmptyActivitiesForProcessInstance(\n          this.activeSolutionEntry.identity,\n          this.processInstanceId,\n        );\n\n        const emptyActivity: DataModels.EmptyActivities.EmptyActivity = emptyActivitiesInProcessInstance.emptyActivities.find(\n          (activity: DataModels.EmptyActivities.EmptyActivity) => {\n            return activity.id === this.taskId;\n          },\n        );\n\n        if (emptyActivity) {\n          this.liveExecutionTrackerService.finishEmptyActivity(\n            this.activeSolutionEntry.identity,\n            this.processInstanceId,\n            this.correlationId,\n            emptyActivity,\n          );\n        } else {\n          this.showDynamicUiModal = true;\n        }\n      }\n    }, 0);\n  }\n\n  public async attached(): Promise<void> {\n    this.isAttached = true;\n\n    // Create Viewer\n    this.diagramViewer = new bundle.viewer({\n      additionalModules: [bundle.ZoomScrollModule, bundle.MoveCanvasModule, bundle.MiniMap],\n    });\n\n    this.elementRegistry = this.diagramViewer.get('elementRegistry');\n\n    this.diagramPreviewViewer = new bundle.viewer({\n      additionalModules: [bundle.ZoomScrollModule, bundle.MoveCanvasModule, bundle.MiniMap],\n    });\n\n    this.viewerCanvas = this.diagramViewer.get('canvas');\n    this.overlays = this.diagramViewer.get('overlays');\n\n    const fitViewportForDiagramViewerOnce: Function = (): void => {\n      this.diagramViewer.off('import.done', fitViewportForDiagramViewerOnce);\n      this.viewerCanvas.zoom('fit-viewport', 'auto');\n    };\n    this.diagramViewer.on('import.done', fitViewportForDiagramViewerOnce);\n    this.diagramViewer.attachTo(this.canvasModel);\n\n    this.diagramViewer.on('element.click', this.elementClickHandler);\n\n    // Prepare modeler\n    const xml: string = await this.getXml();\n\n    const couldNotGetXml: boolean = xml === undefined;\n    if (couldNotGetXml) {\n      return;\n    }\n\n    // Colorize xml & Add overlays\n    /*\n     * Remove all colors if the diagram has already colored elements.\n     * For example, if the user has some elements colored orange and is running\n     * the diagram, one would think in LiveExecutionTracker that the element is\n     * active although it is not active.\n     */\n    const uncoloredXml: string = await this.liveExecutionTrackerService.clearDiagramColors(xml);\n    this.xml = uncoloredXml;\n\n    await this.importXmlIntoDiagramViewer(uncoloredXml);\n\n    // The version must be later than 8.1.0\n    const processEngineSupportsEvents: boolean = this.checkIfProcessEngineSupportsEvents();\n    if (processEngineSupportsEvents) {\n      // Create Backend EventListeners\n      this.eventListenerSubscriptions = await this.createBackendEventListeners();\n    }\n\n    await this.handleElementColorization();\n\n    // Use polling if events are not supported\n    const processsEngineDoesNotSupportEvents: boolean = !processEngineSupportsEvents;\n    if (processsEngineDoesNotSupportEvents) {\n      this.startPolling();\n    }\n\n    // Add EventListener for Resizing\n    this.tokenViewerResizeDiv.addEventListener('mousedown', (mouseDownEvent: Event) => {\n      const windowEvent: Event = mouseDownEvent || window.event;\n      windowEvent.cancelBubble = true;\n\n      const mousemoveFunction: IEventFunction = (mouseMoveEvent: MouseEvent): void => {\n        this.resizeTokenViewer(mouseMoveEvent);\n        document.getSelection().empty();\n      };\n\n      const mouseUpFunction: IEventFunction = (): void => {\n        document.removeEventListener('mousemove', mousemoveFunction);\n        document.removeEventListener('mouseup', mouseUpFunction);\n      };\n\n      document.addEventListener('mousemove', mousemoveFunction);\n      document.addEventListener('mouseup', mouseUpFunction);\n    });\n\n    const previousTokenViewerState: boolean = JSON.parse(window.localStorage.getItem('tokenViewerLETCollapseState'));\n    this.showTokenViewer = previousTokenViewerState || false;\n  }\n\n  public async detached(): Promise<void> {\n    this.isAttached = false;\n\n    this.stopPolling();\n\n    this.diagramViewer.clear();\n    this.diagramViewer.detach();\n    this.diagramViewer.destroy();\n\n    this.diagramPreviewViewer.destroy();\n\n    const removeSubscriptionPromises: Array<Promise<void>> = [];\n    this.eventListenerSubscriptions.forEach((subscription: Subscription) => {\n      const removingPromise: Promise<void> = this.liveExecutionTrackerService.removeSubscription(\n        this.activeSolutionEntry.identity,\n        subscription,\n      );\n\n      removeSubscriptionPromises.push(removingPromise);\n    });\n\n    await Promise.all(removeSubscriptionPromises);\n    this.eventListenerSubscriptions = [];\n  }\n\n  public determineActivationStrategy(): string {\n    return 'replace';\n  }\n\n  @computedFrom('processStopped')\n  public get processIsActive(): boolean {\n    return !this.processStopped;\n  }\n\n  @computedFrom('previousProcessModels.length')\n  public get hasPreviousProcess(): boolean {\n    return this.parentProcessModelId !== undefined;\n  }\n\n  public navigateBackToPreviousProcess(): void {\n    this.router.navigateToRoute('live-execution-tracker', {\n      correlationId: this.correlationId,\n      diagramName: this.parentProcessModelId,\n      solutionUri: this.activeSolutionEntry.uri,\n      processInstanceId: this.parentProcessInstanceId,\n    });\n  }\n\n  public closeDynamicUiModal(): void {\n    this.showDynamicUiModal = false;\n\n    this.dynamicUi.clearTasks();\n  }\n\n  public closeDiagramPreview(): void {\n    this.showDiagramPreviewViewer = false;\n\n    this.diagramPreviewViewer.clear();\n    this.diagramPreviewViewer.detach();\n  }\n\n  public toggleShowTokenViewer(): void {\n    this.showTokenViewer = !this.showTokenViewer;\n    window.localStorage.setItem('tokenViewerLETCollapseState', JSON.stringify(this.showTokenViewer));\n  }\n\n  public async stopProcessInstance(): Promise<void> {\n    this.liveExecutionTrackerService.terminateProcess(this.activeSolutionEntry.identity, this.processInstanceId);\n\n    this.startPolling();\n  }\n\n  private checkIfProcessEngineSupportsEvents(): boolean {\n    const processEngineVersion: string = this.activeSolutionEntry.processEngineVersion;\n\n    const noProcessEngineVersionSet: boolean = processEngineVersion === undefined;\n    if (noProcessEngineVersionSet) {\n      return false;\n    }\n\n    const regexResult: RegExpExecArray = versionRegex.exec(processEngineVersion);\n    const majorVersion: number = parseInt(regexResult[1]);\n    const minorVersion: number = parseInt(regexResult[2]);\n\n    // The version must be 8.3.0 or later\n    const processEngineSupportsEvents: boolean = majorVersion > 8 || (majorVersion === 8 && minorVersion >= 3);\n\n    return processEngineSupportsEvents;\n  }\n\n  private checkIfProcessEngineSupportsGettingFlowNodeInstances(): boolean {\n    const processEngineVersion: string = this.activeSolutionEntry.processEngineVersion;\n\n    const noProcessEngineVersionSet: boolean = processEngineVersion === undefined;\n    if (noProcessEngineVersionSet) {\n      return false;\n    }\n\n    const regexResult: RegExpExecArray = versionRegex.exec(processEngineVersion);\n    const majorVersion: number = parseInt(regexResult[1]);\n    const minorVersion: number = parseInt(regexResult[2]);\n\n    // The version must be 8.3.0 or later\n    const processEngineSupportsEvents: boolean = majorVersion > 8 || (majorVersion === 8 && minorVersion >= 3);\n\n    return processEngineSupportsEvents;\n  }\n\n  private async getParentProcessModelId(): Promise<string> {\n    const parentProcessInstanceIdNotFound: boolean = this.parentProcessInstanceId === undefined;\n    if (parentProcessInstanceIdNotFound) {\n      return undefined;\n    }\n\n    const parentProcessModel: DataModels.Correlations.CorrelationProcessInstance = await this.liveExecutionTrackerService.getProcessModelByProcessInstanceId(\n      this.activeSolutionEntry.identity,\n      this.correlationId,\n      this.parentProcessInstanceId,\n    );\n\n    const parentProcessModelNotFound: boolean = parentProcessModel === undefined;\n    if (parentProcessModelNotFound) {\n      return undefined;\n    }\n\n    return parentProcessModel.processModelId;\n  }\n\n  private async addOverlays(): Promise<void> {\n    const elementsWithError: Array<IShape> = await this.liveExecutionTrackerService.getElementsWithError(\n      this.activeSolutionEntry.identity,\n      this.processInstanceId,\n      this.elementRegistry,\n    );\n    const elementsWithActiveToken: Array<IShape> = await this.liveExecutionTrackerService.getElementsWithActiveToken(\n      this.activeSolutionEntry.identity,\n      this.processInstanceId,\n      this.elementRegistry,\n    );\n    const inactiveCallActivities: Array<IShape> = await this.liveExecutionTrackerService.getInactiveCallActivities(\n      this.activeSolutionEntry.identity,\n      this.processInstanceId,\n      this.elementRegistry,\n    );\n\n    this.removeEventListenerFromOverlays();\n    this.overlays.clear();\n\n    const userAndManualTaskOverlays: Array<string> = this.addOverlaysToUserAndManualTasks(elementsWithActiveToken);\n    const emptyActivityOverlays: Array<string> = this.addOverlaysToEmptyActivities(elementsWithActiveToken);\n    const activeCallActivityOverlays: Array<string> = this.addOverlaysToActiveCallActivities(elementsWithActiveToken);\n    const inactiveCallActivityOverlays: Array<string> = this.addOverlaysToInactiveCallActivities(\n      inactiveCallActivities,\n    );\n    const errorElementOverlays: Array<string> = this.addOverlaysToElementsWithError(elementsWithError);\n\n    const elementsWithOverlays: Array<string> = [\n      ...userAndManualTaskOverlays,\n      ...emptyActivityOverlays,\n      ...activeCallActivityOverlays,\n      ...inactiveCallActivityOverlays,\n      ...errorElementOverlays,\n    ];\n\n    this.rearrangeOverlaysForElementWithMultipleOverlays(elementsWithOverlays);\n  }\n\n  private removeEventListenerFromOverlays(): void {\n    for (const overlayId of this.overlaysWithEventListeners) {\n      this.removeEventListenerFromOverlay(overlayId);\n    }\n\n    this.overlaysWithEventListeners = [];\n  }\n\n  private addEventListenerToOverlay(overlayHtmlId: string): void {\n    const functionToAdd: EventListenerOrEventListenerObject = this.getEventListenerForOverlayId(overlayHtmlId);\n\n    document.getElementById(overlayHtmlId).addEventListener('click', functionToAdd);\n\n    this.overlaysWithEventListeners.push(overlayHtmlId);\n  }\n\n  private removeEventListenerFromOverlay(overlayHtmlId: string): void {\n    const functionToRemove: EventListenerOrEventListenerObject = this.getEventListenerForOverlayId(overlayHtmlId);\n\n    const elementWithEventListener: HTMLElement = document.getElementById(overlayHtmlId);\n\n    const elementIsAlreadyRemoved: boolean = elementWithEventListener === null;\n    if (elementIsAlreadyRemoved) {\n      this.overlaysWithEventListeners.splice(this.overlaysWithEventListeners.indexOf(overlayHtmlId), 1);\n\n      return;\n    }\n\n    elementWithEventListener.removeEventListener('click', functionToRemove);\n\n    this.overlaysWithEventListeners.splice(this.overlaysWithEventListeners.indexOf(overlayHtmlId), 1);\n  }\n\n  private getEventListenerForOverlayId(overlayHtmlId: string): EventListenerOrEventListenerObject {\n    if (overlayHtmlId.endsWith('manual-user-task')) {\n      return this.handleTaskClick;\n    }\n    if (overlayHtmlId.endsWith('empty-activity')) {\n      return this.handleEmptyActivityClick;\n    }\n    if (overlayHtmlId.endsWith('active-call-activity')) {\n      return this.handleActiveCallActivityClick;\n    }\n    if (overlayHtmlId.endsWith('error-element')) {\n      return this.handleErrorElementClick;\n    }\n    if (overlayHtmlId.endsWith('inactive-call-activity')) {\n      return this.handleInactiveCallActivityClick;\n    }\n\n    return undefined;\n  }\n\n  private addOverlaysToElementsWithError(elementsWithError: Array<IShape>): Array<string> {\n    const liveExecutionTrackerIsNotAttached: boolean = !this.isAttached;\n    if (liveExecutionTrackerIsNotAttached) {\n      return [];\n    }\n\n    const errorElementIds: Array<string> = elementsWithError.map((element: IShape) => element.id).sort();\n\n    for (const element of elementsWithError) {\n      const overlayHtmlId: string = `${element.id}#error-element`;\n\n      this.overlays.add(element, {\n        position: {\n          left: 30,\n          top: 25,\n        },\n        html: `<div class=\"let__overlay-button\" id=\"${overlayHtmlId}\" title=\"Open process instance in Inspect Correlation.\"><i class=\"fas fa-bug let__overlay-button-icon overlay__error-element\"></i></div>`,\n      });\n\n      this.addEventListenerToOverlay(overlayHtmlId);\n    }\n\n    return errorElementIds;\n  }\n\n  private rearrangeOverlaysForElementWithMultipleOverlays(elementsWithOverlays: Array<string>): void {\n    const elementsWithMultipleOverlays: Array<string> = elementsWithOverlays.filter(\n      (element, index, elementArray: Array<string>) => {\n        return elementArray.indexOf(element) === index && elementArray.lastIndexOf(element) !== index;\n      },\n    );\n\n    for (const element of elementsWithMultipleOverlays) {\n      const elementOverlays: Array<IOverlay> = this.elementOverlays(element);\n\n      elementOverlays.forEach((overlay: IOverlay, index: number) => {\n        const overlayHtmlId: string = /id=\"(.*?)\"/g.exec(overlay.html)[1];\n\n        this.removeEventListenerFromOverlay(overlayHtmlId);\n        this.overlays.remove(overlay.id);\n\n        overlay.position.left = 10 + 40 * index;\n\n        this.overlays.add(element, overlay);\n        this.addEventListenerToOverlay(overlayHtmlId);\n      });\n    }\n  }\n\n  private elementOverlays(elementId: string): Array<IOverlay> {\n    const overlaysForElement: Array<IOverlay> = [];\n\n    // eslint-disable-next-line no-underscore-dangle\n    const overlays: IOverlays = this.overlays._overlays;\n    const overlayIds: Array<string> = Object.keys(overlays);\n    for (const overlayId of overlayIds) {\n      const currentOverlay: IOverlay = overlays[overlayId];\n\n      const isOverlayOfElement: boolean = currentOverlay.element.id === elementId;\n\n      if (isOverlayOfElement) {\n        overlaysForElement.push(currentOverlay);\n      }\n    }\n\n    return overlaysForElement;\n  }\n\n  private handleErrorElementClick: (event: MouseEvent) => void = (event: MouseEvent): void => {\n    const overlayHtmlId: string = (event.target as HTMLDivElement).id;\n    const elementId: string = this.getElementIdByOverlayHtmlId(overlayHtmlId);\n\n    this.router.navigateToRoute('inspect', {\n      view: 'inspect-correlation',\n      diagramName: this.activeDiagram.name,\n      solutionUri: this.activeSolutionEntry.uri,\n      processInstanceToSelect: this.processInstanceId,\n      flowNodeToSelect: elementId,\n      inspectPanelTabToShow: InspectPanelTab.LogViewer,\n    });\n  };\n\n  private addOverlaysToEmptyActivities(elements: Array<IShape>): Array<string> {\n    const liveExecutionTrackerIsNotAttached: boolean = !this.isAttached;\n    if (liveExecutionTrackerIsNotAttached) {\n      return [];\n    }\n\n    const activeEmptyActivities: Array<IShape> = elements.filter((element: IShape) => {\n      const elementIsEmptyActivity: boolean = element.type === 'bpmn:Task';\n\n      return elementIsEmptyActivity;\n    });\n\n    const activeEmptyActivitiesIds: Array<string> = activeEmptyActivities.map((element: IShape) => element.id).sort();\n\n    for (const element of activeEmptyActivities) {\n      const overlayHtmlId: string = `${element.id}#empty-activity`;\n\n      this.overlays.add(element, {\n        position: {\n          left: 30,\n          top: 25,\n        },\n        html: `<div class=\"let__overlay-button\" id=\"${overlayHtmlId}\" title=\"Continue empty activity.\"><i class=\"fas fa-play let__overlay-button-icon overlay__empty-task\"></i></div>`,\n      });\n\n      this.addEventListenerToOverlay(overlayHtmlId);\n    }\n\n    return activeEmptyActivitiesIds;\n  }\n\n  private addOverlaysToUserAndManualTasks(elements: Array<IShape>): Array<string> {\n    const liveExecutionTrackerIsNotAttached: boolean = !this.isAttached;\n    if (liveExecutionTrackerIsNotAttached) {\n      return [];\n    }\n\n    const activeManualAndUserTasks: Array<IShape> = elements.filter((element: IShape) => {\n      const elementIsAUserOrManualTask: boolean =\n        element.type === 'bpmn:UserTask' || element.type === 'bpmn:ManualTask';\n\n      return elementIsAUserOrManualTask;\n    });\n\n    const activeManualAndUserTaskIds: Array<string> = activeManualAndUserTasks\n      .map((element: IShape) => element.id)\n      .sort();\n\n    for (const element of activeManualAndUserTasks) {\n      const overlayHtmlId: string = `${element.id}#manual-user-task`;\n\n      this.overlays.add(element, {\n        position: {\n          left: 30,\n          top: 25,\n        },\n        html: `<div class=\"let__overlay-button\" id=\"${overlayHtmlId}\" title=\"Continue task.\"><i class=\"fas fa-play let__overlay-button-icon\"></i></div>`,\n      });\n\n      this.addEventListenerToOverlay(overlayHtmlId);\n    }\n\n    return activeManualAndUserTaskIds;\n  }\n\n  private addOverlaysToInactiveCallActivities(inactiveCallActivities: Array<IShape>): Array<string> {\n    const liveExecutionTrackerIsNotAttached: boolean = !this.isAttached;\n    if (liveExecutionTrackerIsNotAttached) {\n      return [];\n    }\n\n    const callActivityIds: Array<string> = inactiveCallActivities.map((element: IShape) => element.id).sort();\n\n    for (const element of inactiveCallActivities) {\n      const overlayHtmlId: string = `${element.id}#inactive-call-activity`;\n\n      this.overlays.add(element, {\n        position: {\n          left: 30,\n          top: 25,\n        },\n        html: `<div class=\"let__overlay-button\" id=\"${overlayHtmlId}\" title=\"Show target process.\"><i class=\"fas fa-search let__overlay-button-icon\"></i></div>`,\n      });\n\n      this.addEventListenerToOverlay(overlayHtmlId);\n    }\n\n    return callActivityIds;\n  }\n\n  private addOverlaysToActiveCallActivities(activeElements: Array<IShape>): Array<string> {\n    const liveExecutionTrackerIsNotAttached: boolean = !this.isAttached;\n    if (liveExecutionTrackerIsNotAttached) {\n      return [];\n    }\n\n    const activeCallActivities: Array<IShape> = activeElements.filter((element: IShape) => {\n      const elementIsCallActivity: boolean = element.type === 'bpmn:CallActivity';\n\n      return elementIsCallActivity;\n    });\n\n    const activeCallActivityIds: Array<string> = activeCallActivities.map((element: IShape) => element.id).sort();\n\n    this.activeCallActivities = activeCallActivities;\n\n    for (const element of activeCallActivities) {\n      const overlayHtmlId: string = `${element.id}#active-call-activity`;\n\n      this.overlays.add(element, {\n        position: {\n          left: 30,\n          top: 25,\n        },\n        html: `<div class=\"let__overlay-button\" id=\"${overlayHtmlId}\" title=\"Show target process.\"><i class=\"fas fa-external-link-square-alt let__overlay-button-icon\"></i></div>`,\n      });\n\n      this.addEventListenerToOverlay(overlayHtmlId);\n    }\n\n    return activeCallActivityIds;\n  }\n\n  private handleTaskClick: (event: MouseEvent) => void = (event: MouseEvent): void => {\n    const overlayHtmlId: string = (event.target as HTMLDivElement).id;\n    const elementId: string = this.getElementIdByOverlayHtmlId(overlayHtmlId);\n\n    this.taskId = elementId;\n    this.showDynamicUiModal = true;\n  };\n\n  private handleEmptyActivityClick: (event: MouseEvent) => void = async (event: MouseEvent): Promise<void> => {\n    const overlayHtmlId: string = (event.target as HTMLDivElement).id;\n    const elementId: string = this.getElementIdByOverlayHtmlId(overlayHtmlId);\n\n    this.taskId = elementId;\n\n    const emptyActivitiesInProcessInstance: DataModels.EmptyActivities.EmptyActivityList = await this.liveExecutionTrackerService.getEmptyActivitiesForProcessInstance(\n      this.activeSolutionEntry.identity,\n      this.processInstanceId,\n    );\n\n    const emptyActivity: DataModels.EmptyActivities.EmptyActivity = emptyActivitiesInProcessInstance.emptyActivities.find(\n      (activity: DataModels.EmptyActivities.EmptyActivity) => {\n        return activity.id === this.taskId;\n      },\n    );\n\n    this.liveExecutionTrackerService.finishEmptyActivity(\n      this.activeSolutionEntry.identity,\n      this.processInstanceId,\n      this.correlationId,\n      emptyActivity,\n    );\n  };\n\n  private handleActiveCallActivityClick: (event: MouseEvent) => Promise<void> = async (\n    event: MouseEvent,\n  ): Promise<void> => {\n    const overlayHtmlId: string = (event.target as HTMLDivElement).id;\n    const elementId: string = this.getElementIdByOverlayHtmlId(overlayHtmlId);\n    const element: IShape = this.elementRegistry.get(elementId);\n\n    const callActivityTargetProcess: string = element.businessObject.calledElement;\n\n    const callAcitivityHasNoTargetProcess: boolean = callActivityTargetProcess === undefined;\n    if (callAcitivityHasNoTargetProcess) {\n      const noTargetMessage: string =\n        'The CallActivity has no target configured. Please configure a target in the designer.';\n\n      this.notificationService.showNotification(NotificationType.INFO, noTargetMessage);\n    }\n\n    const targetProcessInstanceId: string = await this.liveExecutionTrackerService.getProcessInstanceIdOfCallActivityTarget(\n      this.activeSolutionEntry.identity,\n      this.correlationId,\n      this.processInstanceId,\n      callActivityTargetProcess,\n    );\n\n    const errorGettingTargetProcessInstanceId: boolean = targetProcessInstanceId === undefined;\n    if (errorGettingTargetProcessInstanceId) {\n      const errorMessage: string = 'Target process of call activity not found.';\n\n      this.notificationService.showNotification(NotificationType.ERROR, errorMessage);\n      return;\n    }\n\n    this.router.navigateToRoute('live-execution-tracker', {\n      diagramName: callActivityTargetProcess,\n      solutionUri: this.activeSolutionEntry.uri,\n      correlationId: this.correlationId,\n      processInstanceId: targetProcessInstanceId,\n    });\n  };\n\n  private handleInactiveCallActivityClick: (event: MouseEvent) => Promise<void> = async (\n    event: MouseEvent,\n  ): Promise<void> => {\n    const overlayHtmlId: string = (event.target as HTMLDivElement).id;\n    const elementId: string = this.getElementIdByOverlayHtmlId(overlayHtmlId);\n    const element: IShape = this.elementRegistry.get(elementId);\n    const callActivityTargetProcess: string = element.businessObject.calledElement;\n\n    const callActivityHasNoTargetProcess: boolean = callActivityTargetProcess === undefined;\n    if (callActivityHasNoTargetProcess) {\n      const noTargetMessage: string =\n        'The CallActivity has no target configured. Please configure a target in the designer.';\n\n      this.notificationService.showNotification(NotificationType.INFO, noTargetMessage);\n    }\n\n    const xml: string = await this.getXmlByProcessModelId(callActivityTargetProcess);\n    await this.importXmlIntoDiagramPreviewViewer(xml);\n\n    this.nameOfDiagramToPreview = callActivityTargetProcess;\n    this.showDiagramPreviewViewer = true;\n\n    setTimeout(() => {\n      this.diagramPreviewViewer.attachTo(this.previewCanvasModel);\n    }, 0);\n  };\n\n  private async getXmlByProcessModelId(processModelId: string): Promise<string> {\n    const processModel: DataModels.ProcessModels.ProcessModel = await this.liveExecutionTrackerService.getProcessModelById(\n      this.activeSolutionEntry.identity,\n      processModelId,\n    );\n\n    return processModel.xml;\n  }\n\n  private elementClickHandler: (event: IEvent) => Promise<void> = async (event: IEvent) => {\n    const clickedElement: IShape = event.element;\n\n    this.selectedFlowNode = event.element;\n\n    const clickedElementIsNotAUserOrManualTask: boolean =\n      clickedElement.type !== 'bpmn:UserTask' && clickedElement.type !== 'bpmn:ManualTask';\n\n    if (clickedElementIsNotAUserOrManualTask) {\n      return;\n    }\n\n    this.taskId = clickedElement.id;\n  };\n\n  private async getXml(): Promise<string> {\n    const correlation: DataModels.Correlations.Correlation = await this.liveExecutionTrackerService.getCorrelationById(\n      this.activeSolutionEntry.identity,\n      this.correlationId,\n    );\n\n    const errorGettingCorrelation: boolean = correlation === undefined;\n    if (errorGettingCorrelation) {\n      this.notificationService.showNotification(\n        NotificationType.ERROR,\n        'Could not get correlation. Please try to start the process again.',\n      );\n\n      return undefined;\n    }\n\n    const processModelFromCorrelation: DataModels.Correlations.CorrelationProcessInstance = correlation.processInstances.find(\n      (processModel: DataModels.Correlations.CorrelationProcessInstance) => {\n        const processModelIsSearchedProcessModel: boolean = processModel.processInstanceId === this.processInstanceId;\n\n        return processModelIsSearchedProcessModel;\n      },\n    );\n\n    const xmlFromProcessModel: string = processModelFromCorrelation.xml;\n\n    return xmlFromProcessModel;\n  }\n\n  private async importXmlIntoDiagramViewer(xml: string): Promise<void> {\n    const xmlIsNotLoaded: boolean = xml === undefined || xml === null;\n\n    if (xmlIsNotLoaded) {\n      const xmlCouldNotBeLoadedMessage: string = 'The xml could not be loaded. Please try to start the process again.';\n\n      this.notificationService.showNotification(NotificationType.ERROR, xmlCouldNotBeLoadedMessage);\n\n      return undefined;\n    }\n\n    const xmlImportPromise: Promise<void> = new Promise((resolve: Function, reject: Function): void => {\n      this.diagramViewer.importXML(xml, (importXmlError: Error) => {\n        if (importXmlError) {\n          reject(importXmlError);\n\n          return;\n        }\n\n        resolve();\n      });\n    });\n\n    return xmlImportPromise;\n  }\n\n  private getElementIdByOverlayHtmlId(overlayHtmlId: string): string {\n    return overlayHtmlId.substring(0, overlayHtmlId.lastIndexOf('#'));\n  }\n\n  private async importXmlIntoDiagramPreviewViewer(xml: string): Promise<void> {\n    const xmlIsNotLoaded: boolean = xml === undefined || xml === null;\n\n    if (xmlIsNotLoaded) {\n      const xmlCouldNotBeLoadedMessage: string = 'The xml could not be loaded. Please try to start the process again.';\n\n      this.notificationService.showNotification(NotificationType.ERROR, xmlCouldNotBeLoadedMessage);\n\n      return undefined;\n    }\n\n    const xmlImportPromise: Promise<void> = new Promise((resolve: Function, reject: Function): void => {\n      this.diagramPreviewViewer.importXML(xml, (importXmlError: Error) => {\n        if (importXmlError) {\n          reject(importXmlError);\n\n          return;\n        }\n        resolve();\n      });\n    });\n\n    return xmlImportPromise;\n  }\n\n  private async exportXmlFromDiagramViewer(): Promise<string> {\n    const saveXmlPromise: Promise<string> = new Promise((resolve: Function, reject: Function): void => {\n      const xmlSaveOptions: IBpmnXmlSaveOptions = {\n        format: true,\n      };\n\n      this.diagramViewer.saveXML(xmlSaveOptions, async (saveXmlError: Error, xml: string) => {\n        if (saveXmlError) {\n          reject(saveXmlError);\n\n          return;\n        }\n\n        resolve(xml);\n      });\n    });\n\n    return saveXmlPromise;\n  }\n\n  private async handleElementColorization(): Promise<void> {\n    // This prevents the LET from Coloring several times at once\n    if (this.isColorizing) {\n      this.colorizeAgain = true;\n\n      return;\n    }\n\n    this.isColorizing = true;\n\n    const previousXml: string = await this.exportXmlFromDiagramViewer();\n\n    const colorizedXml: string | undefined = await (async (): Promise<string | undefined> => {\n      try {\n        return await this.liveExecutionTrackerService.getColorizedDiagram(\n          this.activeSolutionEntry.identity,\n          this.xml,\n          this.processInstanceId,\n          this.checkIfProcessEngineSupportsGettingFlowNodeInstances(),\n        );\n      } catch (error) {\n        const message: string = `Could not colorize XML: ${error}`;\n\n        this.notificationService.showNotification(NotificationType.ERROR, message);\n      }\n\n      return undefined;\n    })();\n\n    const colorizingWasSuccessfull: boolean = colorizedXml !== undefined;\n    const xmlChanged: boolean = previousXml !== colorizedXml;\n    if (xmlChanged && colorizingWasSuccessfull) {\n      await this.importXmlIntoDiagramViewer(colorizedXml);\n      await this.addOverlays();\n    }\n\n    this.isColorizing = false;\n\n    // If the colorization was triggered while colorizing, the colorization needs to be repeated as soon as it is finished\n    if (this.colorizeAgain) {\n      this.colorizeAgain = false;\n\n      this.handleElementColorization();\n    }\n  }\n\n  private async getParentProcessInstanceId(): Promise<string> {\n    const correlation: DataModels.Correlations.Correlation = await this.liveExecutionTrackerService.getCorrelationById(\n      this.activeSolutionEntry.identity,\n      this.correlationId,\n    );\n\n    const errorGettingCorrelation: boolean = correlation === undefined;\n    if (errorGettingCorrelation) {\n      return undefined;\n    }\n\n    const processInstanceFromCorrelation: DataModels.Correlations.CorrelationProcessInstance = correlation.processInstances.find(\n      (correlationProcessInstance: DataModels.Correlations.CorrelationProcessInstance): boolean => {\n        const processInstanceFound: boolean = correlationProcessInstance.processInstanceId === this.processInstanceId;\n\n        return processInstanceFound;\n      },\n    );\n\n    const {parentProcessInstanceId} = processInstanceFromCorrelation;\n\n    return parentProcessInstanceId;\n  }\n\n  private createBackendEventListeners(): Promise<Array<Subscription>> {\n    const processEndedCallback: Function = (): void => {\n      this.handleElementColorization();\n\n      this.sendProcessStoppedNotification();\n    };\n\n    const colorizationCallback: Function = (): void => {\n      this.handleElementColorization();\n    };\n\n    const processEndedSubscriptionPromise: Promise<\n      Subscription\n    > = this.liveExecutionTrackerService.createProcessEndedEventListener(\n      this.activeSolutionEntry.identity,\n      this.processInstanceId,\n      processEndedCallback,\n    );\n    const processTerminatedSubscriptionPromise: Promise<\n      Subscription\n    > = this.liveExecutionTrackerService.createProcessTerminatedEventListener(\n      this.activeSolutionEntry.identity,\n      this.processInstanceId,\n      processEndedCallback,\n    );\n\n    const userTaskWaitingSubscriptionPromise: Promise<\n      Subscription\n    > = this.liveExecutionTrackerService.createUserTaskWaitingEventListener(\n      this.activeSolutionEntry.identity,\n      this.processInstanceId,\n      colorizationCallback,\n    );\n    const userTaskFinishedSubscriptionPromise: Promise<\n      Subscription\n    > = this.liveExecutionTrackerService.createUserTaskFinishedEventListener(\n      this.activeSolutionEntry.identity,\n      this.processInstanceId,\n      colorizationCallback,\n    );\n    const manualTaskWaitingSubscriptionPromise: Promise<\n      Subscription\n    > = this.liveExecutionTrackerService.createManualTaskWaitingEventListener(\n      this.activeSolutionEntry.identity,\n      this.processInstanceId,\n      colorizationCallback,\n    );\n    const manualTaskFinishedSubscriptionPromise: Promise<\n      Subscription\n    > = this.liveExecutionTrackerService.createManualTaskFinishedEventListener(\n      this.activeSolutionEntry.identity,\n      this.processInstanceId,\n      colorizationCallback,\n    );\n    const emptyActivityWaitingSubscriptionPromise: Promise<\n      Subscription\n    > = this.liveExecutionTrackerService.createEmptyActivityWaitingEventListener(\n      this.activeSolutionEntry.identity,\n      this.processInstanceId,\n      colorizationCallback,\n    );\n    const emptyActivityFinishedSubscriptionPromise: Promise<\n      Subscription\n    > = this.liveExecutionTrackerService.createEmptyActivityFinishedEventListener(\n      this.activeSolutionEntry.identity,\n      this.processInstanceId,\n      colorizationCallback,\n    );\n    const activityReachedSubscriptionPromise: Promise<\n      Subscription\n    > = this.liveExecutionTrackerService.createActivityReachedEventListener(\n      this.activeSolutionEntry.identity,\n      this.processInstanceId,\n      colorizationCallback,\n    );\n    const activityFinishedSubscriptionPromise: Promise<\n      Subscription\n    > = this.liveExecutionTrackerService.createActivityFinishedEventListener(\n      this.activeSolutionEntry.identity,\n      this.processInstanceId,\n      colorizationCallback,\n    );\n    const boundaryEventTriggeredSubscriptionPromise: Promise<\n      Subscription\n    > = this.liveExecutionTrackerService.createBoundaryEventTriggeredEventListener(\n      this.activeSolutionEntry.identity,\n      this.processInstanceId,\n      colorizationCallback,\n    );\n    const intermediateThrowEventTriggeredSubscriptionPromise: Promise<\n      Subscription\n    > = this.liveExecutionTrackerService.createIntermediateThrowEventTriggeredEventListener(\n      this.activeSolutionEntry.identity,\n      this.processInstanceId,\n      colorizationCallback,\n    );\n    const intermediateCatchEventReachedSubscriptionPromise: Promise<\n      Subscription\n    > = this.liveExecutionTrackerService.createIntermediateCatchEventReachedEventListener(\n      this.activeSolutionEntry.identity,\n      this.processInstanceId,\n      colorizationCallback,\n    );\n    const intermediateCatchEventFinishedSubscriptionPromise: Promise<\n      Subscription\n    > = this.liveExecutionTrackerService.createIntermediateCatchEventFinishedEventListener(\n      this.activeSolutionEntry.identity,\n      this.processInstanceId,\n      colorizationCallback,\n    );\n\n    const subscriptionPromises: Array<Promise<Subscription>> = [\n      processEndedSubscriptionPromise,\n      processTerminatedSubscriptionPromise,\n      userTaskWaitingSubscriptionPromise,\n      userTaskFinishedSubscriptionPromise,\n      manualTaskWaitingSubscriptionPromise,\n      manualTaskFinishedSubscriptionPromise,\n      emptyActivityWaitingSubscriptionPromise,\n      emptyActivityFinishedSubscriptionPromise,\n      activityReachedSubscriptionPromise,\n      activityFinishedSubscriptionPromise,\n      boundaryEventTriggeredSubscriptionPromise,\n      intermediateThrowEventTriggeredSubscriptionPromise,\n      intermediateCatchEventReachedSubscriptionPromise,\n      intermediateCatchEventFinishedSubscriptionPromise,\n    ];\n\n    return Promise.all(subscriptionPromises);\n  }\n\n  private startPolling(): void {\n    this.pollingTimer = setTimeout(async () => {\n      // Stop polling if not attached\n      const notAttached: boolean = !this.isAttached;\n      if (notAttached) {\n        return;\n      }\n\n      const isProcessInstanceActive: Function = async (): Promise<boolean> => {\n        try {\n          return await this.liveExecutionTrackerService.isProcessInstanceActive(\n            this.activeSolutionEntry.identity,\n            this.processInstanceId,\n          );\n        } catch (error) {\n          const connectionLost: boolean = error === RequestError.ConnectionLost;\n          // Keep polling if connection is lost\n          if (connectionLost) {\n            this.startPolling();\n          } else {\n            const notificationMessage: string =\n              'Could not get active correlations. Please try to start the process again.';\n\n            this.notificationService.showNotification(NotificationType.ERROR, notificationMessage);\n          }\n\n          return false;\n        }\n      };\n\n      await this.handleElementColorization();\n\n      const processInstanceIsActive: boolean = await isProcessInstanceActive();\n\n      const processInstanceIsNotActive: boolean = processInstanceIsActive === false;\n      if (processInstanceIsNotActive) {\n        this.sendProcessStoppedNotification();\n\n        return;\n      }\n\n      this.startPolling();\n    }, environment.processengine.liveExecutionTrackerPollingIntervalInMs);\n  }\n\n  private stopPolling(): void {\n    clearTimeout(this.pollingTimer);\n  }\n\n  private sendProcessStoppedNotification(): void {\n    this.processStopped = true;\n\n    this.notificationService.showNotification(NotificationType.INFO, 'Process stopped.');\n  }\n\n  private resizeTokenViewer(mouseEvent: MouseEvent): void {\n    const mouseXPosition: number = mouseEvent.clientX;\n\n    const liveExecutionTracker: HTMLElement = this.tokenViewer.parentElement;\n\n    const minSpaceForDiagramViewer: number = 320;\n\n    const windowWidth: number = window.innerWidth;\n    const rightToolbarWidth: number = 36;\n\n    const minTokenViewerWidth: number = 250;\n    const maxTokenViewerWidth: number = liveExecutionTracker.clientWidth - minSpaceForDiagramViewer;\n\n    const newTokenViewerWidth: number = windowWidth - mouseXPosition - rightToolbarWidth;\n\n    /*\n     * This sets the new width of the token viewer to the minimum or maximum width,\n     * if the new width is smaller than the minimum or bigger than the maximum width.\n     */\n    this.tokenViewerWidth = Math.min(maxTokenViewerWidth, Math.max(newTokenViewerWidth, minTokenViewerWidth));\n  }\n}\n",".live-execution-tracker {\n  position: relative;\n  display: flex;\n  height: 100%;\n}\n\n.let__main-view {\n  display: flex;\n  height: 100%;\n  padding-right: 36px;\n  overflow: hidden;\n  flex-basis: 100%;\n}\n\n.let__diagram-viewer {\n  position: relative;\n  height: 100%;\n  flex-basis: 100%;\n  // The width is necessary because otherwise the flex-basis does not work correctly\n  width: 0;\n}\n\n.let__diagram-viewer-canvas {\n  height: calc(100% - 20px);\n}\n\n.let__diagram-viewer-preview-container {\n  width: 100%;\n  height: 100%;\n}\n\n.let__diagram-viewer-preview-canvas {\n  width: 100%;\n  height: 100%;\n}\n\n.let__overlay-button {\n  width: 40px;\n  height: 30px;\n  cursor: pointer;\n}\n\n.let__overlay-button-icon {\n  position: absolute;\n  top: 9px;\n  left: 14px;\n  pointer-events: none;\n  cursor: pointer;\n  opacity: 0.4;\n}\n\n.let__overlay-button:hover .let__overlay-button-icon {\n  opacity: 1;\n}\n\n.let__button-row {\n  position: absolute;\n  display: flex;\n  justify-content: space-around;\n  bottom: 100px;\n  width: 100%;\n}\n\n.let__parent-process-button {\n  width: 200px;\n}\n\n.let__stop-process-button {\n  width: 200px;\n}\n\n.let__diagram-preview-header {\n  margin: 0 auto;\n}\n\n.let__close-modal-button {\n  position: absolute;\n  right: 20px;\n  cursor: pointer;\n}\n\n.let__close-dynamic-ui-modal-button {\n  top: 5px;\n}\n\n.let__token-viewer {\n  max-width: calc(100% - 320px);\n  flex-shrink: 0;\n}\n\n.let__token-viewer-resize-div {\n  z-index: 1;\n  width: 6px;\n  margin-right: -4px;\n  cursor: col-resize;\n  flex-shrink: 0;\n}\n\n.let__right-toolbar {\n  position: fixed;\n  top: 42px;\n  right: 0px;\n  bottom: 0;\n  width: 36px;\n  background-color: #f7f7f7;\n  border-left: 2px solid #dcdbdb;\n}\n\n.let__tool {\n  padding: 5px;\n  margin: 0 5px;\n  opacity: 0.5;\n  text-align: center;\n  cursor: default\n}\n\n.let__tool:hover {\n  opacity: 1;\n}\n\n.let__tool--active {\n  opacity: 1;\n}\n",null,"import {inject} from 'aurelia-framework';\n\nimport {Subscription} from '@essential-projects/event_aggregator_contracts';\nimport {IIdentity} from '@essential-projects/iam_contracts';\nimport {DataModels, IManagementApi, Messages} from '@process-engine/management_api_contracts';\nimport {ILiveExecutionTrackerRepository, RequestError} from '../contracts/index';\n\n@inject('ManagementApiClientService')\nexport class LiveExecutionTrackerRepository implements ILiveExecutionTrackerRepository {\n  private managementApiClient: IManagementApi;\n\n  private maxRetries: number = 5;\n  private retryDelayInMs: number = 500;\n\n  constructor(managementApiClientService: IManagementApi) {\n    this.managementApiClient = managementApiClientService;\n  }\n\n  public async getFlowNodeInstancesForProcessInstance(\n    identity: IIdentity,\n    processInstanceId: string,\n  ): Promise<Array<DataModels.FlowNodeInstances.FlowNodeInstance>> {\n    return this.managementApiClient.getFlowNodeInstancesForProcessInstance(identity, processInstanceId);\n  }\n\n  public async getCorrelationById(\n    identity: IIdentity,\n    correlationId: string,\n  ): Promise<DataModels.Correlations.Correlation> {\n    // This is necessary because the managementApi sometimes throws an error when the correlation is not yet existing.\n    for (let retries: number = 0; retries < this.maxRetries; retries++) {\n      try {\n        return await this.managementApiClient.getCorrelationById(identity, correlationId);\n      } catch {\n        await new Promise((resolve: Function): void => {\n          setTimeout(() => {\n            resolve();\n          }, this.retryDelayInMs);\n        });\n      }\n    }\n\n    return undefined;\n  }\n\n  public async isProcessInstanceActive(identity: IIdentity, processInstanceId: string): Promise<boolean> {\n    const getActiveTokens: Function = async (): Promise<Array<DataModels.Kpi.ActiveToken> | RequestError> => {\n      for (let retries: number = 0; retries < this.maxRetries; retries++) {\n        try {\n          return await this.managementApiClient.getActiveTokensForProcessInstance(identity, processInstanceId);\n        } catch (error) {\n          const errorIsConnectionLost: boolean = error.message === 'Failed to fetch';\n\n          if (errorIsConnectionLost) {\n            return RequestError.ConnectionLost;\n          }\n        }\n      }\n\n      return RequestError.OtherError;\n    };\n\n    const activeTokensOrRequestError: Array<DataModels.Kpi.ActiveToken> | RequestError = await getActiveTokens();\n\n    const couldNotGetActiveTokens: boolean =\n      activeTokensOrRequestError === RequestError.ConnectionLost ||\n      activeTokensOrRequestError === RequestError.OtherError;\n    if (couldNotGetActiveTokens) {\n      const requestError: RequestError = activeTokensOrRequestError as RequestError;\n\n      throw requestError;\n    }\n\n    const allActiveTokens: Array<DataModels.Kpi.ActiveToken> = activeTokensOrRequestError as Array<\n      DataModels.Kpi.ActiveToken\n    >;\n\n    const correlationIsActive: boolean = allActiveTokens.length > 0;\n\n    return correlationIsActive;\n  }\n\n  public async getTokenHistoryGroupForProcessInstance(\n    identity: IIdentity,\n    processInstanceId: string,\n  ): Promise<DataModels.TokenHistory.TokenHistoryGroup | null> {\n    for (let retries: number = 0; retries < this.maxRetries; retries++) {\n      try {\n        return await this.managementApiClient.getTokensForProcessInstance(identity, processInstanceId);\n      } catch {\n        await new Promise((resolve: Function): void => {\n          setTimeout(() => {\n            resolve();\n          }, this.retryDelayInMs);\n        });\n      }\n    }\n\n    return null;\n  }\n\n  public async getActiveTokensForProcessInstance(\n    identity: IIdentity,\n    processInstanceId: string,\n  ): Promise<Array<DataModels.Kpi.ActiveToken> | null> {\n    for (let retries: number = 0; retries < this.maxRetries; retries++) {\n      try {\n        return await this.managementApiClient.getActiveTokensForProcessInstance(identity, processInstanceId);\n      } catch {\n        await new Promise((resolve: Function): void => {\n          setTimeout(() => {\n            resolve();\n          }, this.retryDelayInMs);\n        });\n      }\n    }\n\n    return null;\n  }\n\n  public async getEmptyActivitiesForProcessInstance(\n    identity: IIdentity,\n    processInstanceId: string,\n  ): Promise<DataModels.EmptyActivities.EmptyActivityList | null> {\n    for (let retries: number = 0; retries < this.maxRetries; retries++) {\n      try {\n        return await this.managementApiClient.getEmptyActivitiesForProcessInstance(identity, processInstanceId);\n      } catch {\n        await new Promise((resolve: Function): void => {\n          setTimeout(() => {\n            resolve();\n          }, this.retryDelayInMs);\n        });\n      }\n    }\n\n    return null;\n  }\n\n  public async finishEmptyActivity(\n    identity: IIdentity,\n    processInstanceId: string,\n    correlationId: string,\n    emptyActivity: DataModels.EmptyActivities.EmptyActivity,\n  ): Promise<void> {\n    return this.managementApiClient.finishEmptyActivity(\n      identity,\n      processInstanceId,\n      correlationId,\n      emptyActivity.flowNodeInstanceId,\n    );\n  }\n\n  public async getProcessModelById(\n    identity: IIdentity,\n    processModelId: string,\n  ): Promise<DataModels.ProcessModels.ProcessModel> {\n    return this.managementApiClient.getProcessModelById(identity, processModelId);\n  }\n\n  public createProcessEndedEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription> {\n    return this.managementApiClient.onProcessEnded(\n      identity,\n      (message: Messages.BpmnEvents.EndEventReachedMessage): void => {\n        const eventIsForAnotherProcessInstance: boolean = message.processInstanceId !== processInstanceId;\n        if (eventIsForAnotherProcessInstance) {\n          return;\n        }\n\n        callback();\n      },\n    );\n  }\n\n  public createProcessTerminatedEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription> {\n    return this.managementApiClient.onProcessTerminated(\n      identity,\n      (message: Messages.BpmnEvents.TerminateEndEventReachedMessage): void => {\n        const eventIsForAnotherProcessInstance: boolean = message.processInstanceId !== processInstanceId;\n        if (eventIsForAnotherProcessInstance) {\n          return;\n        }\n\n        callback();\n      },\n    );\n  }\n\n  public createUserTaskWaitingEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription> {\n    return this.managementApiClient.onUserTaskWaiting(\n      identity,\n      (message: Messages.BpmnEvents.TerminateEndEventReachedMessage): void => {\n        const eventIsForAnotherProcessInstance: boolean = message.processInstanceId !== processInstanceId;\n        if (eventIsForAnotherProcessInstance) {\n          return;\n        }\n\n        callback();\n      },\n    );\n  }\n\n  public createActivityReachedEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription> {\n    return this.managementApiClient.onActivityReached(\n      identity,\n      (message: Messages.BpmnEvents.TerminateEndEventReachedMessage): void => {\n        const eventIsForAnotherProcessInstance: boolean = message.processInstanceId !== processInstanceId;\n        if (eventIsForAnotherProcessInstance) {\n          return;\n        }\n\n        callback();\n      },\n    );\n  }\n\n  public createActivityFinishedEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription> {\n    return this.managementApiClient.onActivityFinished(\n      identity,\n      (message: Messages.BpmnEvents.TerminateEndEventReachedMessage): void => {\n        const eventIsForAnotherProcessInstance: boolean = message.processInstanceId !== processInstanceId;\n        if (eventIsForAnotherProcessInstance) {\n          return;\n        }\n\n        callback();\n      },\n    );\n  }\n\n  public createUserTaskFinishedEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription> {\n    return this.managementApiClient.onUserTaskFinished(\n      identity,\n      (message: Messages.BpmnEvents.TerminateEndEventReachedMessage): void => {\n        const eventIsForAnotherProcessInstance: boolean = message.processInstanceId !== processInstanceId;\n        if (eventIsForAnotherProcessInstance) {\n          return;\n        }\n\n        callback();\n      },\n    );\n  }\n\n  public createManualTaskWaitingEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription> {\n    return this.managementApiClient.onManualTaskWaiting(\n      identity,\n      (message: Messages.BpmnEvents.TerminateEndEventReachedMessage): void => {\n        const eventIsForAnotherProcessInstance: boolean = message.processInstanceId !== processInstanceId;\n        if (eventIsForAnotherProcessInstance) {\n          return;\n        }\n\n        callback();\n      },\n    );\n  }\n\n  public createManualTaskFinishedEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription> {\n    return this.managementApiClient.onManualTaskFinished(\n      identity,\n      (message: Messages.BpmnEvents.TerminateEndEventReachedMessage): void => {\n        const eventIsForAnotherProcessInstance: boolean = message.processInstanceId !== processInstanceId;\n        if (eventIsForAnotherProcessInstance) {\n          return;\n        }\n\n        callback();\n      },\n    );\n  }\n\n  public createEmptyActivityWaitingEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription> {\n    return this.managementApiClient.onEmptyActivityWaiting(\n      identity,\n      (message: Messages.BpmnEvents.TerminateEndEventReachedMessage): void => {\n        const eventIsForAnotherProcessInstance: boolean = message.processInstanceId !== processInstanceId;\n        if (eventIsForAnotherProcessInstance) {\n          return;\n        }\n\n        callback();\n      },\n    );\n  }\n\n  public createEmptyActivityFinishedEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription> {\n    return this.managementApiClient.onEmptyActivityFinished(\n      identity,\n      (message: Messages.BpmnEvents.TerminateEndEventReachedMessage): void => {\n        const eventIsForAnotherProcessInstance: boolean = message.processInstanceId !== processInstanceId;\n        if (eventIsForAnotherProcessInstance) {\n          return;\n        }\n\n        callback();\n      },\n    );\n  }\n\n  public createBoundaryEventTriggeredEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription> {\n    return this.managementApiClient.onBoundaryEventTriggered(\n      identity,\n      (message: Messages.BpmnEvents.TerminateEndEventReachedMessage): void => {\n        const eventIsForAnotherProcessInstance: boolean = message.processInstanceId !== processInstanceId;\n        if (eventIsForAnotherProcessInstance) {\n          return;\n        }\n\n        callback();\n      },\n    );\n  }\n\n  public createIntermediateThrowEventTriggeredEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription> {\n    return this.managementApiClient.onIntermediateThrowEventTriggered(\n      identity,\n      (message: Messages.BpmnEvents.TerminateEndEventReachedMessage): void => {\n        const eventIsForAnotherProcessInstance: boolean = message.processInstanceId !== processInstanceId;\n        if (eventIsForAnotherProcessInstance) {\n          return;\n        }\n\n        callback();\n      },\n    );\n  }\n\n  public createIntermediateCatchEventReachedEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription> {\n    return this.managementApiClient.onIntermediateCatchEventReached(\n      identity,\n      (message: Messages.BpmnEvents.TerminateEndEventReachedMessage): void => {\n        const eventIsForAnotherProcessInstance: boolean = message.processInstanceId !== processInstanceId;\n        if (eventIsForAnotherProcessInstance) {\n          return;\n        }\n\n        callback();\n      },\n    );\n  }\n\n  public createIntermediateCatchEventFinishedEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription> {\n    return this.managementApiClient.onIntermediateCatchEventFinished(\n      identity,\n      (message: Messages.BpmnEvents.TerminateEndEventReachedMessage): void => {\n        const eventIsForAnotherProcessInstance: boolean = message.processInstanceId !== processInstanceId;\n        if (eventIsForAnotherProcessInstance) {\n          return;\n        }\n\n        callback();\n      },\n    );\n  }\n\n  public removeSubscription(identity: IIdentity, subscription: Subscription): Promise<void> {\n    return this.managementApiClient.removeSubscription(identity, subscription);\n  }\n\n  public terminateProcess(identity: IIdentity, processInstanceId: string): Promise<void> {\n    return this.managementApiClient.terminateProcessInstance(identity, processInstanceId);\n  }\n}\n","/* eslint-disable 6river/new-cap */\nimport {inject} from 'aurelia-framework';\n\nimport {Subscription} from '@essential-projects/event_aggregator_contracts';\nimport {IIdentity} from '@essential-projects/iam_contracts';\nimport {IModdleElement, IShape} from '@process-engine/bpmn-elements_contracts';\nimport * as bundle from '@process-engine/bpmn-js-custom-bundle';\nimport {DataModels} from '@process-engine/management_api_contracts';\n\nimport {\n  IBpmnModeler,\n  IBpmnXmlSaveOptions,\n  IColorPickerColor,\n  IElementRegistry,\n  IModeling,\n  defaultBpmnColors,\n} from '../../../contracts/index';\nimport {ILiveExecutionTrackerRepository, ILiveExecutionTrackerService} from '../contracts/index';\n\n@inject('LiveExecutionTrackerRepository')\nexport class LiveExecutionTrackerService implements ILiveExecutionTrackerService {\n  private liveExecutionTrackerRepository: ILiveExecutionTrackerRepository;\n\n  constructor(liveExecutionTrackerRepository: ILiveExecutionTrackerRepository) {\n    this.liveExecutionTrackerRepository = liveExecutionTrackerRepository;\n  }\n\n  public isProcessInstanceActive(identity: IIdentity, processInstanceId: string): Promise<boolean> {\n    return this.liveExecutionTrackerRepository.isProcessInstanceActive(identity, processInstanceId);\n  }\n\n  public getCorrelationById(identity: IIdentity, correlationId: string): Promise<DataModels.Correlations.Correlation> {\n    return this.liveExecutionTrackerRepository.getCorrelationById(identity, correlationId);\n  }\n\n  public getTokenHistoryGroupForProcessInstance(\n    identity: IIdentity,\n    processInstanceId: string,\n  ): Promise<DataModels.TokenHistory.TokenHistoryGroup | null> {\n    return this.liveExecutionTrackerRepository.getTokenHistoryGroupForProcessInstance(identity, processInstanceId);\n  }\n\n  public getActiveTokensForProcessInstance(\n    identity: IIdentity,\n    processInstanceId: string,\n  ): Promise<Array<DataModels.Kpi.ActiveToken>> {\n    return this.liveExecutionTrackerRepository.getActiveTokensForProcessInstance(identity, processInstanceId);\n  }\n\n  public getEmptyActivitiesForProcessInstance(\n    identity: IIdentity,\n    processInstanceId: string,\n  ): Promise<DataModels.EmptyActivities.EmptyActivityList | null> {\n    return this.liveExecutionTrackerRepository.getEmptyActivitiesForProcessInstance(identity, processInstanceId);\n  }\n\n  public getProcessModelById(\n    identity: IIdentity,\n    processModelId: string,\n  ): Promise<DataModels.ProcessModels.ProcessModel> {\n    return this.liveExecutionTrackerRepository.getProcessModelById(identity, processModelId);\n  }\n\n  public finishEmptyActivity(\n    identity: IIdentity,\n    processInstanceId: string,\n    correlationId: string,\n    emptyActivity: DataModels.EmptyActivities.EmptyActivity,\n  ): Promise<void> {\n    return this.liveExecutionTrackerRepository.finishEmptyActivity(\n      identity,\n      processInstanceId,\n      correlationId,\n      emptyActivity,\n    );\n  }\n\n  public createProcessEndedEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription> {\n    return this.liveExecutionTrackerRepository.createProcessEndedEventListener(identity, processInstanceId, callback);\n  }\n\n  public createProcessTerminatedEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription> {\n    return this.liveExecutionTrackerRepository.createProcessTerminatedEventListener(\n      identity,\n      processInstanceId,\n      callback,\n    );\n  }\n\n  public createUserTaskWaitingEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription> {\n    return this.liveExecutionTrackerRepository.createUserTaskWaitingEventListener(\n      identity,\n      processInstanceId,\n      callback,\n    );\n  }\n\n  public createUserTaskFinishedEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription> {\n    return this.liveExecutionTrackerRepository.createUserTaskFinishedEventListener(\n      identity,\n      processInstanceId,\n      callback,\n    );\n  }\n\n  public createManualTaskWaitingEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription> {\n    return this.liveExecutionTrackerRepository.createManualTaskWaitingEventListener(\n      identity,\n      processInstanceId,\n      callback,\n    );\n  }\n\n  public createManualTaskFinishedEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription> {\n    return this.liveExecutionTrackerRepository.createManualTaskFinishedEventListener(\n      identity,\n      processInstanceId,\n      callback,\n    );\n  }\n\n  public createEmptyActivityWaitingEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription> {\n    return this.liveExecutionTrackerRepository.createEmptyActivityWaitingEventListener(\n      identity,\n      processInstanceId,\n      callback,\n    );\n  }\n\n  public createEmptyActivityFinishedEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription> {\n    return this.liveExecutionTrackerRepository.createEmptyActivityFinishedEventListener(\n      identity,\n      processInstanceId,\n      callback,\n    );\n  }\n\n  public createActivityReachedEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription> {\n    return this.liveExecutionTrackerRepository.createActivityReachedEventListener(\n      identity,\n      processInstanceId,\n      callback,\n    );\n  }\n\n  public createActivityFinishedEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription> {\n    return this.liveExecutionTrackerRepository.createActivityFinishedEventListener(\n      identity,\n      processInstanceId,\n      callback,\n    );\n  }\n\n  public createBoundaryEventTriggeredEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription> {\n    return this.liveExecutionTrackerRepository.createBoundaryEventTriggeredEventListener(\n      identity,\n      processInstanceId,\n      callback,\n    );\n  }\n\n  public createIntermediateThrowEventTriggeredEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription> {\n    return this.liveExecutionTrackerRepository.createIntermediateThrowEventTriggeredEventListener(\n      identity,\n      processInstanceId,\n      callback,\n    );\n  }\n\n  public createIntermediateCatchEventReachedEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription> {\n    return this.liveExecutionTrackerRepository.createIntermediateCatchEventReachedEventListener(\n      identity,\n      processInstanceId,\n      callback,\n    );\n  }\n\n  public createIntermediateCatchEventFinishedEventListener(\n    identity: IIdentity,\n    processInstanceId: string,\n    callback: Function,\n  ): Promise<Subscription> {\n    return this.liveExecutionTrackerRepository.createIntermediateCatchEventFinishedEventListener(\n      identity,\n      processInstanceId,\n      callback,\n    );\n  }\n\n  public removeSubscription(identity: IIdentity, subscription: Subscription): Promise<void> {\n    return this.liveExecutionTrackerRepository.removeSubscription(identity, subscription);\n  }\n\n  public async getElementsWithActiveToken(\n    identity: IIdentity,\n    processInstanceId: string,\n    elementRegistry: IElementRegistry,\n  ): Promise<Array<IShape> | null> {\n    const elements: Array<IShape> = this.getAllElementsThatCanHaveAToken(elementRegistry);\n\n    const activeTokens: Array<DataModels.Kpi.ActiveToken> | null = await this.getActiveTokensForProcessInstance(\n      identity,\n      processInstanceId,\n    );\n    const couldNotGetActiveTokens: boolean = activeTokens === null;\n    if (couldNotGetActiveTokens) {\n      return null;\n    }\n\n    const elementsWithActiveToken: Array<IShape> = activeTokens.map(\n      (activeToken: DataModels.Kpi.ActiveToken): IShape => {\n        const elementWithActiveToken: IShape = elements.find((element: IShape) => {\n          return element.id === activeToken.flowNodeId;\n        });\n\n        return elementWithActiveToken;\n      },\n    );\n\n    return elementsWithActiveToken;\n  }\n\n  public async getElementsWithTokenHistory(\n    identity: IIdentity,\n    processInstanceId: string,\n    elementRegistry: IElementRegistry,\n  ): Promise<Array<IShape>> {\n    const elements: Array<IShape> = this.getAllElementsThatCanHaveAToken(elementRegistry);\n\n    const tokenHistoryGroups: DataModels.TokenHistory.TokenHistoryGroup = await this.getTokenHistoryGroupForProcessInstance(\n      identity,\n      processInstanceId,\n    );\n\n    const couldNotGetTokenHistory: boolean = tokenHistoryGroups === null;\n    if (couldNotGetTokenHistory) {\n      return undefined;\n    }\n\n    const elementsWithTokenHistory: Array<IShape> = [];\n\n    const flowNodeIds: Array<string> = Object.keys(tokenHistoryGroups);\n\n    for (const flowNodeId of flowNodeIds) {\n      const elementFromTokenHistory: IShape = elements.find((element: IShape) => {\n        return element.id === flowNodeId;\n      });\n\n      const elementFinished: boolean =\n        tokenHistoryGroups[flowNodeId].find((tokenHistoryEntry: DataModels.TokenHistory.TokenHistoryEntry) => {\n          return tokenHistoryEntry.tokenEventType === DataModels.TokenHistory.TokenEventType.onExit;\n        }) !== undefined;\n\n      if (elementFinished) {\n        elementsWithTokenHistory.push(elementFromTokenHistory);\n\n        const outgoingElements: Array<IShape> = this.getOutgoingElementsOfElement(\n          elementFromTokenHistory,\n          tokenHistoryGroups,\n          elementRegistry,\n        );\n\n        elementsWithTokenHistory.push(...outgoingElements);\n      }\n    }\n\n    return elementsWithTokenHistory;\n  }\n\n  public elementHasTokenHistory(\n    elementId: string,\n    tokenHistoryGroups: DataModels.TokenHistory.TokenHistoryGroup,\n  ): boolean {\n    const tokenHistoryFromFlowNodeInstanceFound: boolean = tokenHistoryGroups[elementId] !== undefined;\n\n    return tokenHistoryFromFlowNodeInstanceFound;\n  }\n\n  public elementHasActiveToken(elementId: string, activeTokens: Array<DataModels.Kpi.ActiveToken>): boolean {\n    const activeTokenForFlowNodeInstance: DataModels.Kpi.ActiveToken = activeTokens.find(\n      (activeToken: DataModels.Kpi.ActiveToken) => {\n        const activeTokenIsFromFlowNodeInstance: boolean = activeToken.flowNodeId === elementId;\n\n        return activeTokenIsFromFlowNodeInstance;\n      },\n    );\n\n    return activeTokenForFlowNodeInstance !== undefined;\n  }\n\n  public async getActiveCallActivities(\n    identity: IIdentity,\n    processInstanceId: string,\n    elementRegistry: IElementRegistry,\n  ): Promise<Array<IShape>> {\n    const activeTokens: Array<\n      DataModels.Kpi.ActiveToken\n    > = await this.liveExecutionTrackerRepository.getActiveTokensForProcessInstance(identity, processInstanceId);\n\n    const callActivities: Array<IShape> = this.getCallActivities(elementRegistry);\n\n    const inactiveCallActivities: Array<IShape> = callActivities.filter((callActivity: IShape) => {\n      return this.elementHasActiveToken(callActivity.id, activeTokens);\n    });\n\n    return inactiveCallActivities;\n  }\n\n  public async getInactiveCallActivities(\n    identity: IIdentity,\n    processInstanceId: string,\n    elementRegistry: IElementRegistry,\n  ): Promise<Array<IShape>> {\n    const activeTokens: Array<\n      DataModels.Kpi.ActiveToken\n    > = await this.liveExecutionTrackerRepository.getActiveTokensForProcessInstance(identity, processInstanceId);\n\n    const callActivities: Array<IShape> = this.getCallActivities(elementRegistry);\n\n    const inactiveCallActivities: Array<IShape> = callActivities.filter((callActivity: IShape) => {\n      return !this.elementHasActiveToken(callActivity.id, activeTokens);\n    });\n\n    return inactiveCallActivities;\n  }\n\n  public async getProcessModelByProcessInstanceId(\n    identity: IIdentity,\n    correlationId: string,\n    processInstanceId: string,\n  ): Promise<DataModels.Correlations.CorrelationProcessInstance> {\n    const correlation: DataModels.Correlations.Correlation = await this.getCorrelationById(identity, correlationId);\n\n    const errorGettingCorrelation: boolean = correlation === undefined;\n    if (errorGettingCorrelation) {\n      return undefined;\n    }\n\n    const processModel: DataModels.Correlations.CorrelationProcessInstance = correlation.processInstances.find(\n      (correlationProcessInstance: DataModels.Correlations.CorrelationProcessInstance): boolean => {\n        const processModelFound: boolean = correlationProcessInstance.processInstanceId === processInstanceId;\n\n        return processModelFound;\n      },\n    );\n\n    return processModel;\n  }\n\n  public async getProcessInstanceIdOfCallActivityTarget(\n    identity: IIdentity,\n    correlationId: string,\n    processInstanceIdOfOrigin: string,\n    callActivityTargetId: string,\n  ): Promise<string> {\n    const correlation: DataModels.Correlations.Correlation = await this.getCorrelationById(identity, correlationId);\n\n    const errorGettingCorrelation: boolean = correlation === undefined;\n    if (errorGettingCorrelation) {\n      return undefined;\n    }\n\n    const processInstance: DataModels.Correlations.CorrelationProcessInstance = correlation.processInstances.find(\n      (correlationProcessInstance: DataModels.Correlations.CorrelationProcessInstance): boolean => {\n        const targetProcessModelFound: boolean =\n          correlationProcessInstance.parentProcessInstanceId === processInstanceIdOfOrigin &&\n          correlationProcessInstance.processModelId === callActivityTargetId;\n\n        return targetProcessModelFound;\n      },\n    );\n\n    const processInstanceFound: boolean = processInstance !== undefined;\n\n    return processInstanceFound ? processInstance.processInstanceId : undefined;\n  }\n\n  public async clearDiagramColors(xml: string): Promise<string> {\n    const diagramModeler: IBpmnModeler = new bundle.modeler();\n\n    const modeling: IModeling = diagramModeler.get('modeling');\n    const elementRegistry: IElementRegistry = diagramModeler.get('elementRegistry');\n\n    await this.importXmlIntoDiagramModeler(diagramModeler, xml);\n\n    const elementsWithColor: Array<IShape> = elementRegistry.filter((element: IShape): boolean => {\n      const elementHasFillColor: boolean = element.businessObject.di.fill !== undefined;\n      const elementHasBorderColor: boolean = element.businessObject.di.stroke !== undefined;\n\n      const elementHasColor: boolean = elementHasFillColor || elementHasBorderColor;\n\n      return elementHasColor;\n    });\n\n    const noElementsWithColor: boolean = elementsWithColor.length === 0;\n    if (noElementsWithColor) {\n      return xml;\n    }\n\n    modeling.setColor(elementsWithColor, {\n      stroke: defaultBpmnColors.none.border,\n      fill: defaultBpmnColors.none.fill,\n    });\n\n    const clearedXml: string = await this.exportXmlFromDiagramModeler(diagramModeler);\n\n    this.killModeler(diagramModeler);\n\n    return clearedXml;\n  }\n\n  public async getColorizedDiagram(\n    identity: IIdentity,\n    xml: string,\n    processInstanceId: string,\n    processEngineSupportsGettingFlowNodeInstances?: boolean,\n  ): Promise<string> {\n    const diagramModeler: IBpmnModeler = new bundle.modeler();\n\n    await this.importXmlIntoDiagramModeler(diagramModeler, xml);\n\n    const modeling = diagramModeler.get('modeling');\n    const elementRegistry = diagramModeler.get('elementRegistry');\n\n    const elementsWithActiveToken: Array<IShape> = await this.getElementsWithActiveToken(\n      identity,\n      processInstanceId,\n      elementRegistry,\n    );\n    const elementsWithTokenHistory: Array<IShape> = await this.getElementsWithTokenHistory(\n      identity,\n      processInstanceId,\n      elementRegistry,\n    );\n\n    this.colorizeElements(modeling, elementsWithTokenHistory, defaultBpmnColors.green);\n    this.colorizeElements(modeling, elementsWithActiveToken, defaultBpmnColors.orange);\n\n    if (processEngineSupportsGettingFlowNodeInstances) {\n      const elementsWithError: Array<IShape> = await this.getElementsWithError(\n        identity,\n        processInstanceId,\n        elementRegistry,\n      );\n\n      this.colorizeElements(modeling, elementsWithError, defaultBpmnColors.red);\n    }\n\n    const colorizedXml: string = await this.exportXmlFromDiagramModeler(diagramModeler);\n\n    this.killModeler(diagramModeler);\n\n    return colorizedXml;\n  }\n\n  public terminateProcess(identity: IIdentity, processInstanceId: string): Promise<void> {\n    return this.liveExecutionTrackerRepository.terminateProcess(identity, processInstanceId);\n  }\n\n  public async getElementsWithError(\n    identity: IIdentity,\n    processInstanceId: string,\n    elementRegistry: IElementRegistry,\n  ): Promise<Array<IShape>> {\n    const flowNodeInstances: Array<\n      DataModels.FlowNodeInstances.FlowNodeInstance\n    > = await this.liveExecutionTrackerRepository.getFlowNodeInstancesForProcessInstance(identity, processInstanceId);\n\n    return flowNodeInstances\n      .filter((flowNodeInstance: DataModels.FlowNodeInstances.FlowNodeInstance) => {\n        return flowNodeInstance.state === 'error';\n      })\n      .map((flowNodeInstance: DataModels.FlowNodeInstances.FlowNodeInstance) => {\n        return elementRegistry.get(flowNodeInstance.flowNodeId);\n      });\n  }\n\n  private getAllElementsThatCanHaveAToken(elementRegistry: IElementRegistry): Array<IShape> {\n    const allElementsThatCanHaveAToken: Array<IShape> = elementRegistry.filter((element: IShape): boolean => {\n      const elementCanHaveAToken: boolean =\n        element.type !== 'bpmn:SequenceFlow' &&\n        element.type !== 'bpmn:Collaboration' &&\n        element.type !== 'bpmn:Participant' &&\n        element.type !== 'bpmn:Lane' &&\n        element.type !== 'label';\n\n      return elementCanHaveAToken;\n    });\n\n    return allElementsThatCanHaveAToken;\n  }\n\n  private getOutgoingElementsOfElement(\n    element: IShape,\n    tokenHistoryGroups: DataModels.TokenHistory.TokenHistoryGroup,\n    elementRegistry: IElementRegistry,\n  ): Array<IShape> {\n    const outgoingElementsAsIModdleElement: Array<IModdleElement> = element.businessObject.outgoing;\n\n    const elementHasNoOutgoingElements: boolean = outgoingElementsAsIModdleElement === undefined;\n    if (elementHasNoOutgoingElements) {\n      return [];\n    }\n\n    const elementsWithOutgoingElements: Array<IShape> = [];\n\n    for (const outgoingElement of outgoingElementsAsIModdleElement) {\n      const outgoingElementAsShape: IShape = elementRegistry.get(outgoingElement.id);\n      const targetOfOutgoingElement: IShape = outgoingElementAsShape.target;\n\n      const outgoingElementHasNoTarget: boolean = targetOfOutgoingElement === undefined;\n\n      if (outgoingElementHasNoTarget) {\n        continue;\n      }\n\n      const targetOfOutgoingElementHasNoTokenHistory: boolean = !this.elementHasTokenHistory(\n        targetOfOutgoingElement.id,\n        tokenHistoryGroups,\n      );\n\n      if (targetOfOutgoingElementHasNoTokenHistory) {\n        continue;\n      }\n\n      const outgoingElementIsSequenceFlow: boolean = outgoingElementAsShape.type === 'bpmn:SequenceFlow';\n      if (outgoingElementIsSequenceFlow) {\n        const tokenHistoryForTarget: DataModels.TokenHistory.TokenHistoryEntry =\n          tokenHistoryGroups[targetOfOutgoingElement.id][0];\n        const previousFlowNodeInstanceIdOfTarget: string = tokenHistoryForTarget.previousFlowNodeInstanceId;\n\n        const tokenHistoryForElement: DataModels.TokenHistory.TokenHistoryEntry = tokenHistoryGroups[element.id][0];\n        const flowNodeInstanceIdOfElement: string = tokenHistoryForElement.flowNodeInstanceId;\n\n        // This is needed because the ParallelGateway only knows the flowNodeId of the first element that reaches the ParallelGateway\n        const targetOfOutgoingElementIsGateway: boolean = targetOfOutgoingElement.type === 'bpmn:ParallelGateway';\n        const sequenceFlowWasExecuted: boolean = previousFlowNodeInstanceIdOfTarget === flowNodeInstanceIdOfElement;\n\n        const outgoingElementWasUsed: boolean = sequenceFlowWasExecuted || targetOfOutgoingElementIsGateway;\n        if (outgoingElementWasUsed) {\n          elementsWithOutgoingElements.push(outgoingElementAsShape);\n        }\n\n        continue;\n      }\n\n      elementsWithOutgoingElements.push(outgoingElementAsShape);\n    }\n\n    return elementsWithOutgoingElements;\n  }\n\n  private killModeler(modeler: IBpmnModeler): void {\n    modeler.destroy();\n  }\n\n  private getCallActivities(elementRegistry: IElementRegistry): Array<IShape> {\n    const callActivities: Array<IShape> = elementRegistry.filter((element: IShape): boolean => {\n      return element.type === 'bpmn:CallActivity';\n    });\n\n    return callActivities;\n  }\n\n  private async importXmlIntoDiagramModeler(diagramModeler: IBpmnModeler, xml: string): Promise<void> {\n    const xmlImportPromise: Promise<void> = new Promise((resolve: Function, reject: Function): void => {\n      diagramModeler.importXML(xml, (importXmlError: Error) => {\n        if (importXmlError) {\n          reject(importXmlError);\n\n          return;\n        }\n        resolve();\n      });\n    });\n\n    return xmlImportPromise;\n  }\n\n  private async exportXmlFromDiagramModeler(diagramModeler: IBpmnModeler): Promise<string> {\n    const saveXmlPromise: Promise<string> = new Promise((resolve: Function, reject: Function): void => {\n      const xmlSaveOptions: IBpmnXmlSaveOptions = {\n        format: true,\n      };\n\n      diagramModeler.saveXML(xmlSaveOptions, async (saveXmlError: Error, xml: string) => {\n        if (saveXmlError) {\n          reject(saveXmlError);\n\n          return;\n        }\n\n        resolve(xml);\n      });\n    });\n\n    return saveXmlPromise;\n  }\n\n  private colorizeElements(modeling: IModeling, elements: Array<IShape>, color: IColorPickerColor): void {\n    const noElementsToColorize: boolean = elements === undefined || elements.length === 0;\n    if (noElementsToColorize) {\n      return;\n    }\n\n    try {\n      modeling.setColor(elements, {\n        stroke: color.border,\n        fill: color.fill,\n      });\n    } catch {\n      throw new Error('Adding color to some elements failed.');\n    }\n  }\n}\n","import {IHttpClient, IRequestOptions, IResponse} from '@essential-projects/http_contracts';\n\nexport class HttpClientProxy implements IHttpClient {\n  private proxiedHttpClient: IHttpClient;\n  private urlPrefix: string;\n\n  constructor(proxiedHttpClient: IHttpClient, urlPrefix: string) {\n    this.proxiedHttpClient = proxiedHttpClient;\n    this.urlPrefix = urlPrefix;\n  }\n\n  public setUrlPrefix(newUrlPrefix: string): void {\n    this.urlPrefix = newUrlPrefix;\n  }\n\n  public get<TType>(url: string, options?: IRequestOptions): Promise<IResponse<TType>> {\n    const prefixedUrl: string = `${this.urlPrefix}${url}`;\n\n    return this.proxiedHttpClient.get(prefixedUrl, options);\n  }\n\n  public post<TValue, TType>(url: string, data: TValue, options?: IRequestOptions): Promise<IResponse<TType>> {\n    const prefixedUrl: string = `${this.urlPrefix}${url}`;\n\n    return this.proxiedHttpClient.post(prefixedUrl, data, options);\n  }\n\n  public put<TType>(url: string, data: TType, options?: IRequestOptions): Promise<IResponse<TType>> {\n    const prefixedUrl: string = `${this.urlPrefix}${url}`;\n\n    return this.proxiedHttpClient.put(prefixedUrl, data, options);\n  }\n\n  public delete<TType>(url: string, options?: IRequestOptions): Promise<IResponse<TType>> {\n    const prefixedUrl: string = `${this.urlPrefix}${url}`;\n\n    return this.proxiedHttpClient.delete(prefixedUrl, options);\n  }\n}\n","import {EventAggregator} from 'aurelia-event-aggregator';\nimport {FrameworkConfiguration} from 'aurelia-framework';\n\nimport {IHttpClient} from '@essential-projects/http_contracts';\nimport {ExternalAccessor, ManagementApiClientService} from '@process-engine/management_api_client';\n\nimport {ISolutionEntry} from '../../contracts';\nimport environment from '../../environment';\nimport {HttpClientProxy} from './HttpClientProxy';\n\nexport async function configure(config: FrameworkConfiguration): Promise<void> {\n  const httpClient: IHttpClient = config.container.get('HttpFetchClient');\n\n  const configuredBaseRoute: string = window.localStorage.getItem('InternalProcessEngineRoute');\n\n  const urlPrefix: string = `${configuredBaseRoute}/`;\n  const proxiedHttpClient: HttpClientProxy = new HttpClientProxy(httpClient, urlPrefix);\n\n  const externalAccessor: ExternalAccessor = createExternalAccessor(proxiedHttpClient, configuredBaseRoute);\n  const clientService: ManagementApiClientService = createManagementApiClient(externalAccessor);\n\n  let socketIsAlreadyInitialized: boolean = false;\n\n  // register event to change process engine route\n  const eventAggregator: EventAggregator = config.container.get(EventAggregator);\n  eventAggregator.subscribe(environment.events.configPanel.solutionEntryChanged, (newSolutionEntry: ISolutionEntry) => {\n    proxiedHttpClient.setUrlPrefix(`${newSolutionEntry.uri}/`);\n\n    externalAccessor.config = {\n      socketUrl: newSolutionEntry.uri,\n    };\n\n    if (socketIsAlreadyInitialized) {\n      externalAccessor.disconnectSocket(newSolutionEntry.identity);\n      externalAccessor.initializeSocket(newSolutionEntry.identity);\n    } else {\n      socketIsAlreadyInitialized = true;\n    }\n  });\n\n  config.container.registerInstance('ManagementApiClientService', clientService);\n}\n\nfunction createExternalAccessor(httpClient: IHttpClient, socketUrl: string): ExternalAccessor {\n  const externalAccessor: ExternalAccessor = new ExternalAccessor(httpClient);\n\n  externalAccessor.config = {\n    socketUrl: socketUrl,\n  };\n\n  return externalAccessor;\n}\n\nfunction createManagementApiClient(externalAccessor: ExternalAccessor): ManagementApiClientService {\n  return new ManagementApiClientService(externalAccessor);\n}\n","import {EventAggregator, Subscription} from 'aurelia-event-aggregator';\nimport {inject} from 'aurelia-framework';\nimport {NavModel, Router} from 'aurelia-router';\n\nimport {IDiagram} from '@process-engine/solutionexplorer.contracts';\nimport {BrowserWindow} from 'electron';\nimport {ISolutionEntry, ISolutionService, NotificationType} from '../../contracts/index';\nimport environment from '../../environment';\nimport {NotificationService} from '../../services/notification-service/notification.service';\n\n@inject(Router, EventAggregator, 'NotificationService', 'SolutionService')\nexport class NavBar {\n  public activeSolutionEntry: ISolutionEntry;\n  public activeDiagram: IDiagram;\n  public navbarContainer: HTMLDivElement;\n\n  public diagramInfo: HTMLElement;\n  public dropdown: HTMLElement;\n  public solutionExplorerIsActive: boolean = true;\n  public showTools: boolean = false;\n  public showInspectTools: boolean = false;\n  public showExportOnInspectCorrelation: boolean = false;\n  public disableStartButton: boolean = true;\n  public validationError: boolean = false;\n  public showProcessName: boolean = false;\n  public disableDiagramUploadButton: boolean = true;\n  public disableHeatmapButton: boolean = true;\n  public disableDashboardButton: boolean = false;\n  public disableInspectCorrelationButton: boolean = false;\n  public diagramContainsUnsavedChanges: boolean = false;\n  public savingTargetIsRemoteSolution: boolean = false;\n  public showLeftMarginInNavbar: boolean = false;\n\n  public inspectView: string = 'dashboard';\n  public designView: string = 'detail';\n  public thinkView: string = 'diagram-list';\n\n  public navbarTitle: string = '';\n\n  public router: Router;\n\n  private eventAggregator: EventAggregator;\n  private subscriptions: Array<Subscription>;\n  private notificationService: NotificationService;\n  private solutionService: ISolutionService;\n\n  constructor(\n    router: Router,\n    eventAggregator: EventAggregator,\n    notificationService: NotificationService,\n    solutionService: ISolutionService,\n  ) {\n    this.router = router;\n    this.eventAggregator = eventAggregator;\n    this.notificationService = notificationService;\n    this.solutionService = solutionService;\n  }\n\n  public attached(): void {\n    this.solutionExplorerIsActive = window.localStorage.getItem('SolutionExplorerVisibility') === 'true';\n\n    window.addEventListener('resize', this.resizeEventHandler);\n\n    this.resizeEventHandler();\n\n    this.updateNavbar();\n\n    this.subscriptions = [\n      this.eventAggregator.subscribe('router:navigation:success', () => {\n        this.updateNavbar();\n      }),\n\n      this.eventAggregator.subscribe(environment.events.navBar.showTools, () => {\n        this.showTools = true;\n      }),\n\n      this.eventAggregator.subscribe(environment.events.navBar.hideTools, () => {\n        this.showTools = false;\n      }),\n\n      this.eventAggregator.subscribe(environment.events.navBar.validationError, () => {\n        this.validationError = true;\n      }),\n\n      this.eventAggregator.subscribe(environment.events.navBar.noValidationError, () => {\n        this.validationError = false;\n      }),\n\n      this.eventAggregator.subscribe(environment.events.differsFromOriginal, (isDiagramChanged: boolean) => {\n        this.diagramContainsUnsavedChanges = isDiagramChanged;\n      }),\n\n      this.eventAggregator.subscribe(environment.events.diagramWasSaved, (diagramUri: string) => {\n        const activeDiagramWasSaved: boolean = diagramUri === this.activeDiagram.uri;\n\n        if (!activeDiagramWasSaved) {\n          return;\n        }\n\n        this.diagramContainsUnsavedChanges = false;\n      }),\n\n      this.eventAggregator.subscribe(environment.events.navBar.inspectNavigateToDashboard, () => {\n        this.inspectView = 'dashboard';\n      }),\n\n      this.eventAggregator.subscribe(environment.events.navBar.toggleHeatmapView, () => {\n        this.disableHeatmapButton = true;\n        this.disableDashboardButton = false;\n        this.disableInspectCorrelationButton = false;\n      }),\n\n      this.eventAggregator.subscribe(environment.events.navBar.toggleDashboardView, () => {\n        this.disableHeatmapButton = false;\n        this.disableDashboardButton = true;\n        this.disableInspectCorrelationButton = false;\n      }),\n\n      this.eventAggregator.subscribe(environment.events.navBar.toggleInspectCorrelationView, () => {\n        this.disableHeatmapButton = false;\n        this.disableDashboardButton = false;\n        this.disableInspectCorrelationButton = true;\n      }),\n    ];\n\n    this.navbarContainer.addEventListener('dblclick', this.maximizeWindow);\n  }\n\n  public maximizeWindow = (): void => {\n    if (!(window as any).nodeRequire) {\n      return undefined;\n    }\n\n    const browserWindow: BrowserWindow = (window as any).nodeRequire('electron').remote.getCurrentWindow();\n\n    const browserWindowIsMaximized: boolean = browserWindow.isMaximized();\n    if (browserWindowIsMaximized) {\n      return browserWindow.unmaximize();\n    }\n\n    return browserWindow.maximize();\n  };\n\n  public detached(): void {\n    this.disposeAllSubscriptions();\n  }\n\n  private disposeAllSubscriptions(): void {\n    this.subscriptions.forEach((subscription: Subscription) => {\n      subscription.dispose();\n    });\n  }\n\n  public navigateBack(): void {\n    this.router.navigateBack();\n  }\n\n  public navigate(navModel: NavModel): void {\n    switch (navModel.config.name) {\n      case 'think':\n        this.routerNavigate(navModel.config.name, this.thinkView);\n\n        break;\n      case 'design':\n        if (this.activeDiagram === undefined) {\n          this.notificationService.showNotification(\n            NotificationType.INFO,\n            'In order to open the designer, you have to select a diagram first!',\n          );\n\n          return;\n        }\n        if (navModel.isActive) {\n          return;\n        }\n\n        this.routerNavigate(navModel.config.name, this.designView);\n\n        break;\n      case 'inspect':\n        if (navModel.isActive) {\n          return;\n        }\n\n        this.routerNavigate(navModel.config.name, this.inspectView);\n\n        break;\n      default:\n        break;\n    }\n  }\n\n  public showDashboard(): void {\n    this.disableDashboardButton = true;\n    this.disableHeatmapButton = false;\n    this.disableInspectCorrelationButton = false;\n\n    this.inspectView = 'dashboard';\n\n    this.routerNavigate(this.router.currentInstruction.config.name, this.inspectView);\n  }\n\n  public showHeatmap(): void {\n    this.disableHeatmapButton = true;\n    this.disableDashboardButton = false;\n    this.disableInspectCorrelationButton = false;\n\n    this.inspectView = 'heatmap';\n\n    this.routerNavigate(this.router.currentInstruction.config.name, this.inspectView);\n  }\n\n  public showInspectCorrelation(): void {\n    this.disableHeatmapButton = false;\n    this.disableDashboardButton = false;\n    this.disableInspectCorrelationButton = true;\n\n    this.inspectView = 'inspect-correlation';\n\n    this.routerNavigate(this.router.currentInstruction.config.name, this.inspectView);\n  }\n\n  public routerNavigate(route: string, view?: string): void {\n    this.router.navigateToRoute(route, {\n      diagramName: this.activeDiagram ? this.activeDiagram.name : undefined,\n      solutionUri: this.activeSolutionEntry ? this.activeSolutionEntry.uri : undefined,\n      view: view,\n    });\n  }\n\n  public toggleSolutionExplorer(): void {\n    this.solutionExplorerIsActive = !this.solutionExplorerIsActive;\n\n    this.eventAggregator.publish(\n      environment.events.solutionExplorerPanel.toggleSolutionExplorer,\n      this.solutionExplorerIsActive,\n    );\n  }\n\n  public saveDiagram(): void {\n    if (this.validationError || this.savingTargetIsRemoteSolution) {\n      return;\n    }\n\n    this.eventAggregator.publish(environment.events.diagramDetail.saveDiagram);\n  }\n\n  public printDiagram(): void {\n    this.eventAggregator.publish(environment.events.diagramDetail.printDiagram);\n  }\n\n  public exportDiagram(exportAs: string): void {\n    const eventToPublish: string = this.showExportOnInspectCorrelation\n      ? environment.events.inspect.exportDiagramAs\n      : environment.events.diagramDetail.exportDiagramAs;\n\n    this.eventAggregator.publish(`${eventToPublish}:${exportAs}`);\n  }\n\n  public startProcess(): void {\n    if (this.validationError || this.disableStartButton) {\n      return;\n    }\n\n    this.eventAggregator.publish(environment.events.diagramDetail.startProcess);\n  }\n\n  public startProcessWithOptions(): void {\n    if (this.validationError || this.disableStartButton) {\n      return;\n    }\n\n    this.eventAggregator.publish(environment.events.diagramDetail.startProcessWithOptions);\n  }\n\n  public uploadProcess(): void {\n    if (this.validationError || this.disableDiagramUploadButton) {\n      return;\n    }\n\n    this.eventAggregator.publish(environment.events.diagramDetail.uploadProcess);\n  }\n\n  public get diagramUploadButtonTitle(): string {\n    if (this.disableDiagramUploadButton) {\n      return 'This process is already deployed to the remote ProcessEngine.';\n    }\n\n    return 'Deploy to ProcessEngine';\n  }\n\n  public get startButtonTitle(): string {\n    if (this.disableStartButton) {\n      return 'Please deploy the process to a ProcessEngine before starting it.';\n    }\n\n    return 'Start Process';\n  }\n\n  /**\n   * Updates the title of the navbar including the navbar icon which\n   * indicates, if the process was opened from the local filesystem\n   * or a remote ProcessEngine\n   */\n  private updateNavbarTitle(): void {\n    const noActiveDiagram: boolean = this.router.currentInstruction.params.diagramName === undefined;\n\n    if (noActiveDiagram) {\n      this.showProcessName = false;\n      this.navbarTitle = '';\n\n      return;\n    }\n\n    const activeSolutionIsRemoteSolution: boolean = this.activeSolutionEntry.uri.startsWith('http');\n    this.showProcessName = this.activeDiagram.name !== undefined;\n\n    this.navbarTitle = activeSolutionIsRemoteSolution ? this.activeDiagram.id : this.activeDiagram.name;\n\n    this.savingTargetIsRemoteSolution = activeSolutionIsRemoteSolution;\n  }\n\n  private updateNavbarTools(): void {\n    const activeRoute: string = this.router.currentInstruction.config.name;\n\n    const activeSolutionIsRemoteSolution: boolean =\n      this.activeSolutionEntry.uri.startsWith('http') && this.activeDiagram !== undefined;\n    const activeRouteIsDiagramDetail: boolean = activeRoute === 'design';\n    const activeRouteIsInspect: boolean = activeRoute === 'inspect';\n    const activeRouteIsLET: boolean = activeRoute === 'live-execution-tracker';\n\n    this.disableStartButton = !activeSolutionIsRemoteSolution;\n    this.disableDiagramUploadButton = activeSolutionIsRemoteSolution;\n\n    if (activeRouteIsDiagramDetail) {\n      this.showTools = true;\n      this.showInspectTools = false;\n      this.showExportOnInspectCorrelation = false;\n    } else if (activeRouteIsInspect) {\n      const inspectView: string = this.router.currentInstruction.params.view;\n      const inspectViewIsDashboard: boolean = inspectView === 'dashboard';\n      const inspectViewIsHeatmap: boolean = inspectView === 'heatmap';\n      const inspectViewIsInspectCorrelation: boolean = inspectView === 'inspect-correlation';\n\n      this.showInspectTools = true;\n\n      this.disableDashboardButton = inspectViewIsDashboard;\n      this.disableHeatmapButton = inspectViewIsHeatmap;\n      this.disableInspectCorrelationButton = inspectViewIsInspectCorrelation;\n\n      this.showExportOnInspectCorrelation = inspectViewIsInspectCorrelation || false;\n\n      this.showTools = false;\n    } else if (activeRouteIsLET) {\n      this.showTools = false;\n      this.showInspectTools = false;\n      this.showExportOnInspectCorrelation = false;\n    } else {\n      this.showInspectTools = false;\n      this.showExportOnInspectCorrelation = false;\n    }\n  }\n\n  private async updateNavbar(): Promise<void> {\n    const solutionUriFromNavigation: string = this.router.currentInstruction.queryParams.solutionUri;\n    const noSolutionUriSpecified: boolean = solutionUriFromNavigation === undefined;\n\n    const solutionUri: string = noSolutionUriSpecified\n      ? window.localStorage.getItem('InternalProcessEngineRoute')\n      : solutionUriFromNavigation;\n\n    this.activeSolutionEntry = this.solutionService.getSolutionEntryForUri(solutionUri);\n\n    const activeSolutionIsUndefined: boolean = this.activeSolutionEntry === undefined;\n    if (activeSolutionIsUndefined) {\n      return;\n    }\n\n    this.savingTargetIsRemoteSolution = this.activeSolutionEntry.uri.startsWith('http');\n\n    const solutionIsSet: boolean = this.activeSolutionEntry !== undefined;\n    const diagramName: string = this.router.currentInstruction.params.diagramName;\n    const diagramIsSet: boolean = diagramName !== undefined;\n\n    if (solutionIsSet && diagramIsSet) {\n      const activeSolutionIsOpenDiagramSolution: boolean = solutionUri === 'about:open-diagrams';\n      if (activeSolutionIsOpenDiagramSolution) {\n        const persistedDiagrams: Array<IDiagram> = this.solutionService.getOpenDiagrams();\n\n        this.activeDiagram = persistedDiagrams.find((diagram: IDiagram) => {\n          return diagram.name === diagramName;\n        });\n      } else {\n        this.activeDiagram = await this.activeSolutionEntry.service.loadDiagram(\n          this.router.currentInstruction.params.diagramName,\n        );\n      }\n\n      const diagramNotFound: boolean = this.activeDiagram === undefined;\n\n      if (diagramNotFound) {\n        return;\n      }\n\n      this.updateNavbarTitle();\n    }\n\n    this.updateNavbarTools();\n\n    const routeNameIsStartPage: boolean = this.router.currentInstruction.config.name === 'start-page';\n    if (routeNameIsStartPage) {\n      this.resetNavbar();\n    }\n  }\n\n  private resetNavbar(): void {\n    this.activeDiagram = undefined;\n    this.activeSolutionEntry = undefined;\n    this.navbarTitle = '';\n    this.showProcessName = false;\n  }\n\n  private checkIfCurrentPlatformIsMac(): boolean {\n    const macRegex: RegExp = /.*mac*./i;\n    const currentPlatform: string = navigator.platform;\n    const currentPlatformIsMac: boolean = macRegex.test(currentPlatform);\n\n    return currentPlatformIsMac;\n  }\n\n  private resizeEventHandler = (event: Event = null): void => {\n    const isMac: boolean = this.checkIfCurrentPlatformIsMac();\n    const isFullscreen: boolean = !window.screenTop && !window.screenY;\n\n    this.showLeftMarginInNavbar = isMac && !isFullscreen;\n  };\n}\n",".bpmn-studio-navbar {\n  display: flex;\n  height: 42px;\n  background-color: #f7f7f7;\n  border-bottom: 2px solid #dcdbdb;\n  user-select: none;\n}\n\n.bpmn-studio-navbar--left-margin {\n  -webkit-app-region: drag;\n}\n\na,\nbutton {\n  -webkit-app-region: no-drag;\n  color: inherit;\n}\n\n.bpmn-studio-navbar--left-margin .menu-bar__menu--left::before {\n  padding-left: 80px;\n  content: \"\";\n}\n\n.menu-bar__menu--left {\n  display: flex;\n  flex: 2;\n  justify-content: flex-start;\n  align-items: stretch;\n  text-align: center;\n  min-width: 308px;\n}\n\n.menu-bar__menu--center {\n  display: flex;\n  flex: 1 100%;\n  align-items: center;\n  overflow: hidden;\n}\n\n.menu-bar__menu--right {\n  display: flex;\n  flex: 2;\n  justify-content: flex-end;\n  align-items: center;\n  text-align: right;\n  padding-right: 80px;\n  min-width: 308px;\n}\n\n.menu__menu-tabbed-link {\n  display: flex;\n  padding: 0 8px;\n  align-items: stretch;\n  font-weight: bold;\n  text-decoration: none;\n}\n\n.menu__menu-tabbed-link--active {\n  border-bottom: 2px solid #5e5e5e;\n}\n\n.menu__menu-tabbed-link--active .menu-tabbed-link {\n  color: inherit;\n  text-decoration: none;\n}\n\n.menu-tabbed-link {\n  display: block;\n  text-decoration: none;\n  line-height: 40px;\n}\n\n.menu-tabbed-link:hover {\n  cursor: default;\n  text-decoration: inherit;\n  -webkit-user-drag: none;\n  color: inherit;\n}\n\n.action-button {\n  background: inherit;\n  border: none;\n}\n\n.menu-bar__dashboard-dropdown {\n  top: 40px;\n  padding: 0;\n  cursor: pointer;\n  background-color: #f7f7f7;\n  border-top: none;\n  border-top-left-radius: 0;\n  border-top-right-radius: 0;\n  box-shadow: none;\n}\n\n.menu-bar__menu-center--action-button {\n  background-color: inherit;\n  border: none;\n}\n\n.menu-bar__menu-center--action-button:disabled {\n  cursor: default;\n}\n\n.process-details-dropdown-menu {\n  user-select: text;\n}\n\n.menu__element {\n  margin: 0 10px;\n  color: #5c5c5c;\n  white-space: nowrap;\n}\n\n.menu__element--title {\n  display: flex;\n  width: 100%;\n  margin: 0 0 1px 0;\n  justify-content: center;\n}\n\n.menu-bar__menu-center--back-button {\n  margin-right: 20px;\n  margin-left: 20px;\n}\n\n.menu__origin-icon {\n  padding-top: 2px;\n  float: left;\n}\n\n.solution-explorer {\n  color: #5c5c5c;\n}\n\n.process-details-title {\n  float: left;\n  max-width: 100%;\n  margin-left: 5px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.edited-label {\n  margin-left: 4px;\n  opacity: 0.7;\n}\n\n.start-options__icon {\n  font-size: 12px;\n}\n\n.dropdown__start-button {\n  padding: 0;\n}\n\n.export_button-inspect_correlation {\n  margin-right: 10px;\n}\n",null,"import {EventAggregator, Subscription} from 'aurelia-event-aggregator';\nimport {computedFrom, inject} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\n\nimport {SemVer} from 'semver';\n\nimport {IIdentity} from '@essential-projects/iam_contracts';\nimport {IDiagram, ISolution} from '@process-engine/solutionexplorer.contracts';\nimport {ISolutionExplorerService} from '@process-engine/solutionexplorer.service.contracts';\n\nimport {\n  IAuthenticationService,\n  ILoginResult,\n  ISolutionEntry,\n  ISolutionService,\n  IUserIdentity,\n} from '../../../contracts';\nimport {OpenDiagramsSolutionExplorerService} from '../../../services/solution-explorer-services/OpenDiagramsSolutionExplorerService';\nimport {SolutionExplorerServiceFactory} from '../../../services/solution-explorer-services/SolutionExplorerServiceFactory';\nimport {SolutionExplorerSolution} from '../solution-explorer-solution/solution-explorer-solution';\nimport {exposeFunctionForTesting} from '../../../services/expose-functionality-module/expose-functionality-module';\n\ninterface IUriToViewModelMap {\n  [key: string]: SolutionExplorerSolution;\n}\n\n@inject(\n  Router,\n  EventAggregator,\n  'SolutionExplorerServiceFactory',\n  'AuthenticationService',\n  'SolutionService',\n  'OpenDiagramService',\n)\nexport class SolutionExplorerList {\n  public internalProcessEngineVersion: string;\n  public internalSolutionUri: string;\n  public processEngineIsNewerModal: boolean = false;\n  public processEngineIsOlderModal: boolean = false;\n  /**\n   * Reference on the service used to open open diagrams.\n   * This service is also put inside the map.\n   */\n  public openDiagramService: OpenDiagramsSolutionExplorerService;\n\n  /*\n   * Keep a seperate map of all viewmodels for the solutions entries.\n   * The uri maps to the viewmodel. The contents of this map get set by aurelia\n   * in the html view.\n   */\n  public solutionEntryViewModels: IUriToViewModelMap = {};\n\n  private router: Router;\n  private eventAggregator: EventAggregator;\n  private solutionExplorerServiceFactory: SolutionExplorerServiceFactory;\n  private authenticationService: IAuthenticationService;\n  private solutionService: ISolutionService;\n  /*\n   * Contains all opened solutions.\n   */\n  private openedSolutions: Array<ISolutionEntry> = [];\n  private solutionsToOpen: Array<string> = [];\n  private solutionsWhoseOpeningShouldGetAborted: Array<string> = [];\n\n  constructor(\n    router: Router,\n    eventAggregator: EventAggregator,\n    solutionExplorerServiceFactory: SolutionExplorerServiceFactory,\n    authenticationService: IAuthenticationService,\n    solutionService: ISolutionService,\n    openDiagramService: OpenDiagramsSolutionExplorerService,\n  ) {\n    this.router = router;\n    this.eventAggregator = eventAggregator;\n    this.solutionExplorerServiceFactory = solutionExplorerServiceFactory;\n    this.authenticationService = authenticationService;\n    this.solutionService = solutionService;\n    this.openDiagramService = openDiagramService;\n\n    const canReadFromFileSystem: boolean = (window as any).nodeRequire;\n    if (canReadFromFileSystem) {\n      this.createOpenDiagramServiceEntry();\n    }\n\n    exposeFunctionForTesting('openSolution', (uri: string, insertAtBeginning?: boolean, identity?: IIdentity): void => {\n      this.openSolution(uri, insertAtBeginning, identity);\n    });\n\n    this.internalSolutionUri = window.localStorage.getItem('InternalProcessEngineRoute');\n  }\n\n  /**\n   * Refreshes all currently opened solutions.\n   */\n  public async refreshSolutions(): Promise<void> {\n    const refreshPromises: Array<Promise<void>> = Object.values(this.solutionEntryViewModels)\n      .filter((viewModel: SolutionExplorerSolution): boolean => {\n        const viewModelExists: boolean = viewModel !== undefined && viewModel !== null;\n        return viewModelExists;\n      })\n      .map(\n        (viewModel: SolutionExplorerSolution): Promise<void> => {\n          return viewModel.updateSolution();\n        },\n      );\n\n    await Promise.all(refreshPromises);\n  }\n\n  public toggleSolution(solutionEntry: ISolutionEntry): void {\n    solutionEntry.hidden = !solutionEntry.hidden;\n    this.solutionService.persistSolutionsInLocalStorage();\n  }\n\n  public solutionIsInternalSolution(solution: ISolutionEntry): boolean {\n    const solutionIsInternalSolution: boolean = solution.uri === this.internalSolutionUri;\n\n    return solutionIsInternalSolution;\n  }\n\n  public openSettings(): void {\n    this.router.navigateToRoute('settings');\n  }\n\n  public async openDiagram(uri: string): Promise<IDiagram> {\n    const identity: IIdentity = this.createIdentityForSolutionExplorer();\n\n    const diagram: IDiagram = await this.openDiagramService.openDiagram(uri, identity);\n\n    return diagram;\n  }\n\n  /**\n   * Gets the diagram with the given uri, if the diagram was opened\n   * before.\n   */\n  public getOpenedDiagramByURI(uri: string): IDiagram | null {\n    return this.openDiagramService.getOpenedDiagramByURI(uri);\n  }\n\n  public getOpenDiagramSolutionEntry(): ISolutionEntry {\n    return this.openedSolutions.find((entry: ISolutionEntry) => {\n      return entry.uri === 'about:open-diagrams';\n    });\n  }\n\n  public isProcessEngineNewerThanInternal(solutionEntry: ISolutionEntry): boolean {\n    const internalPEVersion = new SemVer(this.internalProcessEngineVersion);\n    const solutionEntryPEVersion = new SemVer(solutionEntry.processEngineVersion);\n\n    return internalPEVersion.major < solutionEntryPEVersion.major;\n  }\n\n  public isProcessEngineOlderThanInternal(solutionEntry: ISolutionEntry): boolean {\n    const internalPEVersion = new SemVer(this.internalProcessEngineVersion);\n    const solutionEntryPEVersion = new SemVer(solutionEntry.processEngineVersion);\n\n    return internalPEVersion.major > solutionEntryPEVersion.major;\n  }\n\n  public showNewerModal(event: Event): void {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.processEngineIsNewerModal = true;\n  }\n\n  public showOlderModal(event: Event): void {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.processEngineIsOlderModal = true;\n  }\n\n  public cancelOpeningSolution(solutionUri: string): void {\n    if (this.solutionsToOpen.includes(solutionUri)) {\n      this.solutionsWhoseOpeningShouldGetAborted.push(solutionUri);\n    }\n  }\n\n  public async openSolution(uri: string, insertAtBeginning: boolean = false, identity?: IIdentity): Promise<void> {\n    this.solutionsToOpen.push(uri);\n\n    this.internalProcessEngineVersion = await this.getProcessEngineVersionFromInternalPE(this.internalSolutionUri);\n    const uriIsRemote: boolean = uri.startsWith('http');\n\n    let solutionExplorer: ISolutionExplorerService;\n\n    if (uriIsRemote) {\n      solutionExplorer = await this.solutionExplorerServiceFactory.newManagementApiSolutionExplorer();\n    } else {\n      solutionExplorer = await this.solutionExplorerServiceFactory.newFileSystemSolutionExplorer();\n    }\n\n    const identityIsSet: boolean = identity !== undefined && identity !== null;\n\n    const identityToUse: IIdentity = identityIsSet ? identity : this.createIdentityForSolutionExplorer();\n\n    let processEngineVersion: string;\n    const uriIsNotInternalProcessEngine: boolean = this.internalSolutionUri !== uri;\n\n    try {\n      if (uriIsRemote && uriIsNotInternalProcessEngine) {\n        const response: Response = await new Promise(\n          async (resolve, reject): Promise<void> => {\n            const timeout: NodeJS.Timeout = setTimeout(() => {\n              if (this.solutionsWhoseOpeningShouldGetAborted.includes(uri)) {\n                this.openingSolutionWasCanceled(uri);\n\n                return;\n              }\n\n              reject(new Error('Server did not respond.'));\n            }, 3000);\n\n            try {\n              const fetchResponse: Response = await fetch(uri);\n              clearTimeout(timeout);\n\n              resolve(fetchResponse);\n            } catch (error) {\n              clearTimeout(timeout);\n\n              reject(error);\n            }\n          },\n        );\n\n        const responseJSON: object & {version: string} = await response.json();\n\n        if (this.solutionsWhoseOpeningShouldGetAborted.includes(uri)) {\n          this.openingSolutionWasCanceled(uri);\n\n          return;\n        }\n\n        const isResponseFromProcessEngine: boolean = responseJSON['name'] === '@process-engine/process_engine_runtime';\n        if (!isResponseFromProcessEngine) {\n          throw new Error('The response was not send by a ProcessEngine.');\n        }\n\n        processEngineVersion = responseJSON.version;\n      }\n\n      if (this.solutionsWhoseOpeningShouldGetAborted.includes(uri)) {\n        this.openingSolutionWasCanceled(uri);\n\n        return;\n      }\n\n      await solutionExplorer.openSolution(uri, identityToUse);\n\n      this.solutionsToOpen.splice(this.solutionsToOpen.indexOf(uri), 1);\n    } catch (error) {\n      this.solutionsToOpen.splice(this.solutionsToOpen.indexOf(uri), 1);\n      this.solutionService.removeSolutionEntryByUri(uri);\n\n      const errorIsNoProcessEngine: boolean =\n        error.message === 'The response was not send by a ProcessEngine.' ||\n        error.message === 'Unexpected token < in JSON at position 0' ||\n        error.message === 'Server did not respond.';\n      if (errorIsNoProcessEngine) {\n        throw new Error('There is no processengine running on this uri.');\n      }\n\n      const openSolutionFailedWithFailedToFetch: boolean = error.message === 'Failed to fetch';\n      if (openSolutionFailedWithFailedToFetch) {\n        if (!uriIsNotInternalProcessEngine) {\n          await this.getProcessEngineVersionFromInternalPE(uri);\n\n          this.openSolution(uri, insertAtBeginning, identityToUse);\n\n          return;\n        }\n        /**\n         * TODO: The error message only contains 'Failed to fetch' if the connection\n         * failed. A more detailed cause (such as Connection Refused) would\n         * be better. This needs to be implemented in the service or repository.\n         */\n        throw new Error('Failed to receive the list of ProcessModels from the endpoint');\n      }\n\n      throw error;\n    }\n\n    const newOpenedSolution: ISolution = await solutionExplorer.loadSolution();\n    const solutionURI: string = newOpenedSolution.uri;\n\n    const arrayAlreadyContainedURI: boolean = this.getIndexOfSolution(solutionURI) >= 0;\n\n    if (arrayAlreadyContainedURI) {\n      throw new Error('Solution is already opened.');\n    }\n\n    if (!processEngineVersion && !uriIsNotInternalProcessEngine) {\n      processEngineVersion = await this.getProcessEngineVersionFromInternalPE(uri);\n    }\n\n    this.addSolutionEntry(uri, solutionExplorer, identityToUse, insertAtBeginning, processEngineVersion);\n  }\n\n  /**\n   * Closes a solution, if the uri is currently not opened, nothing will\n   * happen.\n   *\n   * @param uri the uri of the solution to close.\n   */\n  public async closeSolution(uri: string): Promise<void> {\n    /**\n     * If the user closes the Solution which contains the diagram, which he still\n     * has opened, he gets navigated to the start page.\n     */\n    const currentOpenDiagram: string = this.router.currentInstruction.queryParams.solutionUri;\n    const diagramOfClosedSolutionOpen: boolean = uri.includes(currentOpenDiagram);\n\n    if (diagramOfClosedSolutionOpen) {\n      /**\n       * We only want to close the open Solution, if the user does not have\n       * unsaved changes.\n       */\n      const subscription: Subscription = this.eventAggregator.subscribe('router:navigation:success', () => {\n        this.cleanupSolution(uri);\n        subscription.dispose();\n      });\n\n      this.router.navigateToRoute('start-page');\n    } else {\n      this.cleanupSolution(uri);\n    }\n  }\n\n  public async login(solutionEntry: ISolutionEntry): Promise<void> {\n    const result: ILoginResult = await this.authenticationService.login(solutionEntry.authority);\n\n    const couldNotConnectToAuthority: boolean = result === undefined;\n    if (couldNotConnectToAuthority) {\n      return;\n    }\n\n    const userIsNotLoggedIn: boolean = result.idToken === 'access_denied';\n    if (userIsNotLoggedIn) {\n      return;\n    }\n\n    const identity: IIdentity = {\n      token: result.accessToken,\n      userId: result.idToken,\n    };\n\n    solutionEntry.identity = identity;\n    solutionEntry.isLoggedIn = true;\n    solutionEntry.userName = result.identity.name;\n\n    await solutionEntry.service.openSolution(solutionEntry.uri, solutionEntry.identity);\n    this.solutionService.persistSolutionsInLocalStorage();\n  }\n\n  public async logout(solutionEntry: ISolutionEntry): Promise<void> {\n    await this.authenticationService.logout(solutionEntry.authority, solutionEntry.identity);\n\n    solutionEntry.identity = this.createIdentityForSolutionExplorer();\n    solutionEntry.isLoggedIn = false;\n    solutionEntry.userName = undefined;\n\n    await solutionEntry.service.openSolution(solutionEntry.uri, solutionEntry.identity);\n    this.solutionService.persistSolutionsInLocalStorage();\n\n    this.router.navigateToRoute('start-page');\n  }\n\n  /**\n   * Starts the creation process of a new diagram inside the given solution\n   * entry.\n   */\n  public async createDiagram(solutionEntryOrUri: any): Promise<void> {\n    const hiddenPropertyExists: boolean = solutionEntryOrUri.hidden !== undefined;\n    if (hiddenPropertyExists && solutionEntryOrUri.hidden) {\n      this.toggleSolution(solutionEntryOrUri);\n    }\n\n    const uri: string = solutionEntryOrUri.uri ? solutionEntryOrUri.uri : solutionEntryOrUri;\n\n    let viewModelOfEntry: SolutionExplorerSolution = this.solutionEntryViewModels[uri];\n\n    const solutionIsNotOpened: boolean = viewModelOfEntry === undefined || viewModelOfEntry === null;\n    if (solutionIsNotOpened) {\n      const uriIsOpenDiagrams: boolean = uri.startsWith('about:open-diagrams');\n      if (uriIsOpenDiagrams) {\n        this.openDiagramService.isCreatingDiagram = true;\n      } else {\n        await this.openSolution(uri);\n      }\n    }\n\n    /**\n     * Waiting for next tick of the browser here because the new solution wouldn't\n     * be added if we wouldn't do that.\n     */\n    window.setTimeout(() => {\n      if (solutionIsNotOpened) {\n        viewModelOfEntry = this.solutionEntryViewModels[uri];\n      }\n\n      viewModelOfEntry.startCreationOfNewDiagram();\n      this.openDiagramService.isCreatingDiagram = false;\n    }, 0);\n  }\n\n  public getSolutionName(solutionUri: string): string {\n    const solutionIsRemote: boolean = solutionUri.startsWith('http');\n    if (solutionIsRemote) {\n      return solutionUri;\n    }\n\n    const isOpenDiagrams: boolean = solutionUri === 'about:open-diagrams';\n    if (isOpenDiagrams) {\n      return 'Open Diagrams';\n    }\n\n    const lastIndexOfSlash: number = solutionUri.lastIndexOf('/');\n    const lastIndexOfBackSlash: number = solutionUri.lastIndexOf('\\\\');\n    const lastFolderIndex: number = Math.max(lastIndexOfSlash, lastIndexOfBackSlash) + 1;\n\n    const solutionName: string = solutionUri.substring(lastFolderIndex);\n\n    const solutionNameIsEmpty: boolean = solutionName.length === 0;\n    if (solutionNameIsEmpty) {\n      return solutionUri;\n    }\n\n    return solutionName;\n  }\n\n  public solutionEntryIsRemote(solutionEntry: ISolutionEntry): boolean {\n    return solutionEntry.uri.startsWith('http');\n  }\n\n  /*\n   * Give aurelia a hint on what objects to observe.\n   * If we dont do this, it falls back to active pooling which is slow.\n   * `openDiagramService._openedDiagrams.length` observed because\n   * aurelia cannot see the business rules happening in this._shouldDisplaySolution().\n   */\n  @computedFrom(\n    'openedSolutions.length',\n    'openDiagramService.openedDiagrams.length',\n    'openDiagramService.isCreatingDiagram',\n  )\n  public get openedSolutionsToDisplay(): Array<ISolutionEntry> {\n    const filteredEntries: Array<ISolutionEntry> = this.openedSolutions.filter(this.shouldDisplaySolution);\n\n    const sortedEntries: Array<ISolutionEntry> = filteredEntries.sort(\n      (solutionA: ISolutionEntry, solutionB: ISolutionEntry) => {\n        if (solutionA.isOpenDiagramService) {\n          return -1;\n        }\n\n        const solutionAIsInternalProcessEngine: boolean =\n          solutionA.uri === window.localStorage.getItem('InternalProcessEngineRoute');\n        if (solutionAIsInternalProcessEngine || solutionB.isOpenDiagramService) {\n          return 1;\n        }\n\n        return solutionA.uri.startsWith('http') && !solutionB.uri.startsWith('http') ? 1 : -1;\n      },\n    );\n\n    return sortedEntries;\n  }\n\n  private openingSolutionWasCanceled(solutionUri: string): void {\n    this.solutionsWhoseOpeningShouldGetAborted.splice(\n      this.solutionsWhoseOpeningShouldGetAborted.indexOf(solutionUri),\n      1,\n    );\n    this.solutionsToOpen.splice(this.solutionsToOpen.indexOf(solutionUri), 1);\n  }\n\n  private getProcessEngineVersionFromInternalPE(uri: string): Promise<string> {\n    return new Promise((resolve: Function): void => {\n      const makeRequest: Function = (): void => {\n        setTimeout(async () => {\n          try {\n            const response: Response = await fetch(uri);\n            const responseJSON: any = await response.json();\n\n            resolve(responseJSON.version);\n          } catch (error) {\n            makeRequest();\n          }\n          // tslint:disable-next-line: no-magic-numbers\n        }, 100);\n      };\n\n      makeRequest();\n    });\n  }\n\n  private cleanupSolution(uri: string): void {\n    const indexOfSolutionToBeRemoved: number = this.getIndexOfSolution(uri);\n\n    const uriNotFound: boolean = indexOfSolutionToBeRemoved < 0;\n    if (uriNotFound) {\n      return;\n    }\n    this.openedSolutions.splice(indexOfSolutionToBeRemoved, 1);\n\n    const entryToRemove: ISolutionEntry = this.solutionService.getSolutionEntryForUri(uri);\n    this.solutionService.removeSolutionEntryByUri(entryToRemove.uri);\n  }\n  /**\n   * Add entry for single file service.\n   */\n\n  private createOpenDiagramServiceEntry(): void {\n    const identity: IIdentity = this.createIdentityForSolutionExplorer();\n\n    this.addSolutionEntry('about:open-diagrams', this.openDiagramService, identity, true);\n  }\n\n  private getFontAwesomeIconForSolution(service: ISolutionExplorerService, uri: string): string {\n    const solutionIsOpenedFromRemote: boolean = uri.startsWith('http');\n    if (solutionIsOpenedFromRemote) {\n      return 'fa-database';\n    }\n\n    const solutionIsOpenDiagrams: boolean = service === this.openDiagramService;\n    if (solutionIsOpenDiagrams) {\n      return 'fa-copy';\n    }\n\n    return 'fa-folder';\n  }\n\n  private canCreateNewDiagramsInSolution(service: ISolutionExplorerService, uri: string): boolean {\n    const solutionIsNotOpenedFromRemote: boolean = !uri.startsWith('http');\n    const solutionIsNotOpenDiagrams: boolean = service !== this.openDiagramService;\n\n    return solutionIsNotOpenedFromRemote && solutionIsNotOpenDiagrams;\n  }\n\n  private canCloseSolution(service: ISolutionExplorerService, uri: string): boolean {\n    const solutionIsNotOpenDiagrams: boolean = !this.isOpenDiagramService(service);\n\n    const internalProcessEngineRoute: string = window.localStorage.getItem('InternalProcessEngineRoute');\n    const solutionIsNotInternalSolution: boolean = uri !== internalProcessEngineRoute;\n\n    return solutionIsNotOpenDiagrams && solutionIsNotInternalSolution;\n  }\n\n  private isOpenDiagramService(service: ISolutionExplorerService): boolean {\n    return service === this.openDiagramService;\n  }\n\n  private shouldDisplaySolution: (value: ISolutionEntry, index: number, array: Array<ISolutionEntry>) => boolean = (\n    entry: ISolutionEntry,\n  ): boolean => {\n    const service: ISolutionExplorerService = entry.service;\n\n    const isOpenDiagramService: boolean = (service as any).getOpenedDiagrams !== undefined;\n    if (isOpenDiagramService) {\n      const openDiagramService: OpenDiagramsSolutionExplorerService = service as OpenDiagramsSolutionExplorerService;\n\n      const someDiagramsAreOpened: boolean = openDiagramService.getOpenedDiagrams().length > 0;\n      const isCreatingDiagram: boolean = this.openDiagramService.isCreatingDiagram;\n\n      return someDiagramsAreOpened || isCreatingDiagram;\n    }\n\n    return true;\n  };\n\n  private getIndexOfSolution(uri: string): number {\n    const indexOfSolutionWithURI: number = this.openedSolutions.findIndex((element: ISolutionEntry): boolean => {\n      return element.uri === uri;\n    });\n\n    return indexOfSolutionWithURI;\n  }\n\n  private async addSolutionEntry(\n    uri: string,\n    service: ISolutionExplorerService,\n    identity: IIdentity,\n    insertAtBeginning: boolean,\n    processEngineVersion?: string,\n  ): Promise<void> {\n    const isOpenDiagramService: boolean = this.isOpenDiagramService(service);\n    const fontAwesomeIconClass: string = this.getFontAwesomeIconForSolution(service, uri);\n    const canCloseSolution: boolean = this.canCloseSolution(service, uri);\n    const canCreateNewDiagramsInSolution: boolean = this.canCreateNewDiagramsInSolution(service, uri);\n    const authority: string = await this.getAuthorityForSolution(uri);\n    const hidden: boolean = this.getHiddenStateForSolutionUri(uri);\n\n    const authorityIsUndefined: boolean = authority === undefined;\n\n    const isLoggedIn: boolean = authorityIsUndefined\n      ? false\n      : await this.authenticationService.isLoggedIn(authority, identity);\n\n    let userName: string;\n\n    if (isLoggedIn) {\n      const userIdentity: IUserIdentity = await this.authenticationService.getUserIdentity(authority, identity);\n      userName = userIdentity.name;\n    }\n\n    const entry: ISolutionEntry = {\n      uri,\n      service,\n      fontAwesomeIconClass,\n      canCloseSolution,\n      canCreateNewDiagramsInSolution,\n      isOpenDiagramService,\n      identity,\n      authority,\n      isLoggedIn,\n      userName,\n      processEngineVersion,\n      hidden,\n    };\n\n    this.solutionService.addSolutionEntry(entry);\n\n    if (insertAtBeginning) {\n      this.openedSolutions.splice(1, 0, entry);\n    } else {\n      this.openedSolutions.push(entry);\n    }\n  }\n\n  private getHiddenStateForSolutionUri(uri: string): boolean {\n    const solutionIsOpenDiagrams: boolean = uri === 'about:open-diagrams';\n    if (solutionIsOpenDiagrams) {\n      const solutionCollapseState: boolean = JSON.parse(\n        window.localStorage.getItem('openDiagramSolutionCollapseState'),\n      );\n      // eslint-disable-next-line no-unneeded-ternary\n      return solutionCollapseState ? solutionCollapseState : false;\n    }\n\n    const persistedSolutions: Array<ISolutionEntry> = this.solutionService.getPersistedEntries();\n    const solutionToLoad: ISolutionEntry = persistedSolutions.find((solution: ISolutionEntry) => solution.uri === uri);\n\n    if (!solutionToLoad) {\n      return false;\n    }\n\n    return solutionToLoad.hidden ? solutionToLoad.hidden : false;\n  }\n\n  private createIdentityForSolutionExplorer(): IIdentity {\n    const accessToken: string = this.createDummyAccessToken();\n    // TODO: Get the identity from the IdentityService of `@process-engine/iam`\n    const identity: IIdentity = {\n      token: accessToken,\n      userId: '', // Provided by the IdentityService.\n    };\n\n    return identity;\n  }\n\n  private async getAuthorityForSolution(solutionUri: string): Promise<string> {\n    const solutionIsNotRemote: boolean = !solutionUri.startsWith('http');\n\n    if (solutionIsNotRemote) {\n      return undefined;\n    }\n\n    const request: Request = new Request(`${solutionUri}/security/authority`, {\n      method: 'GET',\n      mode: 'cors',\n      referrer: 'no-referrer',\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json',\n      },\n    });\n\n    const response: Response = await fetch(request);\n    const authority: string = (await response.json()).authority;\n\n    return authority;\n  }\n\n  private createDummyAccessToken(): string {\n    const dummyAccessTokenString: string = 'dummy_token';\n    const base64EncodedString: string = btoa(dummyAccessTokenString);\n\n    return base64EncodedString;\n  }\n}\n",".solution-explorer-list {\n  position: absolute;\n  width: 100%;\n  max-height: 100%;\n  overflow-y: auto;\n}\n\n.solution-entry {\n  border-bottom: 2px solid #dcdbdb;\n}\n\n.solution-entry:last-child {\n  margin-bottom: 40px;\n  border-bottom: none;\n}\n\n.solution-entry__header {\n  display: flex;\n  max-height: 26px;\n  padding: 2.5px 5px;\n  padding-bottom: 2px;\n  color: darkgray;\n  cursor: pointer;\n}\n\n.solution-entry__header:hover {\n  background-color: rgba(230, 230, 230, 0.6);\n}\n\n.solution-entry__header button {\n  padding: 0 2px;\n  background: transparent;\n  border: none;\n}\n\n.solution-entry__header button:hover {\n  cursor: default;\n}\n\n.solution-entry__solution-icon {\n  flex: 0;\n  margin-top: 3px;\n  margin-right: 6px;\n}\n\n.solution-entry__solution-name {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.solution-entry__solution-path {\n  overflow: hidden;\n  margin-left: 10px;\n  margin-top: 2px;\n  padding-left: 5px;\n  font-size: 12px;\n  color: #ccc;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.solution-entry__actions {\n  position: absolute;\n  right: 5px;\n  display: none;\n}\n\n.solution-entry__actions_remote-solution {\n  display: none;  \n}\n\n.login-logout-button {\n  padding: 0;\n  border: none;\n  background: inherit;\n}\n\n@media (any-hover: none) {\n  .solution-entry__actions {\n    display: flex;\n  }\n\n  .solution-entry__actions_remote-solution {\n    display: flex;\n    position: absolute;\n    right: 5px;\n  }\n}\n\n.solution-entry:hover .solution-entry__actions {\n  display: flex;\n  background-color: rgb(246, 246, 246);\n}\n\n.solution-entry:hover .solution-entry__actions_remote-solution {\n  display: flex;\n  position: absolute;\n  right: 5px;\n}\n\n.solution-entry:hover .solution-entry__header:hover .solution-entry__actions {\n  background-color: rgb(234, 234, 234);\n}\n\n.solution-entry__left-icon_and_name {\n  display: flex;\n  float: left;\n  height: 20px;\n  max-width: 200px;\n}\n\n.solution-entry__actions button {\n  padding: 0 2px;\n  background: transparent;\n  border: none;\n}\n\n.solution-entry__actions button:hover {\n  cursor: default;\n}\n\n.solution-entry__collapse-header {\n  max-width: 240px;\n}\n\n.collapse__icon {\n  width: 10px;\n  padding-top: 2px;\n  padding-right: 14px;\n  margin-left: 2px;\n}\n\n.version-info {\n  padding-top: 3px;\n  padding-right: 5px;\n}\n\n.version-info--old {\n  color: #ffc107;\n}\n\n.version-info--new {\n  color: #007bffd4;\n}\n",null,"import {EventAggregator, Subscription} from 'aurelia-event-aggregator';\nimport {bindable, computedFrom, inject, observable} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\n\nimport {IDiagram} from '@process-engine/solutionexplorer.contracts';\n\nimport {\n  AuthenticationStateEvent,\n  IFile,\n  IInputEvent,\n  ISolutionEntry,\n  ISolutionService,\n  NotificationType,\n  StudioVersion,\n} from '../../../contracts/index';\n\nimport environment from '../../../environment';\nimport {NotificationService} from '../../../services/notification-service/notification.service';\nimport {SolutionExplorerList} from '../solution-explorer-list/solution-explorer-list';\n\nimport {getPortListByVersion} from '../../../services/default-ports-module/default-ports-module';\n\ntype RemoteSolutionListEntry = {\n  uri: string;\n  status: boolean;\n  version?: StudioVersion;\n};\n\n/**\n * This component handels:\n *  - Opening files via drag and drop\n *  - Opening files via double click\n *  - Opening solution/diagrams via input field\n *  - Refreshing all opened solutions via button\n *  - Refreshing on login/logout\n *  - Updating the remote processengine uri if needed\n */\n@inject(EventAggregator, 'NotificationService', Router, 'SolutionService')\nexport class SolutionExplorerPanel {\n  @observable public selectedProtocol: string = 'http://';\n\n  // Fields below are bound from the html view.\n  public solutionExplorerList: SolutionExplorerList;\n  public solutionInput: HTMLInputElement;\n  public openDiagramInput: HTMLInputElement;\n  public showOpenRemoteSolutionModal: boolean = false;\n  @bindable public uriOfRemoteSolutionWithoutProtocol: string;\n  public solutionExplorerPanel: SolutionExplorerPanel = this;\n  public remoteSolutionHistoryStatus: Map<string, boolean> = new Map<string, boolean>();\n  public availableDefaultRemoteSolutions: Array<RemoteSolutionListEntry> = [];\n  public isConnecting: boolean = false;\n  public connectionError: string;\n\n  private eventAggregator: EventAggregator;\n  private notificationService: NotificationService;\n  private router: Router;\n  // TODO: Add typings\n  private ipcRenderer: any | null = null;\n  private subscriptions: Array<Subscription> = [];\n  private solutionService: ISolutionService;\n  private remoteSolutionHistoryStatusPollingTimer: NodeJS.Timer;\n  private remoteSolutionHistoryStatusIsPolling: boolean;\n\n  constructor(\n    eventAggregator: EventAggregator,\n    notificationService: NotificationService,\n    router: Router,\n    solutionService: ISolutionService,\n  ) {\n    this.eventAggregator = eventAggregator;\n    this.notificationService = notificationService;\n    this.router = router;\n    this.solutionService = solutionService;\n\n    if (this.canReadFromFileSystem()) {\n      this.ipcRenderer = (window as any).nodeRequire('electron').ipcRenderer;\n    }\n  }\n\n  public async bind(): Promise<void> {\n    // Open the solution of the currently configured processengine instance on startup.\n    const uriOfProcessEngine: string = window.localStorage.getItem('InternalProcessEngineRoute');\n\n    const persistedInternalSolution: ISolutionEntry = this.solutionService.getSolutionEntryForUri(uriOfProcessEngine);\n    const internalSolutionWasPersisted: boolean = persistedInternalSolution !== undefined;\n\n    try {\n      if (internalSolutionWasPersisted) {\n        this.solutionExplorerList.openSolution(uriOfProcessEngine, false, persistedInternalSolution.identity);\n      } else {\n        this.solutionExplorerList.openSolution(uriOfProcessEngine);\n      }\n    } catch {\n      return;\n    }\n\n    // Open the previously opened solutions.\n    const previouslyOpenedSolutions: Array<ISolutionEntry> = this.solutionService.getPersistedEntries();\n    previouslyOpenedSolutions.forEach((entry: ISolutionEntry) => {\n      // We are not adding the solution of the connect PE here again since that happened above.\n      const entryIsNotConnectedProcessEngine: boolean = entry.uri !== uriOfProcessEngine;\n      if (entryIsNotConnectedProcessEngine) {\n        /**\n         * Since we can't distinguish if the persisted ProcessEngine was an\n         * internal or external one yet, we consume any connection error\n         * produced by the openSolution method.\n         */\n        try {\n          this.solutionExplorerList.openSolution(entry.uri, false, entry.identity);\n        } catch (error) {\n          // Do nothing\n        }\n      }\n    });\n\n    const persistedOpenDiagrams: Array<IDiagram> = this.solutionService.getOpenDiagrams();\n    persistedOpenDiagrams.forEach(async (diagram: IDiagram) => {\n      try {\n        await this.solutionExplorerList.openDiagram(diagram.uri);\n      } catch {\n        // Do nothing\n      }\n    });\n  }\n\n  public async attached(): Promise<void> {\n    if (this.canReadFromFileSystem()) {\n      this.registerElectronHooks();\n      document.addEventListener('drop', this.openDiagramOnDropBehaviour);\n    }\n\n    this.subscriptions = [\n      this.eventAggregator.subscribe(environment.events.diagramDetail.onDiagramDeployed, () => {\n        this.refreshSolutions();\n      }),\n      this.eventAggregator.subscribe(environment.events.startPage.openLocalSolution, () => {\n        this.openSolution();\n      }),\n      this.eventAggregator.subscribe(environment.events.startPage.openDiagram, () => {\n        this.openDiagram();\n      }),\n      this.eventAggregator.subscribe(environment.events.startPage.createDiagram, () => {\n        this.createNewDiagram();\n      }),\n      this.eventAggregator.subscribe(AuthenticationStateEvent.LOGOUT, () => {\n        this.solutionExplorerList.refreshSolutions();\n      }),\n    ];\n  }\n\n  public detached(): void {\n    if (this.canReadFromFileSystem()) {\n      this.removeElectronFileOpeningHooks();\n      document.removeEventListener('drop', this.openDiagramOnDropBehaviour);\n    }\n\n    for (const subscription of this.subscriptions) {\n      subscription.dispose();\n    }\n  }\n\n  public async openRemoteSolutionModal(): Promise<void> {\n    this.showOpenRemoteSolutionModal = true;\n\n    await this.updateRemoteSolutionHistoryStatus();\n    this.startPollingOfRemoteSolutionHistoryStatus();\n    this.updateDefaultRemoteSolutions();\n  }\n\n  public removeSolutionFromHistory(solutionUri: string): void {\n    this.removeSolutionFromSolutionHistroy(solutionUri);\n  }\n\n  public selectProtocol(protocol: string): void {\n    this.selectedProtocol = protocol;\n  }\n\n  public closeRemoteSolutionModal(): void {\n    this.stopPollingOfRemoteSolutionHistoryStatus();\n    this.solutionExplorerList.cancelOpeningSolution(this.uriOfRemoteSolution);\n    this.isConnecting = false;\n    this.showOpenRemoteSolutionModal = false;\n    this.uriOfRemoteSolutionWithoutProtocol = undefined;\n    this.connectionError = undefined;\n  }\n\n  public async openRemoteSolution(): Promise<void> {\n    if (!this.uriIsValid || this.uriIsEmpty) {\n      return;\n    }\n\n    this.connectionError = undefined;\n\n    try {\n      const lastCharacterIsASlash: boolean = this.uriOfRemoteSolutionWithoutProtocol.endsWith('/');\n      if (lastCharacterIsASlash) {\n        this.uriOfRemoteSolutionWithoutProtocol = this.uriOfRemoteSolutionWithoutProtocol.slice(0, -1);\n      }\n\n      await this.addSolutionToRemoteSolutionHistory(this.uriOfRemoteSolution);\n\n      this.isConnecting = true;\n      await this.solutionExplorerList.openSolution(this.uriOfRemoteSolution);\n      this.isConnecting = false;\n    } catch (error) {\n      this.isConnecting = false;\n\n      const genericMessage: string = `Unable to connect to ProcessEngine on: ${this.uriOfRemoteSolution}`;\n      const cause: string = error.message ? error.message : '';\n\n      this.connectionError = `${genericMessage}\\n${cause}`;\n\n      return;\n    }\n\n    this.closeRemoteSolutionModal();\n  }\n\n  public get connectionErrorExists(): boolean {\n    return this.connectionError !== undefined;\n  }\n\n  public get remoteSolutionHistoryWithStatus(): Array<RemoteSolutionListEntry> {\n    return this.loadRemoteSolutionHistory()\n      .reverse()\n      .map((solutionUri: string) => {\n        return {\n          uri: solutionUri,\n          status: this.remoteSolutionHistoryStatus.get(solutionUri),\n        };\n      });\n  }\n\n  @computedFrom('suggestedRemoteSolutions.length')\n  public get unconnectedSuggestedRemoteSolutions(): Array<RemoteSolutionListEntry> {\n    const connectedSolutions: Array<ISolutionEntry> = this.solutionService.getAllSolutionEntries();\n\n    const unconnectedSuggestedRemoteSolutions: Array<RemoteSolutionListEntry> = this.suggestedRemoteSolutions.filter(\n      (remoteSolution) => {\n        return !connectedSolutions.some((connectedSolution: ISolutionEntry) => {\n          return connectedSolution.uri === remoteSolution.uri;\n        });\n      },\n    );\n\n    return unconnectedSuggestedRemoteSolutions;\n  }\n\n  @computedFrom('availableDefaultRemoteSolutions.length', 'remoteSolutionHistoryWithStatus.length')\n  public get suggestedRemoteSolutions(): Array<RemoteSolutionListEntry> {\n    const filteredRemoteSolutionHistory: Array<RemoteSolutionListEntry> = this.remoteSolutionHistoryWithStatus.filter(\n      (remoteSolution: RemoteSolutionListEntry) => {\n        const remoteSolutionIsDefaultRemoteSolution: boolean = this.availableDefaultRemoteSolutions.some(\n          (defaultRemoteSolution: RemoteSolutionListEntry) => {\n            return defaultRemoteSolution.uri === remoteSolution.uri;\n          },\n        );\n\n        return !remoteSolutionIsDefaultRemoteSolution;\n      },\n    );\n\n    const suggestedRemoteSolutions: Array<RemoteSolutionListEntry> = [\n      ...this.availableDefaultRemoteSolutions,\n      ...filteredRemoteSolutionHistory,\n    ];\n\n    return suggestedRemoteSolutions;\n  }\n\n  @computedFrom('unconnectedSuggestedRemoteSolutions.length')\n  public get unconnectedSuggestedRemoteSolutionsExist(): boolean {\n    return this.unconnectedSuggestedRemoteSolutions.length > 0;\n  }\n\n  /**\n   * Handles the file input for the FileSystem Solutions.\n   * @param event A event that holds the files that were \"uploaded\" by the user.\n   * Currently there is no type for this kind of event.\n   */\n  public async onSolutionInputChange(event: IInputEvent): Promise<void> {\n    const uri: string = event.target.files[0].path;\n    this.solutionInput.value = '';\n\n    this.openSolutionOrDisplayError(uri);\n  }\n\n  /**\n   * Handles the file input change event for the open file input.\n   * @param event An event that holds the files that were \"uploaded\" by the user.\n   * Currently there is no type for this kind of event.\n   */\n  public async onOpenDiagramInputChange(event: IInputEvent): Promise<void> {\n    const uri: string = event.target.files[0].path;\n    this.openDiagramInput.value = '';\n\n    return this.openDiagramOrDisplayError(uri);\n  }\n\n  public async openDiagram(): Promise<void> {\n    const canNotReadFromFileSystem: boolean = !this.canReadFromFileSystem();\n    if (canNotReadFromFileSystem) {\n      this.openDiagramInput.click();\n\n      return;\n    }\n\n    this.ipcRenderer.send('open_diagram');\n\n    this.ipcRenderer.once('import_opened_diagram', async (event: Event, openedFile: File) => {\n      const noFileSelected: boolean = openedFile === null;\n      if (noFileSelected) {\n        return;\n      }\n\n      const filePath: string = openedFile[0];\n\n      await this.openDiagramOrDisplayError(filePath);\n    });\n  }\n\n  public get uriOfRemoteSolution(): string {\n    return `${this.selectedProtocol}${this.uriOfRemoteSolutionWithoutProtocol}`;\n  }\n\n  public get uriIsValid(): boolean {\n    /**\n     * This RegEx checks if the entered URI is valid or not.\n     */\n    // TODO Check if this still works\n    const urlRegEx: RegExp = /^(?:http(s)?:\\/\\/)+[\\w.-]?[\\w\\-._~:/?#[\\]@!$&'()*+,;=.]+$/g;\n    const uriIsValid: boolean = urlRegEx.test(this.uriOfRemoteSolution);\n\n    return uriIsValid;\n  }\n\n  public get uriIsEmpty(): boolean {\n    const uriIsEmtpy: boolean =\n      this.uriOfRemoteSolutionWithoutProtocol === undefined || this.uriOfRemoteSolutionWithoutProtocol.length === 0;\n\n    return uriIsEmtpy;\n  }\n\n  public async openSolution(): Promise<void> {\n    const canNotReadFromFileSystem: boolean = !this.canReadFromFileSystem();\n    if (canNotReadFromFileSystem) {\n      this.solutionInput.click();\n\n      return;\n    }\n\n    this.ipcRenderer.send('open_solution');\n\n    this.ipcRenderer.once('import_opened_solution', async (event: Event, openedFolder: File) => {\n      const noFolderSelected: boolean = openedFolder === null;\n      if (noFolderSelected) {\n        return;\n      }\n\n      const folderPath: string = openedFolder[0];\n      await this.openSolutionOrDisplayError(folderPath);\n    });\n  }\n\n  public getBadgeForVersion(version: StudioVersion): string {\n    switch (version) {\n      case StudioVersion.Dev:\n        return 'remote-solution-badge__dev';\n      case StudioVersion.Alpha:\n        return 'remote-solution-badge__alpha';\n      case StudioVersion.Beta:\n        return 'remote-solution-badge__beta';\n      case StudioVersion.Stable:\n        return 'remote-solution-badge__stable';\n      default:\n        return 'remote-solution-badge__dev';\n    }\n  }\n\n  public getVersionNameForVersion(version: StudioVersion): string {\n    switch (version) {\n      case StudioVersion.Dev:\n        return 'Development';\n      case StudioVersion.Alpha:\n        return 'BPMN Studio Alpha';\n      case StudioVersion.Beta:\n        return 'BPMN Studio Beta';\n      case StudioVersion.Stable:\n        return 'BPMN Studio';\n      default:\n        return 'Development';\n    }\n  }\n\n  public canReadFromFileSystem(): boolean {\n    return (window as any).nodeRequire;\n  }\n\n  public selectRemoteSolution(remoteSolutionUri: string): void {\n    // tslint:disable-next-line no-magic-numbers\n    const protocolEndIndex: number = remoteSolutionUri.indexOf('//') + 2;\n    const protocol: string = remoteSolutionUri.substring(0, protocolEndIndex);\n\n    const uri: string = remoteSolutionUri.substring(protocolEndIndex, remoteSolutionUri.length);\n\n    this.selectProtocol(protocol);\n    this.uriOfRemoteSolutionWithoutProtocol = uri;\n  }\n\n  private startPollingOfRemoteSolutionHistoryStatus(): void {\n    this.remoteSolutionHistoryStatusIsPolling = true;\n    this.pollRemoteSolutionHistoryStatus();\n  }\n\n  private pollRemoteSolutionHistoryStatus(): void {\n    this.remoteSolutionHistoryStatusPollingTimer = setTimeout(async () => {\n      await this.updateRemoteSolutionHistoryStatus();\n\n      if (!this.remoteSolutionHistoryStatusIsPolling) {\n        return;\n      }\n\n      this.pollRemoteSolutionHistoryStatus();\n    }, environment.processengine.updateRemoteSolutionHistoryIntervalInMs);\n  }\n\n  private stopPollingOfRemoteSolutionHistoryStatus(): void {\n    const noTimerExisting: boolean = this.remoteSolutionHistoryStatusPollingTimer === undefined;\n    if (noTimerExisting) {\n      return;\n    }\n\n    clearTimeout(this.remoteSolutionHistoryStatusPollingTimer);\n\n    this.remoteSolutionHistoryStatusPollingTimer = undefined;\n    this.remoteSolutionHistoryStatusIsPolling = false;\n  }\n\n  private async updateRemoteSolutionHistoryStatus(): Promise<void> {\n    this.remoteSolutionHistoryWithStatus.forEach(\n      async (remoteSolutionWithStatus: RemoteSolutionListEntry): Promise<void> => {\n        const remoteSolutionStatus: boolean = await this.isRemoteSolutionActive(remoteSolutionWithStatus.uri);\n\n        this.remoteSolutionHistoryStatus.set(remoteSolutionWithStatus.uri, remoteSolutionStatus);\n      },\n    );\n  }\n\n  private async updateDefaultRemoteSolutions(): Promise<void> {\n    this.availableDefaultRemoteSolutions = [];\n\n    const stableRemoteSolution: Promise<RemoteSolutionListEntry | null> = this.searchDefaultRemoteSolutionForVersion(\n      StudioVersion.Stable,\n    );\n    const betaRemoteSolution: Promise<RemoteSolutionListEntry | null> = this.searchDefaultRemoteSolutionForVersion(\n      StudioVersion.Beta,\n    );\n    const alphaRemoteSolution: Promise<RemoteSolutionListEntry | null> = this.searchDefaultRemoteSolutionForVersion(\n      StudioVersion.Alpha,\n    );\n    const devRemoteSolution: Promise<RemoteSolutionListEntry | null> = this.searchDefaultRemoteSolutionForVersion(\n      StudioVersion.Dev,\n    );\n\n    const availableRemoteSolutions: Array<RemoteSolutionListEntry> = await Promise.all([\n      stableRemoteSolution,\n      betaRemoteSolution,\n      alphaRemoteSolution,\n      devRemoteSolution,\n    ]);\n\n    this.availableDefaultRemoteSolutions = availableRemoteSolutions.filter(\n      (remoteSolution: RemoteSolutionListEntry | null) => {\n        return remoteSolution !== null;\n      },\n    );\n  }\n\n  private async searchDefaultRemoteSolutionForVersion(version: StudioVersion): Promise<RemoteSolutionListEntry | null> {\n    const portsToCheck: Array<number> = getPortListByVersion(version);\n\n    const processEngineUri: string = await this.getActiveProcessEngineForPortList(portsToCheck);\n\n    const noActiveProcessEngineFound: boolean = processEngineUri === null;\n    if (noActiveProcessEngineFound) {\n      return null;\n    }\n\n    return {\n      uri: processEngineUri,\n      status: true,\n      version: version,\n    };\n  }\n\n  private async getActiveProcessEngineForPortList(portsToCheck: Array<number>): Promise<string | null> {\n    for (const port of portsToCheck) {\n      const uriToCheck: string = `http://localhost:${port}`;\n      const processEngineFound: boolean = await this.isRemoteSolutionActive(uriToCheck);\n\n      if (processEngineFound) {\n        return uriToCheck;\n      }\n    }\n\n    return null;\n  }\n\n  private async isRemoteSolutionActive(remoteSolutionUri: string): Promise<boolean> {\n    try {\n      const response: Response = await fetch(remoteSolutionUri);\n\n      const data: JSON = await response.json();\n\n      const isResponseFromProcessEngine: boolean = data['name'] === '@process-engine/process_engine_runtime';\n      if (!isResponseFromProcessEngine) {\n        throw new Error('The response was not send by a ProcessEngine.');\n      }\n\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  private async refreshSolutions(): Promise<void> {\n    return this.solutionExplorerList.refreshSolutions();\n  }\n\n  private async openSolutionOrDisplayError(uri: string): Promise<void> {\n    try {\n      await this.solutionExplorerList.openSolution(uri);\n    } catch (error) {\n      this.notificationService.showNotification(NotificationType.ERROR, error.message);\n    }\n  }\n\n  private loadRemoteSolutionHistory(): Array<string> {\n    const remoteSolutionHistoryFromLocalStorage: string | null = localStorage.getItem('remoteSolutionHistory');\n    const noHistoryExisting: boolean = remoteSolutionHistoryFromLocalStorage === null;\n    const remoteSolutionHistory: Array<string> = noHistoryExisting\n      ? []\n      : JSON.parse(remoteSolutionHistoryFromLocalStorage);\n\n    return remoteSolutionHistory;\n  }\n\n  private saveRemoteSolutionHistory(remoteSolutionHistory: Array<string>): void {\n    const remoteSolutionHistoryString: string = JSON.stringify(remoteSolutionHistory);\n\n    localStorage.setItem('remoteSolutionHistory', remoteSolutionHistoryString);\n  }\n\n  private addSolutionToRemoteSolutionHistory(solutionUri: string): void {\n    this.removeSolutionFromSolutionHistroy(solutionUri);\n\n    const remoteSolutionHistory: Array<string> = this.loadRemoteSolutionHistory();\n\n    remoteSolutionHistory.push(solutionUri);\n\n    this.saveRemoteSolutionHistory(remoteSolutionHistory);\n  }\n\n  private removeSolutionFromSolutionHistroy(solutionUri: string): void {\n    const remoteSolutionHistory: Array<string> = this.loadRemoteSolutionHistory();\n\n    const uniqueRemoteSolutionHistory: Array<string> = remoteSolutionHistory.filter((remoteSolutionUri: string) => {\n      return remoteSolutionUri !== solutionUri;\n    });\n\n    this.saveRemoteSolutionHistory(uniqueRemoteSolutionHistory);\n  }\n\n  private async openDiagramOrDisplayError(uri: string): Promise<void> {\n    try {\n      const openedDiagram: IDiagram = await this.solutionExplorerList.openDiagram(uri);\n      const solution: ISolutionEntry = this.solutionExplorerList.getOpenDiagramSolutionEntry();\n\n      this.solutionService.addOpenDiagram(openedDiagram);\n\n      await this.navigateToDetailView(openedDiagram, solution);\n    } catch (error) {\n      // The diagram may already be opened.\n      const diagram: IDiagram | null = await this.solutionExplorerList.getOpenedDiagramByURI(uri);\n      const solution: ISolutionEntry = this.solutionExplorerList.getOpenDiagramSolutionEntry();\n\n      const diagramWithURIIsAlreadyOpened: boolean = diagram !== null;\n      if (diagramWithURIIsAlreadyOpened) {\n        return this.navigateToDetailView(diagram, solution);\n      }\n\n      this.notificationService.showNotification(NotificationType.ERROR, error.message);\n    }\n\n    return undefined;\n  }\n\n  private electronFileOpeningHook = async (_: Event, pathToFile: string): Promise<void> => {\n    const uri: string = pathToFile;\n    this.openDiagramOrDisplayError(uri);\n  };\n\n  private electronOnMenuOpenDiagramHook = async (_: Event): Promise<void> => {\n    this.openDiagram();\n  };\n\n  private electronOnMenuOpenSolutionHook = async (_: Event): Promise<void> => {\n    this.openSolution();\n  };\n\n  private electronOnCreateDiagram = async (_: Event): Promise<void> => {\n    this.openNewDiagram();\n  };\n\n  private openNewDiagram(): void {\n    const uri: string = 'about:open-diagrams';\n\n    this.solutionExplorerList.createDiagram(uri);\n  }\n\n  private createNewDiagram(): void {\n    const activeSolutionUri: string = this.router.currentInstruction.queryParams.solutionUri;\n    const activeSolution: ISolutionEntry = this.solutionService.getSolutionEntryForUri(activeSolutionUri);\n\n    const activeSolutionCanCreateDiagrams: boolean =\n      activeSolution !== undefined && !activeSolution.uri.startsWith('http');\n\n    const uri: string = activeSolutionCanCreateDiagrams ? activeSolutionUri : 'about:open-diagrams';\n\n    this.solutionExplorerList.createDiagram(uri);\n  }\n\n  private registerElectronHooks(): void {\n    // Register handler for double-click event fired from \"electron.js\".\n    this.ipcRenderer.on('double-click-on-file', this.electronFileOpeningHook);\n\n    this.ipcRenderer.on('menubar__start_opening_diagram', this.electronOnMenuOpenDiagramHook);\n    this.ipcRenderer.on('menubar__start_opening_solution', this.electronOnMenuOpenSolutionHook);\n\n    this.ipcRenderer.on('menubar__start_create_diagram', this.electronOnCreateDiagram);\n\n    // Send event to signal the component is ready to handle the event.\n    this.ipcRenderer.send('waiting-for-double-file-click');\n\n    // Check if there was a double click before BPMN Studio was loaded.\n    const fileInfo: IFile = this.ipcRenderer.sendSync('get_opened_file');\n\n    if (fileInfo.path) {\n      // There was a file opened before BPMN Studio was loaded, open it.\n      const uri: string = fileInfo.path;\n      this.openDiagramOrDisplayError(uri);\n    }\n  }\n\n  private removeElectronFileOpeningHooks(): void {\n    // Register handler for double-click event fired from \"electron.js\".\n    this.ipcRenderer.removeListener('double-click-on-file', this.electronFileOpeningHook);\n\n    this.ipcRenderer.removeListener('menubar__start_opening_diagram', this.electronOnMenuOpenDiagramHook);\n    this.ipcRenderer.removeListener('menubar__start_opening_solution', this.electronOnMenuOpenSolutionHook);\n\n    this.ipcRenderer.removeListener('menubar__start_create_diagram', this.electronOnCreateDiagram);\n  }\n\n  private openDiagramOnDropBehaviour: EventListener = async (event: DragEvent): Promise<void> => {\n    event.preventDefault();\n\n    const loadedFiles: FileList = event.dataTransfer.files;\n\n    const urisToOpen: Array<string> = Array.from(loadedFiles).map((file: IFile): string => {\n      return file.path;\n    });\n\n    const openingPromises: Array<Promise<void>> = urisToOpen.map(\n      (uri: string): Promise<void> => {\n        return this.openDiagramOrDisplayError(uri);\n      },\n    );\n\n    await Promise.all(openingPromises);\n  };\n\n  // TODO: This method is copied all over the place.\n  private async navigateToDetailView(diagram: IDiagram, solution: ISolutionEntry): Promise<void> {\n    await this.router.navigateToRoute('design', {\n      diagramName: diagram.name,\n      diagramUri: diagram.uri,\n      solutionUri: solution.uri,\n    });\n  }\n}\n","solution-explorer-panel {\n  flex: 1;\n  flex-basis: 250px;\n  max-width: 250px;\n}\n\n.solution-explorer {\n  display: block;\n  width: 250px;\n  height: 100%;\n  min-width: 200px;\n  background-color: #f7f7f7;\n  border-right: 2px solid #dcdbdb;\n  user-select: none;\n}\n\n.solution-explorer-panel {\n  position: relative;\n  height: 100%;\n}\n\n.solution-explorer-panel__header {\n  padding: 5px 5px;\n  display: flex;\n  color: #a5a5a5;\n  border-bottom: 2px solid #dcdbdb;\n}\n\n.solution-explorer-panel__header-name {\n  font-size: 14px;\n  flex: 1;\n}\n\n.solution-explorer-panel__actions {\n  display: flex;\n}\n\n.solution-explorer-panel__actions button {\n  padding: 0 2px;\n  background: transparent;\n  border: none;\n  vertical-align: middle;\n}\n\n.solution-explorer-panel__input {\n  visibility: hidden;\n  height: 0;\n}\n\n.solution-explorer-panel button {\n  min-width: 20px;\n}\n\n/*\n * Remote Solution Modal Dialog\n*/\n\n.uri-input--invalid {\n  border: 2px red solid;\n}\n\n.uri-input--invalid:focus {\n  border: 2px red solid;\n}\n\n.remote-solution-list {\n  margin: 14px 0;\n  width: 100%;\n  height: 120px;\n  overflow-x: hidden;\n  overflow-y: auto;\n  border: 1px solid #ccc;\n  border-radius: 10px;\n}\n\n.remote-solution-list__remote-solution {\n  position: relative;\n  width: 100%;\n  height: 40px;\n  padding: 0 10px;\n  // Prevent double border at bottom\n  margin-bottom: -1px;\n  overflow: hidden;\n  color: darkgray;\n  cursor: pointer;\n  border-bottom: 1px solid #ccc;\n  user-select: none;\n}\n\n.remote-solution-list__remote-solution:hover {\n  background-color: rgba(204, 204, 204, 0.25);\n  color: black;\n}\n\n.remote-solution-list__solution-data {\n  position: absolute;\n  top: 50%;\n  width: calc(100% - 20px);\n  height: 20px;\n  transform: translateY(-50%);\n}\n\n.remote-solution-list__remote-solution-selected {\n  background-color: rgba(204, 204, 204, 0.5) !important;\n  color: black;\n}\n\n.remote-solution-list__close-button {\n  position: absolute;\n  top: 50%;\n  right: 20px;\n  margin-top: 1px;\n  background-color: transparent;\n  border: none;\n  transform: translateY(-50%);\n}\n\n.remote-solution-list__status-icon {\n  margin-right: 5px;\n}\n\n.solution-explorer-panel__protocol-selector {\n  width: 70px;\n}\n\n.remote-solution-badge {\n  position: absolute;\n  top: 50%;\n  right: 10px;\n  transform: translateY(-50%);\n}\n\n.remote-solution-badge__dev {\n  background: rgb(45, 45, 60);\n}\n\n.remote-solution-badge__alpha {\n  background: rgb(170, 170, 170);\n}\n\n.remote-solution-badge__beta {\n  background: rgb(220, 190, 90);\n}\n\n.remote-solution-badge__stable {\n  background: rgb(90, 170, 220);\n}\n\n.remote-solution-list__loading-spinner {\n  display: inline-block;\n  width: 100%;\n  height: 100%;\n  user-select: none;\n  white-space: nowrap;\n}\n\n.remote-solution-list__loading-spinner-icon {\n  position: absolute;\n  left: 50%;\n  top: calc(50% - 22px);\n  height: 150px;\n  transform: translate(-50%, -50%);\n}\n\n.remote-solution-list__loading-spinner-text {\n  position: absolute;\n  left: 50%;\n  transform: translateX(-50%);\n  margin-top: 5px;\n  bottom: 10px;\n}\n\n.remote-solution-list__connection-error-message {\n  margin-bottom: 0px;\n  white-space: pre-wrap;\n}\n",null,"/* tslint:disable:no-use-before-declare */\n/**\n * We are disabling this rule here because we need this kind of statement in the\n * functions used in the promise of the modal.\n */\nimport {bindable, inject} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\n\nimport {IDiagram} from '@process-engine/solutionexplorer.contracts';\nimport {ISolutionExplorerService} from '@process-engine/solutionexplorer.service.contracts';\n\nimport {IEventFunction, ISolutionService, NotificationType} from '../../../../contracts/index';\nimport {NotificationService} from '../../../../services/notification-service/notification.service';\nimport {OpenDiagramsSolutionExplorerService} from '../../../../services/solution-explorer-services/OpenDiagramsSolutionExplorerService';\nimport {OpenDiagramStateService} from '../../../../services/solution-explorer-services/OpenDiagramStateService';\n\n@inject('NotificationService', 'OpenDiagramStateService', Router, 'OpenDiagramService', 'SolutionService')\nexport class DeleteDiagramModal {\n  @bindable public activeDiagram: IDiagram;\n  public showModal: boolean = false;\n  public diagram: IDiagram;\n  public deleteDiagramModal: DeleteDiagramModal = this;\n\n  private solutionExplorerService: ISolutionExplorerService;\n  private notificationService: NotificationService;\n  private openDiagramStateService: OpenDiagramStateService;\n  private openDiagramService: OpenDiagramsSolutionExplorerService;\n  private router: Router;\n  private solutionService: ISolutionService;\n\n  constructor(\n    notificationService: NotificationService,\n    openDiagramStateService: OpenDiagramStateService,\n    router: Router,\n    openDiagramService: OpenDiagramsSolutionExplorerService,\n    solutionService: ISolutionService,\n  ) {\n    this.notificationService = notificationService;\n    this.openDiagramStateService = openDiagramStateService;\n    this.router = router;\n    this.openDiagramService = openDiagramService;\n    this.solutionService = solutionService;\n  }\n\n  public async show(diagram: IDiagram, solutionExplorerService: ISolutionExplorerService): Promise<boolean> {\n    this.diagram = diagram;\n    this.solutionExplorerService = solutionExplorerService;\n\n    this.showModal = true;\n\n    const deletionPromise: Promise<boolean> = new Promise((resolve: Function, reject: Function): void => {\n      const cancelDeletion: IEventFunction = (): void => {\n        this.closeModal();\n\n        resolve(false);\n\n        document.getElementById('cancelDeleteDiagramButton').removeEventListener('click', cancelDeletion);\n        document.getElementById('deleteDiagramButton').removeEventListener('click', proceedDeletion);\n      };\n\n      const proceedDeletion: IEventFunction = async (): Promise<void> => {\n        await this.deleteDiagram();\n\n        resolve(true);\n\n        document.getElementById('cancelDeleteDiagramButton').removeEventListener('click', cancelDeletion);\n        document.getElementById('deleteDiagramButton').removeEventListener('click', proceedDeletion);\n      };\n\n      setTimeout(() => {\n        document.getElementById('cancelDeleteDiagramButton').addEventListener('click', cancelDeletion, {once: true});\n        document.getElementById('deleteDiagramButton').addEventListener('click', proceedDeletion, {once: true});\n      }, 0);\n    });\n\n    return deletionPromise;\n  }\n\n  private closeModal(): void {\n    this.diagram = undefined;\n    this.solutionExplorerService = undefined;\n\n    this.showModal = false;\n  }\n\n  private async deleteDiagram(): Promise<void> {\n    try {\n      await this.solutionExplorerService.deleteDiagram(this.diagram);\n    } catch (error) {\n      const message: string = `Unable to delete the diagram: ${error.message}`;\n\n      this.notificationService.showNotification(NotificationType.ERROR, message);\n    }\n\n    const openDiagramServiceIsAvailable: boolean = typeof this.openDiagramService !== 'string';\n\n    const diagramWasActiveDiagram: boolean = this.diagram === this.activeDiagram;\n    if (diagramWasActiveDiagram) {\n      const diagramIndex: number = openDiagramServiceIsAvailable\n        ? this.openDiagramService.getOpenedDiagrams().findIndex((diagram: IDiagram) => diagram.uri === this.diagram.uri)\n        : undefined;\n\n      const previousOrNextDiagramIndex: number = diagramIndex === 0 ? diagramIndex + 1 : diagramIndex - 1;\n\n      const diagramToNavigateTo: IDiagram = openDiagramServiceIsAvailable\n        ? this.openDiagramService\n            .getOpenedDiagrams()\n            .find((diagram: IDiagram, index: number) => index === previousOrNextDiagramIndex)\n        : undefined;\n\n      const diagramIsDeployed: boolean = this.diagram.uri.startsWith('http');\n\n      if (diagramIsDeployed || !diagramToNavigateTo) {\n        this.router.navigateToRoute('start-page');\n      } else {\n        const lastIndexOfSlash: number = diagramToNavigateTo.uri.lastIndexOf('/');\n        const lastIndexOfBackSlash: number = diagramToNavigateTo.uri.lastIndexOf('\\\\');\n        const indexBeforeFilename: number = Math.max(lastIndexOfSlash, lastIndexOfBackSlash);\n        const activeSolutionUri: string = diagramToNavigateTo.uri.substring(0, indexBeforeFilename);\n\n        this.router.navigateToRoute('design', {\n          diagramName: diagramToNavigateTo.name,\n          diagramUri: diagramToNavigateTo.uri,\n          solutionUri: activeSolutionUri,\n          view: this.router.currentInstruction.params.view,\n        });\n      }\n    }\n\n    if (openDiagramServiceIsAvailable) {\n      this.openDiagramService.closeDiagram(this.diagram);\n      this.solutionService.removeOpenDiagramByUri(this.diagram.uri);\n      this.openDiagramStateService.deleteDiagramState(this.diagram.uri);\n    }\n\n    this.diagram = undefined;\n    this.solutionExplorerService = undefined;\n\n    this.showModal = false;\n  }\n}\n","",null,"/* eslint-disable max-lines */\nimport {EventAggregator, Subscription} from 'aurelia-event-aggregator';\nimport {NewInstance, bindable, computedFrom, inject} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {ControllerValidateResult, ValidateResult, ValidationController, ValidationRules} from 'aurelia-validation';\n\nimport {join} from 'path';\n\nimport {ForbiddenError, UnauthorizedError, isError} from '@essential-projects/errors_ts';\nimport {IDiagram, ISolution} from '@process-engine/solutionexplorer.contracts';\nimport {ISolutionExplorerService} from '@process-engine/solutionexplorer.service.contracts';\n\nimport {IIdentity} from '@essential-projects/iam_contracts';\nimport {\n  IDiagramCreationService,\n  IDiagramState,\n  IDiagramStateList,\n  IDiagramStateListEntry,\n  ISolutionEntry,\n  ISolutionService,\n  NotificationType,\n} from '../../../contracts/index';\nimport environment from '../../../environment';\nimport {NotificationService} from '../../../services/notification-service/notification.service';\nimport {OpenDiagramsSolutionExplorerService} from '../../../services/solution-explorer-services/OpenDiagramsSolutionExplorerService';\nimport {OpenDiagramStateService} from '../../../services/solution-explorer-services/OpenDiagramStateService';\nimport {DeleteDiagramModal} from './delete-diagram-modal/delete-diagram-modal';\nimport {DeployDiagramService} from '../../../services/deploy-diagram-service/deploy-diagram.service';\nimport {SaveDiagramService} from '../../../services/save-diagram-service/save-diagram.service';\n\nconst ENTER_KEY: string = 'Enter';\nconst ESCAPE_KEY: string = 'Escape';\n\ntype DiagramSorter = (firstElement: IDiagram, secondElement: IDiagram) => number;\n\nenum CloseModalResult {\n  Cancel = 0,\n  Save = 1,\n  Delete = 2,\n}\n\ninterface IDiagramNameInputState {\n  currentDiagramInputValue: string;\n}\n\ninterface IDiagramCreationState extends IDiagramNameInputState {\n  isCreateDiagramInputShown: boolean;\n}\n\n@inject(\n  Router,\n  EventAggregator,\n  NewInstance.of(ValidationController),\n  'DiagramCreationService',\n  'NotificationService',\n  'SolutionService',\n  'OpenDiagramStateService',\n  DeployDiagramService,\n  SaveDiagramService,\n)\nexport class SolutionExplorerSolution {\n  public activeDiagram: IDiagram;\n  public showCloseModal: boolean = false;\n  @bindable public renameDiagramInput: HTMLInputElement;\n\n  // Fields below are bound from the html view.\n  @bindable public solutionService: ISolutionExplorerService;\n  @bindable public openDiagramService: OpenDiagramsSolutionExplorerService;\n  @bindable public displayedSolutionEntry: ISolutionEntry;\n  @bindable public fontAwesomeIconClass: string;\n  public createNewDiagramInput: HTMLInputElement;\n  public diagramContextMenu: HTMLElement;\n  public showContextMenu: boolean = false;\n  public deleteDiagramModal: DeleteDiagramModal;\n  public processEngineRunning: boolean = false;\n\n  public isSavingDiagrams: boolean = false;\n  public currentlySavingDiagramName: string = '';\n\n  private router: Router;\n  private eventAggregator: EventAggregator;\n  private validationController: ValidationController;\n  private diagramCreationService: IDiagramCreationService;\n  private notificationService: NotificationService;\n  private openDiagramStateService: OpenDiagramStateService;\n  private deployDiagramService: DeployDiagramService;\n  private saveDiagramService: SaveDiagramService;\n\n  private diagramRoute: string = 'design';\n  private inspectView: string;\n  private designView: string = 'detail';\n  private subscriptions: Array<Subscription>;\n  private openedSolution: ISolution;\n  private diagramCreationState: IDiagramCreationState = {\n    currentDiagramInputValue: undefined,\n    isCreateDiagramInputShown: false,\n  };\n\n  private diagramStateList: Array<IDiagramStateListEntry>;\n\n  private diagramRenamingState: IDiagramNameInputState = {\n    currentDiagramInputValue: undefined,\n  };\n\n  private refreshTimeoutTask: NodeJS.Timer | number;\n\n  private diagramValidationRegExpList: Array<RegExp> = [/^[a-z0-9]/i, /^[._ -]/i, /^[äöüß]/i];\n\n  private currentlyRenamingDiagram: IDiagram | null = null;\n  private isAttached: boolean = false;\n\n  private originalIconClass: string;\n  private globalSolutionService: ISolutionService;\n  private diagramInContextMenu: IDiagram;\n  private ipcRenderer: any;\n\n  private sortedDiagramsOfSolutions: Array<IDiagram> = [];\n  private diagramStatesChangedCallbackId: string;\n\n  constructor(\n    router: Router,\n    eventAggregator: EventAggregator,\n    validationController: ValidationController,\n    diagramCreationService: IDiagramCreationService,\n    notificationService: NotificationService,\n    solutionService: ISolutionService,\n    openDiagramStateService: OpenDiagramStateService,\n    deployDiagramService: DeployDiagramService,\n    saveDiagramService: SaveDiagramService,\n  ) {\n    this.router = router;\n    this.eventAggregator = eventAggregator;\n    this.validationController = validationController;\n    this.diagramCreationService = diagramCreationService;\n    this.notificationService = notificationService;\n    this.globalSolutionService = solutionService;\n    this.openDiagramStateService = openDiagramStateService;\n    this.deployDiagramService = deployDiagramService;\n    this.saveDiagramService = saveDiagramService;\n\n    this.updateDiagramStateList();\n    this.diagramStatesChangedCallbackId = this.openDiagramStateService.onDiagramStatesChanged(() => {\n      this.updateDiagramStateList();\n    });\n  }\n\n  public async attached(): Promise<void> {\n    this.isAttached = true;\n    if ((window as any).nodeRequire) {\n      this.ipcRenderer = (window as any).nodeRequire('electron').ipcRenderer;\n    }\n\n    this.originalIconClass = this.fontAwesomeIconClass;\n    this.updateSolutionExplorer();\n\n    this.subscriptions = [\n      this.eventAggregator.subscribe('router:navigation:success', () => {\n        this.updateSolutionExplorer();\n      }),\n    ];\n\n    if (this.displayedSolutionEntry.isOpenDiagramService) {\n      const updateSubscription: Subscription = this.eventAggregator.subscribe(\n        environment.events.solutionExplorer.updateOpenDiagrams,\n        (): void => {\n          this.updateSolution();\n        },\n      );\n\n      this.subscriptions.push(updateSubscription);\n\n      if ((window as any).nodeRequire) {\n        this.ipcRenderer.on('menubar__start_close_diagram', this.closeDiagramEventFunction);\n        this.ipcRenderer.on('menubar__start_close_all_diagrams', this.closeAllDiagramsEventFunction);\n        this.ipcRenderer.on('menubar__start_save_all_diagrams', this.saveAllDiagramsEventFunction);\n      }\n    }\n\n    const solutionIsRemoteSolution: boolean = this.displayedSolutionEntry.uri.startsWith('http');\n    if (solutionIsRemoteSolution && (window as any).nodeRequire) {\n      this.ipcRenderer.on('menubar__start_close_diagram', this.closeDiagramEventFunction);\n    }\n\n    if (this.displayedSolutionEntry.uri.startsWith('http')) {\n      await this.waitForProcessEngine();\n    } else {\n      this.processEngineRunning = true;\n      this.setValidationRules();\n\n      setTimeout(async () => {\n        await this.updateSolution();\n        this.startPolling();\n      }, 0);\n    }\n  }\n\n  public waitForProcessEngine(): Promise<boolean> {\n    return new Promise((resolve: Function, reject: Function): void => {\n      const makeRequest: Function = (): void => {\n        setTimeout(async () => {\n          try {\n            await fetch(this.displayedSolutionEntry.uri);\n\n            this.processEngineRunning = true;\n\n            await this.updateSolution();\n\n            this.startPolling();\n\n            resolve(true);\n          } catch (error) {\n            makeRequest();\n          }\n          // tslint:disable-next-line: no-magic-numbers\n        }, 10);\n      };\n\n      makeRequest();\n    });\n  }\n\n  public detached(): void {\n    this.isAttached = false;\n\n    clearTimeout(this.refreshTimeoutTask as NodeJS.Timer);\n\n    this.disposeSubscriptions();\n\n    if (this.diagramCreationState.isCreateDiagramInputShown) {\n      this.resetDiagramCreation();\n    }\n\n    if (this.isCurrentlyRenamingDiagram) {\n      this.resetDiagramRenaming();\n    }\n\n    if (this.displayedSolutionEntry.isOpenDiagramService) {\n      this.ipcRenderer.removeListener('menubar__start_close_diagram', this.closeDiagramEventFunction);\n      this.ipcRenderer.removeListener('menubar__start_close_all_diagrams', this.closeAllDiagramsEventFunction);\n      this.ipcRenderer.removeListener('menubar__start_save_all_diagrams', this.saveAllDiagramsEventFunction);\n    }\n\n    this.openDiagramStateService.removeOnDiagramStatesChangedListener(this.diagramStatesChangedCallbackId);\n  }\n\n  public async showDeleteDiagramModal(diagram: IDiagram, event: Event): Promise<void> {\n    /**\n     * We are stopping the event propagation here, because we don't want\n     * the event to be called on the list element, since this would lead to a\n     * navigation to the diagram we want to delete.\n     */\n    event.stopPropagation();\n\n    const diagramWasDeleted: boolean = await this.deleteDiagramModal.show(diagram, this.solutionService);\n\n    if (diagramWasDeleted) {\n      await this.updateSolution();\n      this.refreshDisplayedDiagrams();\n    }\n  }\n\n  /**\n   * Called by aurelia, if the value of the solutionService binding changes.\n   */\n  public solutionServiceChanged(newValue: ISolutionExplorerService, oldValue: ISolutionExplorerService): Promise<void> {\n    if (!this.processEngineRunning) {\n      return undefined;\n    }\n\n    return this.updateSolution();\n  }\n\n  /**\n   * Reload the solution by requesting it from the solution service.\n   */\n  public async updateSolution(): Promise<void> {\n    try {\n      this.openedSolution = await this.solutionService.loadSolution();\n\n      const updatedDiagramList: Array<IDiagram> = this.displayedSolutionEntry.isOpenDiagramService\n        ? this.openedSolution.diagrams\n        : this.openedSolution.diagrams.sort(this.diagramSorter);\n\n      const diagramsOfSolutionChanged: boolean =\n        this.sortedDiagramsOfSolutions.toString() !== updatedDiagramList.toString();\n      if (diagramsOfSolutionChanged) {\n        this.refreshDisplayedDiagrams();\n      }\n\n      this.fontAwesomeIconClass = this.originalIconClass;\n      this.processEngineRunning = true;\n    } catch (error) {\n      // In the future we can maybe display a small icon indicating the error.\n      if (isError(error, UnauthorizedError)) {\n        this.notificationService.showNotification(NotificationType.ERROR, 'You need to login to list process models.');\n      } else if (isError(error, ForbiddenError)) {\n        this.notificationService.showNotification(\n          NotificationType.ERROR,\n          \"You don't have the required permissions to list process models.\",\n        );\n      } else {\n        this.openedSolution.diagrams = undefined;\n        this.fontAwesomeIconClass = 'fa-bolt';\n        this.processEngineRunning = false;\n      }\n    }\n  }\n\n  /*\n   * Used when this is a open diagram solution explorer service.\n   */\n  public async closeDiagram(diagram: IDiagram, event?: Event): Promise<void> {\n    const eventSet: boolean = event !== undefined;\n    if (eventSet) {\n      event.stopPropagation();\n    }\n\n    const diagramState: IDiagramState = this.openDiagramStateService.loadDiagramState(diagram.uri);\n    const diagramHasUnsavedChanges: boolean = diagramState !== null && diagramState.metadata.isChanged;\n\n    if (diagramHasUnsavedChanges) {\n      const cancelClosing: boolean = (await this.showCloseDiagramModal(diagram)) === CloseModalResult.Cancel;\n\n      if (cancelClosing) {\n        return undefined;\n      }\n    }\n\n    const closedDiagramWasActiveDiagram: boolean = this.activeDiagramUri === diagram.uri;\n    if (closedDiagramWasActiveDiagram) {\n      return new Promise<void>((resolve: Function): void => {\n        const subscription: Subscription = this.eventAggregator.subscribe('router:navigation:success', () => {\n          this.closeOpenDiagram(diagram);\n          subscription.dispose();\n\n          resolve();\n        });\n\n        this.router.navigateToRoute('start-page');\n      });\n    }\n\n    this.closeOpenDiagram(diagram);\n    return undefined;\n  }\n\n  public async startRenamingOfDiagram(diagram: IDiagram, event: Event): Promise<void> {\n    event.stopPropagation();\n\n    if (await this.isDiagramDetailViewOfDiagramOpen(diagram.uri)) {\n      const messageTitle: string = '<h4 class=\"toast-message__headline\">Not supported while opened.</h4>';\n      const messageBody: string =\n        'Renaming of opened diagrams is currently not supported. Please switch to another diagram and try again.';\n      const message: string = `${messageTitle}\\n${messageBody}`;\n\n      this.notificationService.showNotification(NotificationType.INFO, message, {\n        toastClass: 'toast-not-allowed-renaming-or-deleting',\n      });\n\n      return;\n    }\n\n    if (this.isCurrentlyRenamingDiagram) {\n      return;\n    }\n\n    // Dont allow renaming diagram, if already creating another.\n    if (this.diagramCreationState.isCreateDiagramInputShown) {\n      return;\n    }\n\n    // This shows the input field.\n    this.currentlyRenamingDiagram = diagram;\n\n    // The templating update must happen before we can set the focus.\n    window.setTimeout(() => {\n      this.renameDiagramInput.focus();\n      this.diagramRenamingState.currentDiagramInputValue = diagram.name;\n      this.setValidationRules();\n      this.validationController.validate();\n    }, 0);\n\n    document.addEventListener('click', this.onRenameDiagramClickEvent);\n    document.addEventListener('keyup', this.onRenameDiagramKeyupEvent);\n  }\n\n  public activateContextMenu(event: MouseEvent, diagram: IDiagram): void {\n    this.diagramInContextMenu = diagram;\n\n    this.diagramContextMenu.style.top = `${event.y}px`;\n    this.diagramContextMenu.style.left = `${event.x}px`;\n    this.showContextMenu = true;\n\n    const documentEventListener: EventListenerOrEventListenerObject = (): void => {\n      this.showContextMenu = false;\n      this.diagramInContextMenu = undefined;\n\n      document.removeEventListener('click', documentEventListener);\n    };\n\n    document.addEventListener('click', documentEventListener);\n  }\n\n  public async duplicateDiagram(): Promise<void> {\n    const noDiagramInContextMenu: boolean = this.diagramInContextMenu === undefined;\n    if (noDiagramInContextMenu) {\n      return;\n    }\n\n    let newNameFound: boolean = false;\n    let newName: string;\n    let diagramNumber: number = 1;\n\n    const isDiagramNameNotEqualToNewName: (diagram: IDiagram) => boolean = (diagram: IDiagram) => {\n      return diagram.name !== newName;\n    };\n\n    while (newNameFound === false) {\n      newName = `${this.diagramInContextMenu.name} (${diagramNumber})`;\n\n      newNameFound = this.openedDiagrams.every(isDiagramNameNotEqualToNewName);\n\n      diagramNumber++;\n    }\n\n    const duplicatedDiagram: IDiagram = await this.diagramCreationService.createNewDiagram(\n      this.displayedSolutionEntry.uri,\n      newName,\n      this.diagramInContextMenu.xml,\n    );\n\n    await this.solutionService.saveDiagram(duplicatedDiagram, duplicatedDiagram.uri);\n    await this.updateSolution();\n  }\n\n  public async deployDiagram(): Promise<void> {\n    const noDiagramInContextMenu: boolean = this.diagramInContextMenu === undefined;\n    if (noDiagramInContextMenu) {\n      return;\n    }\n\n    const diagramState: IDiagramState | null = this.openDiagramStateService.loadDiagramState(\n      this.diagramInContextMenu.uri,\n    );\n    const diagramHasState: boolean = diagramState !== null;\n\n    const xml: string | undefined = diagramHasState ? diagramState.data.xml : undefined;\n\n    await this.deployDiagramService.deployDiagram(this.displayedSolutionEntry, this.diagramInContextMenu, xml);\n  }\n\n  /*\n   * Called by the parent component to start the creation dialog of a new\n   * diagram.\n   */\n  public async startCreationOfNewDiagram(): Promise<void> {\n    if (this.diagramCreationState.isCreateDiagramInputShown) {\n      return;\n    }\n\n    // Dont allow new diagram creation, if already renaming another diagram.\n    if (this.isCurrentlyRenamingDiagram) {\n      return;\n    }\n\n    if (this.displayedSolutionEntry.isOpenDiagramService) {\n      this.openNewDiagram();\n\n      return;\n    }\n\n    this.diagramCreationState.isCreateDiagramInputShown = true;\n\n    // The templating update must happen before we can set the focus.\n    window.setTimeout(() => {\n      this.createNewDiagramInput.focus();\n      this.setValidationRules();\n    }, 0);\n\n    document.addEventListener('click', this.onCreateNewDiagramClickEvent);\n    document.addEventListener('keyup', this.onCreateNewDiagramKeyupEvent);\n  }\n\n  @computedFrom('validationController.errors.length')\n  public get diagramValidationErrors(): Array<ValidateResult> {\n    const validationErrorPresent: boolean = this.validationController.errors.length >= 1;\n    if (validationErrorPresent) {\n      this.setInvalidCharacterMessage(this.validationController.errors);\n    }\n\n    return this.validationController.errors;\n  }\n\n  @computedFrom('validationController.errors.length')\n  public get hasValidationErrors(): boolean {\n    return this.validationController.errors && this.validationController.errors.length > 0;\n  }\n\n  @computedFrom('currentlyRenamingDiagram')\n  public get currentlyRenamingDiagramUri(): string {\n    return this.currentlyRenamingDiagram === null ? null : this.currentlyRenamingDiagram.uri;\n  }\n\n  public shouldFileIconBeShown(): boolean {\n    return false;\n  }\n\n  @computedFrom('displayedSolutionEntry.isOpenDiagramService', 'openedSolution')\n  public get canRenameDiagram(): boolean {\n    return (\n      !this.displayedSolutionEntry.isOpenDiagramService &&\n      this.openedSolution &&\n      !this.isUriFromRemoteSolution(this.openedSolution.uri)\n    );\n  }\n\n  @computedFrom('diagramStateList')\n  public get diagramChangedStateMap(): Map<string, boolean> {\n    const isChangedMap: Map<string, boolean> = new Map<string, boolean>();\n\n    this.diagramStateList.forEach((diagramStateListEntry: IDiagramStateListEntry): void => {\n      const isChanged: boolean =\n        diagramStateListEntry !== null && diagramStateListEntry.diagramState.metadata.isChanged;\n\n      isChangedMap.set(diagramStateListEntry.uri, isChanged);\n    });\n\n    return isChangedMap;\n  }\n\n  public canDeleteDiagram(): boolean {\n    return !this.displayedSolutionEntry.isOpenDiagramService && this.openedSolution !== undefined;\n  }\n\n  public get solutionIsNotLoaded(): boolean {\n    return this.openedSolution === null || this.openedSolution === undefined || !this.processEngineRunning;\n  }\n\n  public get openedDiagrams(): Array<IDiagram> {\n    return this.sortedDiagramsOfSolutions;\n  }\n\n  public getDiagramLocation(diagramUri: string): string {\n    const lastIndexOfSlash: number = diagramUri.lastIndexOf('/');\n    const lastIndexOfBackSlash: number = diagramUri.lastIndexOf('\\\\');\n    const indexBeforeFilename: number = Math.max(lastIndexOfSlash, lastIndexOfBackSlash);\n\n    const diagramLocationWithoutFileName: string = diagramUri.slice(0, indexBeforeFilename);\n\n    return diagramLocationWithoutFileName;\n  }\n\n  public getDiagramFolder(diagramUri: string): string {\n    const diagramLocation: string = this.getDiagramLocation(diagramUri);\n\n    const lastIndexOfSlash: number = diagramLocation.lastIndexOf('/');\n    const lastIndexOfBackSlash: number = diagramLocation.lastIndexOf('\\\\');\n    const indexBeforeFoldername: number = Math.max(lastIndexOfSlash, lastIndexOfBackSlash);\n\n    const indexIsInvalid: boolean = indexBeforeFoldername < 0;\n    if (indexIsInvalid) {\n      return '';\n    }\n\n    const diagramFolder: string = diagramLocation.slice(indexBeforeFoldername, diagramLocation.length);\n\n    return diagramFolder;\n  }\n\n  @computedFrom('activeDiagram.uri')\n  public get activeDiagramUri(): string {\n    const activeDiagramIsNotSet: boolean = this.activeDiagram === undefined;\n    if (activeDiagramIsNotSet) {\n      return undefined;\n    }\n\n    const solutionUri: string = this.router.currentInstruction.queryParams.solutionUri;\n\n    const solutionUriUnspecified: boolean = solutionUri === undefined;\n    if (solutionUriUnspecified) {\n      return undefined;\n    }\n\n    return this.activeDiagram.uri;\n  }\n\n  public async openDiagram(diagram: IDiagram): Promise<void> {\n    const diagramIsFromLocalSolution: boolean = !this.isUriFromRemoteSolution(diagram.uri);\n\n    if (diagramIsFromLocalSolution) {\n      const diagramIsNotYetOpened: boolean = !this.openDiagramService\n        .getOpenedDiagrams()\n        .some((openedDiagram: IDiagram): boolean => {\n          return openedDiagram.uri === diagram.uri;\n        });\n\n      if (diagramIsNotYetOpened) {\n        await this.openDiagramService.openDiagramFromSolution(diagram.uri, this.createIdentityForSolutionExplorer());\n      }\n    }\n\n    this.navigateToDetailView(diagram);\n  }\n\n  private updateDiagramStateList(): void {\n    this.diagramStateList = this.openDiagramStateService.loadDiagramStateForAllDiagrams();\n  }\n\n  private closeDiagramEventFunction: Function = (): void => {\n    const noDiagramIsActive: boolean = this.activeDiagram === undefined;\n    if (noDiagramIsActive) {\n      return;\n    }\n\n    const solutionIsRemoteSolution: boolean = this.displayedSolutionEntry.uri.startsWith('http');\n    if (solutionIsRemoteSolution) {\n      this.router.navigateToRoute('start-page');\n    } else {\n      this.closeDiagram(this.activeDiagram);\n    }\n  };\n\n  private closeAllDiagramsEventFunction: Function = async (): Promise<void> => {\n    const currentlyOpenDiagrams: Array<IDiagram> = [...this.openedDiagrams];\n\n    await this.closeMultipleDiagrams(currentlyOpenDiagrams);\n  };\n\n  private async closeMultipleDiagrams(diagrams: Array<IDiagram>): Promise<void> {\n    const diagramsIsEmpty: boolean = diagrams === undefined || diagrams.length === 0;\n    if (diagramsIsEmpty) {\n      return;\n    }\n\n    const amountOfDiagrams: number = diagrams.length;\n\n    this.navigateToDiagram(diagrams[0]);\n\n    for (let index: number = 0; index < amountOfDiagrams; index++) {\n      const nextDiagramIndex: number = index + 1;\n      const isLastDiagram: boolean = nextDiagramIndex === amountOfDiagrams;\n\n      const currentDiagram: IDiagram = diagrams[index];\n      const nextDiagram: IDiagram = isLastDiagram ? undefined : diagrams[nextDiagramIndex];\n\n      const diagramState: IDiagramState = this.openDiagramStateService.loadDiagramState(currentDiagram.uri);\n      const diagramHasUnsavedChanges: boolean = diagramState !== null && diagramState.metadata.isChanged;\n      let closeDiagram: boolean = true;\n\n      if (diagramHasUnsavedChanges) {\n        const closeModalResult: CloseModalResult = await this.showCloseDiagramModal(currentDiagram, false);\n\n        closeDiagram = closeModalResult !== CloseModalResult.Cancel;\n      }\n\n      if (isLastDiagram) {\n        await this.navigateToStartPage();\n      } else {\n        await this.navigateToDiagram(nextDiagram);\n      }\n\n      if (closeDiagram) {\n        await this.closeOpenDiagram(currentDiagram);\n      }\n    }\n  }\n\n  private get isCurrentlyRenamingDiagram(): boolean {\n    return this.currentlyRenamingDiagram !== null;\n  }\n\n  private navigateToStartPage(): Promise<void> {\n    return new Promise((resolve: Function): void => {\n      this.eventAggregator.subscribeOnce('router:navigation:success', () => {\n        resolve();\n      });\n\n      this.router.navigateToRoute('start-page');\n    });\n  }\n\n  private async navigateToDiagram(diagram: IDiagram): Promise<void> {\n    return new Promise((resolve: Function): void => {\n      this.eventAggregator.subscribeOnce('router:navigation:success', () => {\n        resolve();\n      });\n\n      this.router.navigateToRoute('design', {\n        view: this.designView,\n        diagramName: diagram.name,\n        diagramUri: diagram.uri,\n        solutionUri: this.displayedSolutionEntry.uri,\n      });\n    });\n  }\n\n  private async navigateBack(): Promise<void> {\n    return new Promise<void>((resolve: Function): void => {\n      this.eventAggregator.subscribeOnce('router:navigation:success', () => {\n        resolve();\n      });\n\n      this.router.navigateBack();\n    });\n  }\n\n  private saveAllDiagramsEventFunction: Function = (): void => {\n    this.saveAllUnsavedDiagrams();\n  };\n\n  private startPolling(): void {\n    if (this.displayedSolutionEntry.isOpenDiagramService) {\n      return;\n    }\n\n    this.refreshTimeoutTask = setTimeout(async () => {\n      await this.updateSolution();\n\n      if (this.isAttached) {\n        this.startPolling();\n      }\n    }, environment.processengine.solutionExplorerPollingIntervalInMs);\n  }\n\n  // TODO: This method is copied all over the place.\n  private async navigateToDetailView(diagram: IDiagram): Promise<void> {\n    await this.router.navigateToRoute(this.diagramRoute, {\n      view: this.inspectView ? this.inspectView : this.designView,\n      diagramName: diagram.name,\n      diagramUri: diagram.uri,\n      solutionUri: this.displayedSolutionEntry.uri,\n    });\n  }\n\n  private createIdentityForSolutionExplorer(): IIdentity {\n    const accessToken: string = this.createDummyAccessToken();\n    // TODO: Get the identity from the IdentityService of `@process-engine/iam`\n    const identity: IIdentity = {\n      token: accessToken,\n      userId: '', // Provided by the IdentityService.\n    };\n\n    return identity;\n  }\n\n  private createDummyAccessToken(): string {\n    const dummyAccessTokenString: string = 'dummy_token';\n    const base64EncodedString: string = btoa(dummyAccessTokenString);\n\n    return base64EncodedString;\n  }\n\n  private get diagramSorter(): DiagramSorter {\n    const sortOptions: Intl.CollatorOptions = {\n      caseFirst: 'lower',\n    };\n\n    const sorter: DiagramSorter = (firstElement: IDiagram, secondElement: IDiagram): number => {\n      return firstElement.name.localeCompare(secondElement.name, undefined, sortOptions);\n    };\n\n    return sorter;\n  }\n\n  private async saveAllUnsavedDiagrams(): Promise<void> {\n    if (this.isSavingDiagrams) {\n      return;\n    }\n\n    this.isSavingDiagrams = true;\n\n    const diagramStateList: IDiagramStateList = this.openDiagramStateService\n      .loadDiagramStateForAllDiagrams()\n      .filter((diagramStateListEntry: IDiagramStateListEntry) => {\n        return diagramStateListEntry.diagramState.metadata.isChanged;\n      });\n\n    for (const diagramStateListEntry of diagramStateList) {\n      const isActiveDiagram: boolean =\n        this.activeDiagram !== undefined && this.activeDiagram.uri === diagramStateListEntry.uri;\n      if (isActiveDiagram) {\n        this.currentlySavingDiagramName = this.activeDiagram.name;\n        await this.saveActiveDiagram();\n        await this.waitForSaving();\n\n        continue;\n      }\n\n      const diagramToSave: IDiagram = this.openedDiagrams.find((diagram: IDiagram) => {\n        return diagram.uri === diagramStateListEntry.uri;\n      });\n\n      const diagramNotFound: boolean = diagramToSave === undefined;\n      if (diagramNotFound) {\n        continue;\n      }\n\n      this.currentlySavingDiagramName = diagramToSave.name;\n\n      diagramToSave.xml = diagramStateListEntry.diagramState.data.xml;\n\n      await this.saveDiagramService.saveDiagram(this.displayedSolutionEntry, diagramToSave, diagramToSave.xml);\n\n      const diagramState: IDiagramState = this.openDiagramStateService.loadDiagramState(diagramToSave.uri);\n\n      diagramState.metadata.isChanged = false;\n\n      this.openDiagramStateService.updateDiagramState(diagramStateListEntry.uri, diagramState);\n\n      await this.waitForSaving();\n    }\n\n    this.isSavingDiagrams = false;\n    this.currentlySavingDiagramName = '';\n  }\n\n  private saveActiveDiagram(): Promise<void> {\n    return new Promise((resolve: Function): void => {\n      this.eventAggregator.subscribeOnce(environment.events.diagramDetail.saveDiagramDone, () => {\n        resolve();\n      });\n\n      this.eventAggregator.publish(environment.events.diagramDetail.saveDiagram);\n    });\n  }\n\n  private waitForSaving(): Promise<void> {\n    return new Promise((resolve: Function): void => {\n      setTimeout(() => {\n        resolve();\n      }, 550);\n    });\n  }\n\n  private refreshDisplayedDiagrams(): void {\n    this.sortedDiagramsOfSolutions = this.displayedSolutionEntry.isOpenDiagramService\n      ? this.openedSolution.diagrams\n      : this.openedSolution.diagrams.sort(this.diagramSorter);\n  }\n\n  private async closeOpenDiagram(diagramToClose: IDiagram): Promise<void> {\n    const openDiagramService: OpenDiagramsSolutionExplorerService = this\n      .solutionService as OpenDiagramsSolutionExplorerService;\n\n    await openDiagramService.closeDiagram(diagramToClose);\n\n    this.globalSolutionService.removeOpenDiagramByUri(diagramToClose.uri);\n  }\n\n  private async showCloseDiagramModal(\n    diagramToSave: IDiagram,\n    shouldNavigate: boolean = true,\n  ): Promise<CloseModalResult> {\n    const diagramToSaveIsNotActiveDiagram: boolean = diagramToSave.uri !== this.activeDiagramUri;\n    if (diagramToSaveIsNotActiveDiagram && shouldNavigate) {\n      await this.navigateToDiagram(diagramToSave);\n    }\n\n    const modalResult: Promise<CloseModalResult> = new Promise((resolve: Function): CloseModalResult | void => {\n      const dontSaveFunction: EventListenerOrEventListenerObject = async (): Promise<void> => {\n        this.showCloseModal = false;\n\n        document.getElementById('dontSaveButtonCloseView').removeEventListener('click', dontSaveFunction);\n        document.getElementById('saveButtonCloseView').removeEventListener('click', saveFunction);\n        document.getElementById('cancelButtonCloseView').removeEventListener('click', cancelFunction);\n\n        if (diagramToSaveIsNotActiveDiagram && shouldNavigate) {\n          await this.navigateBack();\n        }\n\n        resolve(CloseModalResult.Delete);\n      };\n\n      const saveFunction: EventListenerOrEventListenerObject = async (): Promise<void> => {\n        this.eventAggregator.subscribeOnce(environment.events.diagramWasSaved, async () => {\n          if (shouldNavigate) {\n            await this.navigateBack();\n          }\n\n          resolve(CloseModalResult.Save);\n        });\n\n        this.eventAggregator.publish(environment.events.diagramDetail.saveDiagram);\n\n        this.showCloseModal = false;\n\n        document.getElementById('dontSaveButtonCloseView').removeEventListener('click', dontSaveFunction);\n        document.getElementById('saveButtonCloseView').removeEventListener('click', saveFunction);\n        document.getElementById('cancelButtonCloseView').removeEventListener('click', cancelFunction);\n      };\n\n      const cancelFunction: EventListenerOrEventListenerObject = async (): Promise<void> => {\n        this.showCloseModal = false;\n\n        document.getElementById('dontSaveButtonCloseView').removeEventListener('click', dontSaveFunction);\n        document.getElementById('saveButtonCloseView').removeEventListener('click', saveFunction);\n        document.getElementById('cancelButtonCloseView').removeEventListener('click', cancelFunction);\n\n        if (diagramToSaveIsNotActiveDiagram && shouldNavigate) {\n          await this.navigateBack();\n        }\n\n        resolve(CloseModalResult.Cancel);\n      };\n\n      // register onClick handler\n      document.getElementById('dontSaveButtonCloseView').addEventListener('click', dontSaveFunction);\n      document.getElementById('saveButtonCloseView').addEventListener('click', saveFunction);\n      document.getElementById('cancelButtonCloseView').addEventListener('click', cancelFunction);\n\n      this.showCloseModal = true;\n    });\n\n    return modalResult;\n  }\n\n  private async isDiagramDetailViewOfDiagramOpen(diagramUriToCheck: string): Promise<boolean> {\n    const activeDiagramIsUndefined: boolean = this.activeDiagram === undefined;\n    if (activeDiagramIsUndefined) {\n      return false;\n    }\n\n    const diagramIsOpened: boolean = diagramUriToCheck === this.activeDiagramUri;\n\n    return diagramIsOpened;\n  }\n\n  /**\n   * Looks in the given Array of validation errors for an invalid character\n   * error message and replace the messages content with the acutal\n   * message and returns a reference to a new array with the mod\n   *\n   * TODO: This method should create a deep copy of an arra< that contains\n   * errors and return it instead of just modifying the reference.\n   *\n   */\n  private setInvalidCharacterMessage(errors: Array<ValidateResult>): void {\n    const invalidCharacterString: string = 'Your diagram contains at least one invalid-character: ';\n\n    for (const currentError of this.validationController.errors) {\n      const validationErrorIsInvalidCharacter: boolean = currentError.message.startsWith(invalidCharacterString);\n\n      if (validationErrorIsInvalidCharacter) {\n        const inputToValidate: string = currentError.message.replace(invalidCharacterString, '');\n\n        const invalidCharacters: Array<string> = this.getInvalidCharacters(inputToValidate);\n\n        currentError.message = this.getInvalidCharacterErrorMessage(invalidCharacters);\n      }\n    }\n  }\n\n  /**\n   *  Searches in the given input string for all invalid characters and returns\n   *  them as a char array.\n   *\n   * @param input input that contains invalid characters.\n   * @param returns An array that contains all invalid characters.\n   */\n  private getInvalidCharacters(input: string): Array<string> {\n    const inputLetters: Array<string> = input.split('');\n    const invalidCharacters: Array<string> = inputLetters.filter((letter: string) => {\n      const rules: Array<RegExp> = Object.values(this.diagramValidationRegExpList);\n      const letterIsInvalid: boolean = !rules.some((regExp: RegExp) => {\n        return letter.match(regExp) !== null;\n      });\n\n      return letterIsInvalid;\n    });\n\n    return invalidCharacters;\n  }\n\n  /**\n   * Build an error message which lists all invalid characters.\n   *\n   * @param invalidCharacters An array that contains all detected invalid\n   * characters.\n   * @return A string with an error message that contains all invalid characters\n   * of a diagram name.\n   */\n  private getInvalidCharacterErrorMessage(invalidCharacters: Array<string>): string {\n    // This filters all duplicate invalid characters so that the list contains each character only once.\n    const filteredInvalidCharacters: Array<string> = invalidCharacters.filter(\n      (current: string, index: number): boolean => {\n        return invalidCharacters.indexOf(current) === index;\n      },\n    );\n\n    const messagePrefix: string = 'Your diagram contains at least one invalid-character: ';\n\n    // Replaces the commas between the invalid characters by a space to increase readability.\n    const invalidCharacterString: string = `${filteredInvalidCharacters}`.replace(/(.)./g, '$1 ');\n\n    return `${messagePrefix} ${invalidCharacterString}`;\n  }\n\n  private async openNewDiagram(): Promise<void> {\n    const unsavedDiagrams: Array<IDiagram> = this.openedDiagrams.filter((diagram: IDiagram): boolean => {\n      const diagramIsUnsavedDiagram: boolean = diagram.name.startsWith('Untitled-');\n\n      if (!diagramIsUnsavedDiagram) {\n        return false;\n      }\n\n      const diagramIndex: number = parseInt(diagram.name.replace('Untitled-', ''));\n\n      // eslint-disable-next-line no-restricted-globals\n      return !isNaN(diagramIndex);\n    });\n\n    const unsavedDiagramIndexes: Array<number> = unsavedDiagrams.map((diagram: IDiagram) => {\n      const diagramIndex: number = parseInt(diagram.name.replace('Untitled-', ''));\n\n      return diagramIndex;\n    });\n\n    const anotherUnsavedDiagramExists: boolean = unsavedDiagrams.length > 0;\n    const newDiagramIndex: number = anotherUnsavedDiagramExists ? Math.max(...unsavedDiagramIndexes) + 1 : 1;\n\n    const solutionIsNotFullyOpen: boolean = this.openedSolution === undefined;\n    if (solutionIsNotFullyOpen) {\n      await this.updateSolution();\n    }\n\n    const createdDiagram: IDiagram = await this.diagramCreationService.createNewDiagram(\n      this.openedSolution.uri,\n      `Untitled-${newDiagramIndex}`,\n    );\n\n    this.openDiagramStateService.saveDiagramState(createdDiagram.uri, createdDiagram.xml, undefined, undefined, true);\n\n    this.openDiagramService.openDiagramFromSolution(createdDiagram.uri, this.createIdentityForSolutionExplorer());\n\n    await this.updateSolution();\n\n    this.navigateToDetailView(createdDiagram);\n  }\n\n  /**\n   * The event listener used to handle mouse clicks during the diagram\n   * creation.\n   *\n   * The listener will try to finish the diagram creation if the user clicks\n   * on another element then the input.\n   */\n  private onCreateNewDiagramClickEvent = async (event: MouseEvent): Promise<void> => {\n    const inputWasClicked: boolean = event.target === this.createNewDiagramInput;\n    if (inputWasClicked) {\n      return;\n    }\n\n    const emptyDiagram: IDiagram = await this.finishDiagramCreation();\n    if (emptyDiagram === undefined) {\n      return;\n    }\n\n    await this.openDiagramAndUpdateSolution(emptyDiagram);\n  };\n\n  private async openDiagramAndUpdateSolution(createdDiagram: IDiagram): Promise<void> {\n    await this.openDiagramService.openDiagramFromSolution(createdDiagram.uri, this.createIdentityForSolutionExplorer());\n\n    this.openDiagramStateService.setDiagramChange(createdDiagram.uri, {change: 'create'});\n\n    await this.updateSolution();\n    this.resetDiagramCreation();\n    this.navigateToDetailView(createdDiagram);\n  }\n\n  /**\n   * The event listener used to handle keyboard events during the diagram\n   * creation.\n   *\n   * The listener will try to finish the diagram creation if the user presses\n   * the enter key. It will abort the creation if the escape key is pressed.\n   */\n  private onCreateNewDiagramKeyupEvent = async (event: KeyboardEvent): Promise<void> => {\n    const pressedKey: string = event.key;\n\n    if (pressedKey === ENTER_KEY) {\n      const emptyDiagram: IDiagram = await this.finishDiagramCreation();\n      if (emptyDiagram === undefined) {\n        return;\n      }\n\n      await this.openDiagramAndUpdateSolution(emptyDiagram);\n    } else if (pressedKey === ESCAPE_KEY) {\n      this.resetDiagramCreation();\n    }\n  };\n\n  /**\n   * The event listener used to handle mouse clicks during the diagram\n   * renaming.\n   *\n   * The listener will try to finish the diagram renaming if the user clicks\n   * on another element then the input. It will abort if there are any\n   * validation errors.\n   */\n  private onRenameDiagramClickEvent = async (event: MouseEvent): Promise<void> => {\n    const inputWasClicked: boolean = event.target === this.renameDiagramInput;\n    if (inputWasClicked) {\n      return;\n    }\n\n    const inputWasNotValid: boolean = !(await this.finishDiagramRenaming(true));\n    if (inputWasNotValid) {\n      this.resetDiagramRenaming();\n\n      return;\n    }\n\n    this.updateSolution().then(() => {\n      this.refreshDisplayedDiagrams();\n    });\n\n    this.resetDiagramRenaming();\n  };\n\n  /**\n   * The event listener used to handle keyboard events during the diagram\n   * renaming.\n   *\n   * The listener will try to finish the diagram creation if the user presses\n   * the enter key. It will abort the creation if the escape key is pressed. It\n   * will not abort the diagram renaming, if there are validation errors.\n   */\n  private onRenameDiagramKeyupEvent = async (event: KeyboardEvent): Promise<void> => {\n    const pressedKey: string = event.key;\n\n    const enterWasPressed: boolean = pressedKey === ENTER_KEY;\n    const escapeWasPressed: boolean = pressedKey === ESCAPE_KEY;\n\n    if (enterWasPressed) {\n      const inputWasNotValid: boolean = !(await this.finishDiagramRenaming(false));\n      if (inputWasNotValid) {\n        return;\n      }\n\n      this.updateSolution().then(() => {\n        this.refreshDisplayedDiagrams();\n      });\n      this.resetDiagramRenaming();\n    } else if (escapeWasPressed) {\n      this.resetDiagramRenaming();\n    }\n  };\n\n  /**\n   * Checks, if the input contains any non empty values.\n   *\n   * @return true, if the input has some non empty value.\n   */\n  private hasNonEmptyValue(input: HTMLInputElement): boolean {\n    const inputValue: string = input.value;\n\n    const inputHasValue: boolean = inputValue !== undefined && inputValue !== null && inputValue !== '';\n\n    return inputHasValue;\n  }\n\n  /**\n   * Finishes the diagram renaming process. This method will again run the\n   * validation and ensures that all input is correct. Otherwise an error is\n   * displayed to the user.\n   *\n   * If the validation passes, the diagram will be created and returned.\n   *\n   * @param silent if a notification should be shown on validation failure.\n   * @returns true if the diagram was renamed, false otherwise.\n   */\n  private async finishDiagramRenaming(silent: boolean): Promise<boolean> {\n    const validationResult: ControllerValidateResult = await this.validationController.validate();\n    const inputWasNotValid: boolean =\n      !validationResult.valid || (this.validationController.errors && this.validationController.errors.length > 0);\n\n    if (inputWasNotValid) {\n      if (!silent) {\n        const message: string = 'Please resolve all errors first.';\n\n        this.notificationService.showNotification(NotificationType.INFO, message);\n      }\n\n      return false;\n    }\n\n    const filenameWasNotChanged: boolean =\n      this.currentlyRenamingDiagram.name === this.diagramRenamingState.currentDiagramInputValue;\n    if (filenameWasNotChanged) {\n      return true;\n    }\n\n    try {\n      await this.solutionService.renameDiagram(\n        this.currentlyRenamingDiagram,\n        this.diagramRenamingState.currentDiagramInputValue,\n      );\n\n      this.openDiagramStateService.setDiagramChange(this.currentlyRenamingDiagram.uri, {change: 'rename'});\n    } catch (error) {\n      this.notificationService.showNotification(NotificationType.WARNING, error.message);\n\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finishes the diagram creation. This method will again run the validation\n   * and ensures that all input is correct. Otherwise an error is displayed to\n   * the user.\n   *\n   * If no input element was empty, the diagram creation will be aborted.\n   * If the validation passes, the diagram will be created and returned.\n   */\n  private async finishDiagramCreation(): Promise<IDiagram> {\n    const inputHasNoValue: boolean = !this.hasNonEmptyValue(this.createNewDiagramInput);\n    if (inputHasNoValue) {\n      this.resetDiagramCreation();\n\n      return undefined;\n    }\n\n    const validationResult: ControllerValidateResult = await this.validationController.validate();\n\n    const inputWasNotValid: boolean =\n      !validationResult.valid || (this.validationController.errors && this.validationController.errors.length > 0);\n\n    if (inputWasNotValid) {\n      const message: string = 'Please resolve all errors first.';\n      this.notificationService.showNotification(NotificationType.INFO, message);\n\n      return undefined;\n    }\n\n    const emptyDiagram: IDiagram = await this.diagramCreationService.createNewDiagram(\n      this.openedSolution.uri,\n      this.diagramCreationState.currentDiagramInputValue,\n    );\n\n    try {\n      await this.solutionService.saveDiagram(emptyDiagram, emptyDiagram.uri);\n    } catch (error) {\n      this.notificationService.showNotification(NotificationType.ERROR, error.message);\n\n      return undefined;\n    }\n\n    return emptyDiagram;\n  }\n\n  /**\n   * Resets the diagram renaming state to its default. Any listeners will be\n   * removed and input values will be cleared.\n   */\n  private resetDiagramRenaming(): void {\n    // Remove all used event listeners.\n    document.removeEventListener('click', this.onRenameDiagramClickEvent);\n    document.removeEventListener('keyup', this.onRenameDiagramKeyupEvent);\n\n    // Reset input field.\n    this.diagramRenamingState.currentDiagramInputValue = '';\n    this.renameDiagramInput.value = '';\n    // Hide input field.\n    this.currentlyRenamingDiagram = null;\n\n    ValidationRules.off(this.diagramRenamingState);\n  }\n\n  /**\n   * Resets the diagram creation state to its default. Any listeners will be\n   * removed and input values will be cleared.\n   */\n  private resetDiagramCreation(): void {\n    // Remove all used event listeners.\n    document.removeEventListener('click', this.onCreateNewDiagramClickEvent);\n    document.removeEventListener('keyup', this.onCreateNewDiagramKeyupEvent);\n\n    // Reset input field.\n    this.diagramCreationState.currentDiagramInputValue = '';\n    this.createNewDiagramInput.value = '';\n    // Hide input field.\n    this.diagramCreationState.isCreateDiagramInputShown = false;\n\n    ValidationRules.off(this.diagramCreationState);\n  }\n\n  private findURIObject<TType extends {uri: string}>(objects: Array<TType>, targetURI: string): TType {\n    const foundObject: TType = objects.find((object: TType): boolean => {\n      return object.uri.toLowerCase() === targetURI.toLowerCase();\n    });\n\n    return foundObject;\n  }\n\n  private disposeSubscriptions(): void {\n    for (const subscription of this.subscriptions) {\n      subscription.dispose();\n    }\n  }\n\n  private async updateSolutionExplorer(): Promise<void> {\n    const solutionUri: string = this.router.currentInstruction.queryParams.solutionUri;\n    const solutionUriSpecified: boolean = solutionUri !== undefined;\n\n    const diagramName: string = this.router.currentInstruction.params.diagramName;\n    const diagramNameIsSpecified: boolean = diagramName !== undefined;\n\n    const diagramUri: string = this.router.currentInstruction.queryParams.diagramUri;\n\n    const routeName: string = this.router.currentInstruction.config.name;\n    const routeNameNeedsUpdate: boolean = routeName === 'design' || routeName === 'inspect' || routeName === 'think';\n    if (routeNameNeedsUpdate) {\n      this.diagramRoute = routeName;\n      this.inspectView = this.router.currentInstruction.params.view;\n    }\n\n    this.activeDiagram = undefined;\n\n    if (solutionUriSpecified && diagramNameIsSpecified) {\n      try {\n        const activeSolution: ISolution = await this.solutionService.loadSolution();\n        this.activeDiagram = activeSolution.diagrams.find((diagram: IDiagram) => {\n          const currentDiagramIsGivenDiagram: boolean = diagram.uri === diagramUri;\n\n          const solutionIsRemoteSolution: boolean = solutionUri.startsWith('http');\n          const diagramIsInGivenSolution: boolean = solutionIsRemoteSolution\n            ? diagram.uri.includes(solutionUri)\n            : diagram.uri.includes(`${solutionUri}/${diagram.name}.bpmn`);\n\n          return diagram.name === diagramName && (currentDiagramIsGivenDiagram || diagramIsInGivenSolution);\n        });\n      } catch {\n        // Do nothing\n      }\n    }\n  }\n\n  private setValidationRules(): void {\n    ValidationRules.ensure((state: IDiagramNameInputState) => state.currentDiagramInputValue)\n      .required()\n      .withMessage('Diagram name cannot be blank.')\n      .satisfies((input: string) => {\n        const inputIsNotEmpty: boolean = input !== undefined;\n\n        const inputAsCharArray: Array<string> = inputIsNotEmpty ? input.split('') : [];\n\n        const diagramNamePassesNameChecks: boolean = inputAsCharArray.every((letter: string) => {\n          // tslint:disable-next-line:typedef\n          const letterMatches = (regExp: RegExp): boolean => regExp.test(letter);\n\n          return this.diagramValidationRegExpList.some(letterMatches);\n        });\n\n        return diagramNamePassesNameChecks;\n      })\n      // eslint-disable-next-line quotes\n      .withMessage(`Your diagram contains at least one invalid-character: \\${$value}`)\n      .satisfies((input: string) => {\n        const inputIsNotEmpty: boolean = input !== undefined;\n\n        const diagramDoesNotStartWithWhitespace: boolean = inputIsNotEmpty ? !/^\\s/.test(input) : true;\n\n        return diagramDoesNotStartWithWhitespace;\n      })\n      .withMessage('The diagram name cannot start with a whitespace character.')\n      .satisfies((input: string) => {\n        const inputIsNotEmpty: boolean = input !== undefined;\n\n        const diagramDoesNotEndWithWhitespace: boolean = inputIsNotEmpty ? !/\\s+$/.test(input) : true;\n\n        return diagramDoesNotEndWithWhitespace;\n      })\n      .withMessage('The diagram name cannot end with a whitespace character.')\n      .then()\n      .satisfies(async (input: string) => {\n        const diagramNameIsUnchanged: boolean =\n          this.isCurrentlyRenamingDiagram && this.currentlyRenamingDiagram.name.toLowerCase() === input.toLowerCase();\n\n        if (diagramNameIsUnchanged) {\n          return true;\n        }\n\n        // The solution may have changed on the file system.\n        await this.updateSolution();\n\n        const isRemoteSolution: boolean = this.isUriFromRemoteSolution(this.openedSolution.uri);\n        const isRunningInElectron: boolean = (window as any).nodeRequire;\n\n        let expectedDiagramUri: string;\n        if (isRemoteSolution) {\n          expectedDiagramUri = `${this.openedSolution.uri}/${input}.bpmn`;\n        } else if (isRunningInElectron) {\n          expectedDiagramUri = join(this.openedSolution.uri, `${input}.bpmn`);\n        }\n\n        const diagramWithUriDoesNotExist: boolean =\n          this.findURIObject(this.openedSolution.diagrams, expectedDiagramUri) === undefined;\n        return diagramWithUriDoesNotExist;\n      })\n      .withMessage('A diagram with that name already exists.')\n      .on(this.diagramRenamingState)\n      .on(this.diagramCreationState);\n  }\n\n  private isUriFromRemoteSolution(uri: string): boolean {\n    return uri.startsWith('http');\n  }\n}\n",".solution__diagram-list {\n  padding: 0;\n}\n\n.solution-loading {\n  text-align: center;\n}\n\n.diagram-create {\n  width: 100%;\n  padding: 2.5px 0;\n  padding-left: 22px;\n  list-style: none;\n}\n\n.diagram-create .input-holder {\n  flex: 1;\n  margin-right: 5px;\n}\n\n.input-holder__input {\n  width: 100%;\n}\n\n.input-holder__input--error {\n  border-color: red;\n}\n\n.diagram-create__errors {\n  padding: 2px;\n  padding-left: 22px;\n  margin-right: 5px;\n  margin-left: 0;\n  border: 2px solid red;\n  color: red;\n  border-top: none;\n}\n\n.diagram-create__error {\n  list-style-type: disc;\n}\n\n.diagram-rename-container {\n  width: 100%;\n  padding: 2.5px 0px;\n  list-style: none;\n}\n\n.diagram-rename-container .input-holder {\n  flex: 1;\n  margin-right: 0;\n}\n\n.rename-errors-container__error-list {\n  padding: 2px;\n  padding-left: 25px;\n  margin-right: 0px;\n  border: 2px solid red;\n  border-top: none;\n  color: red;\n}\n\n.rename-errors-container__error-list-entry {\n  list-style-type: disc;\n}\n\n.diagram-entry {\n  display: flex;\n  padding: 2.5px 5px 2.5px 22px;\n  cursor: pointer;\n}\n\n.diagram-entry--highlight {\n  background-color: #e6e6e6;\n}\n\n.diagram-entry__icon {\n  flex: 0;\n  margin-top: 2px;\n  margin-right: 6px;\n}\n\n.diagram-entry__unsaved-icon {\n  flex: 0;\n  position: relative;\n  left: -14px;\n  margin-top: 6px;\n  margin-right: -9px;\n  font-size: 9px;\n  opacity: 0.5;\n}\n\n.diagram-entry__name-container {\n  flex: 1;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.diagram-entry__location {\n  font-size: 12px;\n  color: darkgray;\n}\n\n.diagram-entry:hover .diagram-entry__name {\n  text-decoration: underline;\n}\n\n.diagram-entry__actions {\n  display: none;\n}\n\n.diagram-entry:hover .diagram-entry__actions {\n  display: flex;\n}\n\n@media (any-hover: none) {\n  .diagram-entry__actions {\n    display: flex;\n  }\n}\n\n.diagram-entry__actions button {\n  padding: 0 2px;\n  background: transparent;\n  border: none;\n  cursor: default;\n}\n\n.toast-message__headline {\n  width: calc(100% + 30px);\n  margin-left: -30px;\n}\n\n.toast-not-allowed-renaming-or-deleting {\n  width: 350px;\n}\n\n.diagram-contextmenu {\n  position: fixed;\n  background: white;\n  border: 1px solid #dcdbdb;\n  border-radius: 5px;\n}\n\n.diagram-contextmenu__entry {\n  width: 100%;\n  padding: 0 10px;\n  text-align: center;\n}\n\n.diagram-contextmenu__entry:hover {\n  background-color: #dcdbdb;\n}\n\n.saving-diagram-modal__loading-spinner {\n  display: inline-block;\n  width: 100%;\n  height: 100%;\n  user-select: none;\n  white-space: nowrap;\n}\n\n.saving-diagram-modal__loading-spinner-icon {\n  position: absolute;\n  left: 50%;\n  top: calc(50% - 22px);\n  height: 150px;\n  transform: translate(-50%, -50%);\n}\n\n.saving-diagram-modal__loading-spinner-text {\n  position: absolute;\n  left: 50%;\n  transform: translateX(-50%);\n  margin-top: 5px;\n  bottom: 10px;\n}\n",null,"import {EventAggregator} from 'aurelia-event-aggregator';\nimport {inject} from 'aurelia-framework';\n\nimport environment from '../../environment';\n\n@inject(EventAggregator)\nexport class StartPage {\n  public isRunningInElectron: boolean = (window as any).nodeRequire;\n  public isRunningOnWindows: boolean = false;\n  public isRunningOnMacOS: boolean = false;\n\n  private eventAggregator: EventAggregator;\n  private ipcRenderer: any;\n\n  constructor(eventAggregator: EventAggregator) {\n    this.eventAggregator = eventAggregator;\n  }\n\n  public activate(): void {\n    if (this.isRunningInElectron) {\n      this.isRunningOnWindows = process.platform === 'win32';\n      this.isRunningOnMacOS = process.platform === 'darwin';\n\n      this.ipcRenderer = (window as any).nodeRequire('electron').ipcRenderer;\n      this.ipcRenderer.on('menubar__start_close_diagram', this.closeBpmnStudio);\n    }\n  }\n\n  public deactivate(): void {\n    if (this.isRunningInElectron) {\n      this.ipcRenderer.removeListener('menubar__start_close_diagram', this.closeBpmnStudio);\n    }\n  }\n\n  public openLocalSolution(): void {\n    this.eventAggregator.publish(environment.events.startPage.openLocalSolution);\n  }\n\n  public openDiagram(): void {\n    this.eventAggregator.publish(environment.events.startPage.openDiagram);\n  }\n\n  public createNewDiagram(): void {\n    this.eventAggregator.publish(environment.events.startPage.createDiagram);\n  }\n\n  private closeBpmnStudio: Function = (): void => {\n    this.ipcRenderer.send('close_bpmn-studio');\n  };\n}\n",".start-page__container {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n\n.start-page__content {\n  text-align: center;\n  -webkit-user-drag: none;\n  user-select: none;\n}\n\n.start-page__title {\n  position: relative;\n  top: 150px;\n  margin: 0;\n}\n\n.start-page__icon {\n  opacity: 0.1;\n  -webkit-user-drag: none;\n}\n\n.start-page__quick-start {\n  display: flex;\n  flex-direction: column;\n  padding: 0 250px;\n}\n\n.start-page__quick-start:hover {\n  cursor: default;\n}\n\n.quick-start__item {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.quick-start__topic {\n  width: 50%;\n  margin-right: 20px;\n  font-size: 14px;\n  font-weight: bold;\n  color: #555555;\n  text-align: right;\n}\n\n.quick-start__topic:hover {\n  cursor: pointer;\n  text-decoration: underline;\n}\n\n.quick-start__shortcut {\n  width: 50%;\n  margin-left: 20px;\n  font-size: 14px;\n  font-weight: bold;\n  color: #555555;\n  text-align: left;\n}\n",null,"import {EventAggregator, Subscription} from 'aurelia-event-aggregator';\nimport {computedFrom, inject} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\n\nimport $ from 'jquery';\n\nimport {IDiagram} from '@process-engine/solutionexplorer.contracts';\n\nimport {DiffMode, ISolutionEntry, ISolutionService, NotificationType} from '../../contracts/index';\nimport environment from '../../environment';\nimport {NotificationService} from '../../services/notification-service/notification.service';\n\ntype UpdateProgressData = {\n  bytesPerSecond: number;\n  delta: number;\n  percent: number;\n  total: number;\n  transferred: number;\n};\n\n@inject(EventAggregator, Router, 'SolutionService', 'NotificationService')\nexport class StatusBar {\n  public showDiagramViewButtons: boolean = false;\n  public diffIsShown: boolean = false;\n  public currentDiffMode: DiffMode;\n  public xmlIsShown: boolean = false;\n  public showInspectCorrelationButtons: boolean = false;\n  public showChangeList: boolean = false;\n  public currentXmlIdentifier: string = 'New';\n  public previousXmlIdentifier: string = 'Old';\n  public showInspectPanel: boolean = true;\n  public activeSolutionEntry: ISolutionEntry;\n  public activeDiagram: IDiagram;\n\n  public updateProgressData: UpdateProgressData;\n  public updateVersion: string;\n  public updateAvailable: boolean = false;\n  public updateDropdown: HTMLElement;\n  public updateDownloadFinished: boolean = false;\n  public updateStarted: boolean = false;\n\n  public diffMode: typeof DiffMode = DiffMode;\n\n  private eventAggregator: EventAggregator;\n  private router: Router;\n  private solutionService: ISolutionService;\n  private subscriptions: Array<Subscription>;\n  private designView: string;\n  private ipcRenderer: any;\n  private notificationService: NotificationService;\n\n  constructor(\n    eventAggregator: EventAggregator,\n    router: Router,\n    solutionService: ISolutionService,\n    notificationService: NotificationService,\n  ) {\n    this.eventAggregator = eventAggregator;\n    this.router = router;\n    this.solutionService = solutionService;\n    this.notificationService = notificationService;\n\n    const applicationRunsInElectron: boolean = (window as any).nodeRequire !== undefined;\n    if (applicationRunsInElectron) {\n      this.ipcRenderer = (window as any).nodeRequire('electron').ipcRenderer;\n\n      this.ipcRenderer.on('update_error', () => {\n        notificationService.showNotification(NotificationType.INFO, 'Update Error!');\n      });\n\n      this.ipcRenderer.on('update_available', (event: Event, version: string) => {\n        this.updateAvailable = true;\n        this.updateVersion = version;\n\n        const message: string =\n          'A new update is available.\\nPlease click on the BPMN Studio icon in the statusbar to start the download.';\n\n        this.notificationService.showNonDisappearingNotification(NotificationType.INFO, message);\n      });\n\n      this.ipcRenderer.on('update_download_progress', (event: Event, updateProgressData: UpdateProgressData) => {\n        this.updateProgressData = updateProgressData;\n      });\n\n      this.ipcRenderer.on('update_downloaded', () => {\n        this.updateDownloadFinished = true;\n      });\n    }\n  }\n\n  public async attached(): Promise<void> {\n    this.subscriptions = [\n      this.eventAggregator.subscribe(environment.events.statusBar.showDiagramViewButtons, () => {\n        this.showDiagramViewButtons = true;\n      }),\n\n      this.eventAggregator.subscribe(environment.events.statusBar.hideDiagramViewButtons, () => {\n        this.showDiagramViewButtons = false;\n        this.xmlIsShown = false;\n        this.diffIsShown = false;\n        this.showChangeList = false;\n        this.currentDiffMode = DiffMode.NewVsOld;\n      }),\n\n      this.eventAggregator.subscribe(environment.events.statusBar.setXmlIdentifier, (xmlIdentifier: Array<string>) => {\n        [this.previousXmlIdentifier, this.currentXmlIdentifier] = xmlIdentifier;\n      }),\n\n      this.eventAggregator.subscribe(\n        environment.events.statusBar.showInspectCorrelationButtons,\n        (showInspectCorrelation: boolean) => {\n          this.showInspectCorrelationButtons = showInspectCorrelation;\n        },\n      ),\n\n      this.eventAggregator.subscribe('router:navigation:success', async () => {\n        await this.updateStatusBar();\n        this.refreshRightButtons();\n      }),\n    ];\n\n    $(document).on('click', '.update-dropdown', (event: Event) => {\n      event.stopPropagation();\n    });\n\n    await this.updateStatusBar();\n\n    this.refreshRightButtons();\n\n    this.currentDiffMode = DiffMode.NewVsOld;\n  }\n\n  public detached(): void {\n    this.disposeAllSubscriptions();\n  }\n\n  @computedFrom('updateProgressData')\n  public get isDownloading(): boolean {\n    return this.updateProgressData !== undefined;\n  }\n\n  public toggleXMLView(): void {\n    if (this.diffIsShown) {\n      this.toggleDiffView();\n    }\n\n    this.designView = this.xmlIsShown ? 'detail' : 'xml';\n\n    this.router.navigateToRoute('design', {\n      diagramName: this.activeDiagram ? this.activeDiagram.name : undefined,\n      diagramUri: this.activeDiagram ? this.activeDiagram.uri : undefined,\n      solutionUri: this.activeSolutionEntry.uri,\n      view: this.designView,\n    });\n\n    this.xmlIsShown = !this.xmlIsShown;\n  }\n\n  public changeDiffMode(mode: DiffMode): void {\n    this.currentDiffMode = mode;\n    this.eventAggregator.publish(environment.events.diffView.changeDiffMode, mode);\n  }\n\n  public toggleChangeList(): void {\n    this.showChangeList = !this.showChangeList;\n    this.eventAggregator.publish(environment.events.diffView.toggleChangeList);\n  }\n\n  public toggleDiffView(): void {\n    if (this.xmlIsShown) {\n      this.toggleXMLView();\n    }\n\n    this.designView = this.diffIsShown ? 'detail' : 'diff';\n\n    this.router.navigateToRoute('design', {\n      diagramName: this.activeDiagram ? this.activeDiagram.name : undefined,\n      diagramUri: this.activeDiagram ? this.activeDiagram.uri : undefined,\n      solutionUri: this.activeSolutionEntry.uri,\n      view: this.designView,\n    });\n\n    this.diffIsShown = !this.diffIsShown;\n  }\n\n  public toggleInspectPanel(): void {\n    this.showInspectPanel = !this.showInspectPanel;\n\n    this.eventAggregator.publish(environment.events.inspectCorrelation.showInspectPanel, this.showInspectPanel);\n  }\n\n  public showReleaseNotes(): void {\n    this.ipcRenderer.send('show_release_notes');\n  }\n\n  public hideDropdown(): void {\n    if (this.updateStarted) {\n      return;\n    }\n\n    this.updateDropdown.classList.remove('show');\n  }\n\n  public startUpdate(): void {\n    if (this.updateStarted) {\n      return;\n    }\n\n    this.ipcRenderer.send('download_update');\n    this.updateStarted = true;\n  }\n\n  public installUpdate(): void {\n    this.ipcRenderer.send('quit_and_install');\n  }\n\n  public cancelUpdate(): void {\n    this.ipcRenderer.send('cancel_update');\n\n    this.updateProgressData = undefined;\n    this.updateStarted = false;\n  }\n\n  private refreshRightButtons(): void {\n    const currentView: string = this.router.currentInstruction.params.view;\n    switch (currentView) {\n      case 'xml':\n        this.xmlIsShown = true;\n        break;\n      case 'diff':\n        this.diffIsShown = true;\n        break;\n      default:\n        this.xmlIsShown = false;\n        this.diffIsShown = false;\n        break;\n    }\n  }\n\n  private disposeAllSubscriptions(): void {\n    this.subscriptions.forEach((subscription: Subscription) => {\n      subscription.dispose();\n    });\n  }\n\n  private async updateStatusBar(): Promise<void> {\n    const solutionUriFromNavigation: string = this.router.currentInstruction.queryParams.solutionUri;\n\n    this.activeSolutionEntry = this.solutionService.getSolutionEntryForUri(solutionUriFromNavigation);\n\n    const solutionIsSet: boolean = this.activeSolutionEntry !== undefined;\n    const diagramName: string = this.router.currentInstruction.params.diagramName;\n    const diagramIsSet: boolean = diagramName !== undefined;\n\n    if (solutionIsSet && diagramIsSet) {\n      const activeSolutionIsOpenDiagramSolution: boolean = solutionUriFromNavigation === 'about:open-diagrams';\n      if (activeSolutionIsOpenDiagramSolution) {\n        const persistedDiagrams: Array<IDiagram> = this.solutionService.getOpenDiagrams();\n\n        this.activeDiagram = persistedDiagrams.find((diagram: IDiagram) => {\n          return diagram.name === diagramName;\n        });\n      } else {\n        this.activeDiagram = await this.activeSolutionEntry.service.loadDiagram(diagramName);\n      }\n    }\n  }\n}\n","/*\n * STATUS BAR\n *\n*/\n\n.status-bar {\n  position: fixed;\n  bottom: 0;\n  display: flex;\n  width: 100%;\n  height: 22px;\n  padding: 0 5px;\n  cursor: default;\n  background-color: #3f51b5;\n  background-color: #9c27b0;\n  background-color: #607d8b;\n  border-top: 2px solid #e9e9e9;\n  user-select: none;\n  color: #fff;\n  font-size: 12px;\n  flex-direction: row;\n  justify-content: space-evenly;\n  align-items: stretch;\n}\n\n.status-bar__left-bar,\n.status-bar__center-bar,\n.status-bar__right-bar {\n  flex: 1 100%;\n}\n\n.status-bar__left-bar {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n}\n\n.status-bar__center-bar {\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n}\n\n.status-bar__right-bar {\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n}\n\n.status-bar__element {\n  display: inline-block;\n  min-width: 50px;\n  padding-right: 10px;\n  padding-left: 10px;\n  padding-bottom: 2px;\n  color: white;\n  text-align: center;\n  white-space: nowrap;\n}\n\n.status-bar__element--active {\n  background-color: #445a65;\n  text-decoration: none;\n}\n\n.status-bar__element:hover {\n  background-color: #445a65;\n  text-decoration: none;\n}\n\n.center-bar__diff-view-buttons {\n  display: inline-flex;\n  float: left;\n}\n\n.status-bar__diff-view {\n  display: inline-flex;\n  max-width: 280px;\n}\n\n.identifier {\n  max-width: 200px;\n  margin-right: 5px;\n  margin-left: 5px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.arrow-icon {\n  margin-top: 2px;\n}\n\n.update-button {\n  width: 15px;\n  height: 15px;\n  cursor: pointer;\n  line-height: 15px;\n}\n\n.update-button-icon {\n  height: 15px;\n}\n\n.update-dropdown {\n  width: 315px;\n  height: 135px;\n  text-align: center;\n}\n\n.update-dropdown-text {\n  display: block;\n  padding: 0px 10px 3px 10px;\n}\n\n.update-dropdown-title-container {\n  padding-bottom: 15px;\n}\n\n.update-dropdown-title {\n  display: inline-block;\n  margin: auto;\n  font-weight: bold;\n}\n\n.update-dropdown-progressbar {\n  height: 16px;\n  margin: 0 10px 0 10px;\n}\n\n.update-dropdown-progressbar-progress {\n  background-color: #ccc;\n  font-size: 12px;\n}\n\n.update-dropdown-progress-container {\n  overflow: hidden;\n  vertical-align: middle;\n}\n\n.update-dropdown-cancel-download-button {\n  margin-top: 5px;\n}\n\n.update-dropdown-button-container {\n  margin: 10px 30px;\n}\n\n.update-dropdown-cancel-button {\n  float: left;\n}\n\n.update-dropdown-update-button {\n  float: right;\n}\n\n.update-dropdown-install-button {\n  float: right;\n  margin-right: 15px;\n  margin-top: 20px;\n}\n\n.update-dropdown-install-text {\n  display: inherit;\n  width: 212px;\n  text-align: left;\n  margin-left: 10px;\n}\n\n.update-dropdown-release-notes {\n  display: block;\n  cursor: pointer;\n}\n",null,"import {EventAggregator, Subscription} from 'aurelia-event-aggregator';\nimport {bindable, computedFrom, inject} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {domEventDispatch} from 'dom-event-dispatch';\n\nimport {IIdentity} from '@essential-projects/iam_contracts';\nimport {DataModels} from '@process-engine/management_api_contracts';\n\nimport {\n  AuthenticationStateEvent,\n  IDynamicUiService,\n  ISolutionEntry,\n  ISolutionService,\n  NotificationType,\n} from '../../contracts/index';\nimport {NotificationService} from '../../services/notification-service/notification.service';\nimport {DynamicUiWrapper} from '../dynamic-ui-wrapper/dynamic-ui-wrapper';\n\ninterface IRouteParameters {\n  diagramName: string;\n  solutionUri: string;\n  correlationId: string;\n  processInstanceId: string;\n  taskId: string;\n}\n\n@inject(EventAggregator, 'DynamicUiService', Router, 'NotificationService', 'SolutionService', Element)\nexport class TaskDynamicUi {\n  public dynamicUiWrapper: DynamicUiWrapper;\n\n  @bindable() public correlationId: string;\n  @bindable() public processModelId: string;\n  @bindable() public processInstanceId: string;\n  @bindable() public taskId: string;\n  @bindable() public isModal: boolean;\n  @bindable() public activeSolutionEntry: ISolutionEntry;\n  @bindable public userTask: DataModels.UserTasks.UserTask;\n  @bindable public manualTask: DataModels.ManualTasks.ManualTask;\n\n  private activeDiagramName: string;\n  private activeSolutionUri: string;\n  private eventAggregator: EventAggregator;\n  private router: Router;\n  private notificationService: NotificationService;\n  private solutionService: ISolutionService;\n  private dynamicUiService: IDynamicUiService;\n  private subscriptions: Array<Subscription>;\n  private element: Element;\n  private identity: IIdentity;\n\n  constructor(\n    eventAggregator: EventAggregator,\n    dynamicUiService: IDynamicUiService,\n    router: Router,\n    notificationService: NotificationService,\n    solutionService: ISolutionService,\n    element: Element,\n  ) {\n    this.eventAggregator = eventAggregator;\n    this.dynamicUiService = dynamicUiService;\n    this.router = router;\n    this.notificationService = notificationService;\n    this.solutionService = solutionService;\n    this.element = element;\n  }\n\n  public activate(routeParameters: IRouteParameters): void {\n    // This is called when starting tasks\n    this.correlationId = routeParameters.correlationId;\n    this.processModelId = routeParameters.diagramName;\n    this.processInstanceId = routeParameters.processInstanceId;\n    this.taskId = routeParameters.taskId;\n    this.activeDiagramName = routeParameters.diagramName;\n    this.activeSolutionUri = routeParameters.solutionUri;\n\n    this.activeSolutionEntry = this.solutionService.getSolutionEntryForUri(this.activeSolutionUri);\n    this.identity = this.activeSolutionEntry.identity;\n\n    this.isModal = false;\n  }\n\n  public attached(): void {\n    this.dynamicUiWrapper.identity = this.identity;\n    this.getTask();\n\n    this.subscriptions = [\n      this.eventAggregator.subscribe(AuthenticationStateEvent.LOGIN, () => {\n        this.getTask();\n      }),\n      this.eventAggregator.subscribe(AuthenticationStateEvent.LOGOUT, () => {\n        this.getTask();\n      }),\n    ];\n\n    this.dynamicUiWrapper.onButtonClick = (): void => {\n      this.finishTask();\n    };\n\n    this.setDynamicUIWrapperUserTask();\n    this.setDynamicUIWrapperManualTask();\n    this.dynamicUiWrapper.activeSolutionEntry = this.activeSolutionEntry;\n  }\n\n  public activeSolutionEntryChanged(newValue: ISolutionEntry): void {\n    this.identity = newValue.identity;\n\n    const dynamicUiWrapperIsUndefined: boolean = this.dynamicUiWrapper === undefined;\n    if (dynamicUiWrapperIsUndefined) {\n      return;\n    }\n\n    this.dynamicUiWrapper.activeSolutionEntry = newValue;\n  }\n\n  public detached(): void {\n    for (const subscription of this.subscriptions) {\n      subscription.dispose();\n    }\n  }\n\n  public userTaskChanged(): void {\n    this.setDynamicUIWrapperUserTask();\n  }\n\n  public manualTaskChanged(): void {\n    this.setDynamicUIWrapperManualTask();\n  }\n\n  @computedFrom('userTask', 'manualTask')\n  public get taskName(): string {\n    const nonWhiteSpaceRegex: RegExp = /\\S/;\n    const task: DataModels.UserTasks.UserTask | DataModels.ManualTasks.ManualTask =\n      this.userTask === undefined ? this.manualTask : this.userTask;\n\n    const noTaskIsSet: boolean = task === undefined;\n    if (noTaskIsSet) {\n      return undefined;\n    }\n\n    const taskNameIsSet: boolean = nonWhiteSpaceRegex.test(task.name);\n    const taskDisplayName: string = taskNameIsSet ? task.name : task.id;\n\n    return taskDisplayName;\n  }\n\n  public clearTasks(): void {\n    this.userTask = undefined;\n    this.manualTask = undefined;\n  }\n\n  private finishTask(): void {\n    if (this.isModal) {\n      domEventDispatch.dispatchEvent(this.element, 'close-modal', {bubbles: true});\n      this.clearTasks();\n\n      return;\n    }\n\n    const task: DataModels.UserTasks.UserTask | DataModels.ManualTasks.ManualTask =\n      this.userTask === undefined ? this.manualTask : this.userTask;\n\n    this.router.navigateToRoute('live-execution-tracker', {\n      diagramName: this.activeDiagramName,\n      solutionUri: this.activeSolutionUri,\n      correlationId: task.correlationId,\n      processInstanceId: this.processInstanceId,\n    });\n  }\n\n  private async getTask(): Promise<void> {\n    try {\n      const processInstanceIdNotGiven: boolean = this.processInstanceId === undefined;\n\n      if (processInstanceIdNotGiven) {\n        throw Error(`Invalid ProcessInstance ID: ${this.processInstanceId}`);\n      }\n\n      this.userTask = await this.dynamicUiService.getUserTask(this.identity, this.processInstanceId, this.taskId);\n\n      const userTaskFound: boolean = this.userTask !== undefined;\n      if (userTaskFound) {\n        return;\n      }\n\n      this.manualTask = await this.dynamicUiService.getManualTask(this.identity, this.processInstanceId, this.taskId);\n\n      const manualTaskFound: boolean = this.manualTask !== undefined;\n      if (manualTaskFound) {\n        return;\n      }\n\n      throw new Error(`No UserTask or ManualTask with ID ${this.taskId} found!`);\n    } catch (error) {\n      this.notificationService.showNotification(NotificationType.ERROR, `Failed to refresh task: ${error.message}`);\n      throw error;\n    }\n  }\n\n  private async setDynamicUIWrapperUserTask(): Promise<void> {\n    const dynamicUiWrapperNotExisting: boolean = this.dynamicUiWrapper === undefined;\n\n    if (dynamicUiWrapperNotExisting) {\n      return;\n    }\n\n    this.dynamicUiWrapper.currentUserTask = this.userTask;\n  }\n\n  private async setDynamicUIWrapperManualTask(): Promise<void> {\n    const dynamicUiWrapperNotExisting: boolean = this.dynamicUiWrapper === undefined;\n\n    if (dynamicUiWrapperNotExisting) {\n      return;\n    }\n\n    this.dynamicUiWrapper.currentManualTask = this.manualTask;\n  }\n}\n",".dynamic-ui {\n  height: 100%;\n  overflow-y: auto;\n}\n\n.dynamic-ui-wrapper {\n  height: 100%;\n}\n",null,"import {inject} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\n\nimport {ForbiddenError, UnauthorizedError, isError} from '@essential-projects/errors_ts';\nimport {IManagementApi} from '@process-engine/management_api_contracts';\n\nimport {IIdentity} from '@essential-projects/iam_contracts';\nimport {ISolutionEntry, ISolutionService, NotificationType} from '../../contracts/index';\nimport {NotificationService} from '../../services/notification-service/notification.service';\nimport {TaskList} from '../inspect/task-list/task-list';\n\ninterface ITaskListRouteParameters {\n  processModelId?: string;\n  correlationId?: string;\n  solutionUri?: string;\n}\n\n@inject('NotificationService', Router, 'ManagementApiClientService', 'SolutionService')\nexport class TaskListContainer {\n  public showTaskList: boolean = false;\n  public taskList: TaskList;\n\n  private routeParameters: ITaskListRouteParameters;\n  private notificationService: NotificationService;\n  private router: Router;\n  private managementApiService: IManagementApi;\n  private solutionService: ISolutionService;\n\n  constructor(\n    notificationService: NotificationService,\n    router: Router,\n    managementApiService: IManagementApi,\n    solutionService: ISolutionService,\n  ) {\n    this.notificationService = notificationService;\n    this.router = router;\n    this.managementApiService = managementApiService;\n    this.solutionService = solutionService;\n  }\n\n  public async canActivate(): Promise<boolean> {\n    const solutionUriIsSet: boolean =\n      this.router.currentInstruction !== null &&\n      this.router.currentInstruction !== undefined &&\n      this.router.currentInstruction.queryParams.solutionUri !== null &&\n      this.router.currentInstruction.queryParams.solutionUri !== undefined;\n\n    const activeSolutionUri: string = solutionUriIsSet\n      ? this.router.currentInstruction.queryParams.solutionUri\n      : window.localStorage.getItem('InternalProcessEngineRoute');\n\n    const activeSolutionEntry: ISolutionEntry = this.solutionService.getSolutionEntryForUri(activeSolutionUri);\n\n    const hasNoClaimsForTaskList: boolean = !(await this.hasClaimsForTaskList(activeSolutionEntry.identity));\n\n    if (hasNoClaimsForTaskList) {\n      this.notificationService.showNotification(\n        NotificationType.ERROR,\n        \"You don't have the permission to use the inspect features.\",\n      );\n      this.router.navigateToRoute('start-page');\n\n      return false;\n    }\n\n    this.showTaskList = !hasNoClaimsForTaskList;\n\n    return true;\n  }\n\n  public activate(routeParameters: ITaskListRouteParameters): void {\n    this.routeParameters = routeParameters;\n  }\n\n  public attached(): void {\n    this.taskList.initializeTaskList(this.routeParameters);\n  }\n\n  private async hasClaimsForTaskList(identity: IIdentity): Promise<boolean> {\n    try {\n      // TODO: Refactor; this is not how we want to do our claim checks.\n      // Talk to Sebastian or Christoph first.\n\n      await this.managementApiService.getProcessModels(identity);\n      await this.managementApiService.getActiveCorrelations(identity);\n    } catch (error) {\n      const errorIsForbiddenError: boolean = isError(error, ForbiddenError);\n      const errorIsUnauthorizedError: boolean = isError(error, UnauthorizedError);\n\n      if (errorIsForbiddenError || errorIsUnauthorizedError) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n}\n",".task-list {\n  height: 100%;\n  padding: 20px 60px;\n}\n",null,"import {EventAggregator, Subscription} from 'aurelia-event-aggregator';\nimport {bindable, inject} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\n\nimport {IDiagram, ISolution} from '@process-engine/solutionexplorer.contracts';\n\nimport {AuthenticationStateEvent, ISolutionEntry} from '../../../contracts/index';\nimport environment from '../../../environment';\n\n@inject(EventAggregator, Router)\nexport class DiagramList {\n  public allDiagrams: Array<IDiagram>;\n  @bindable() public activeSolutionEntry: ISolutionEntry;\n\n  private eventAggregator: EventAggregator;\n  private router: Router;\n  private subscriptions: Array<Subscription>;\n  private pollingTimeout: NodeJS.Timer | number;\n  private isAttached: boolean = false;\n\n  constructor(eventAggregator: EventAggregator, router: Router) {\n    this.eventAggregator = eventAggregator;\n    this.router = router;\n  }\n\n  public async attached(): Promise<void> {\n    this.isAttached = true;\n\n    await this.updateDiagramList();\n    this.startPolling();\n\n    this.subscriptions = [\n      this.eventAggregator.subscribe(AuthenticationStateEvent.LOGIN, () => {\n        this.updateDiagramList();\n      }),\n      this.eventAggregator.subscribe(AuthenticationStateEvent.LOGOUT, () => {\n        this.updateDiagramList();\n      }),\n    ];\n  }\n\n  public detached(): void {\n    this.isAttached = false;\n\n    clearTimeout(this.pollingTimeout as NodeJS.Timer);\n\n    for (const subscription of this.subscriptions) {\n      subscription.dispose();\n    }\n  }\n\n  private startPolling(): void {\n    this.pollingTimeout = setTimeout(async () => {\n      await this.updateDiagramList();\n\n      if (this.isAttached) {\n        this.startPolling();\n      }\n    }, environment.processengine.processDefListPollingIntervalInMs);\n  }\n\n  public showDetails(diagramName: string): void {\n    this.router.navigateToRoute('design', {\n      diagramName: diagramName,\n      solutionUri: this.activeSolutionEntry.uri,\n      view: 'detail',\n    });\n  }\n\n  private async updateDiagramList(): Promise<void> {\n    const solution: ISolution = await this.activeSolutionEntry.service.loadSolution();\n    this.allDiagrams = solution.diagrams;\n  }\n}\n","/*\n * Process Definition List Styles\n */\n.diagram-list {\n  display: flex;\n  height: 100%;\n  align-items: stretch;\n}\n\n.diagram-list-table {\n  table-layout: fixed;\n}\n\n.diagram-list-container {\n  padding: 20px 60px;\n  flex: 1;\n  overflow: auto;\n}\n\n/*\n * Miscellaneous Styles\n */\n.loading-spinner {\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 100px;\n}\n\n.process-name-table-entry {\n  height: 50px;\n  overflow: hidden;\n  cursor: pointer;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.process-name-table-entry:hover {\n  background: #E5E5E5;\n}\n",null,"import {inject} from 'aurelia-framework';\nimport {activationStrategy} from 'aurelia-router';\n\nimport {ISolutionEntry, ISolutionService, NotificationType} from '../../contracts/index';\nimport {NotificationService} from '../../services/notification-service/notification.service';\n\nexport interface IThinkRouteParameters {\n  view?: string;\n  diagramName?: string;\n  solutionUri?: string;\n}\n\n@inject('SolutionService', 'NotificationService')\nexport class Think {\n  public showDiagramList: boolean = false;\n\n  public activeSolutionEntry: ISolutionEntry;\n\n  private solutionService: ISolutionService;\n  private notificationService: NotificationService;\n\n  private diagramSelected: boolean = false;\n\n  private ipcRenderer: any;\n\n  constructor(solutionService: ISolutionService, notificationService: NotificationService) {\n    this.solutionService = solutionService;\n    this.notificationService = notificationService;\n  }\n\n  public async canActivate(routeParameters: IThinkRouteParameters): Promise<boolean> {\n    const solutionUriIsSet: boolean = routeParameters.solutionUri !== undefined;\n\n    this.diagramSelected = routeParameters.diagramName !== undefined;\n\n    const solutionUri: string = solutionUriIsSet\n      ? routeParameters.solutionUri\n      : window.localStorage.getItem('InternalProcessEngineRoute');\n\n    this.activeSolutionEntry = this.solutionService.getSolutionEntryForUri(solutionUri);\n\n    const noActiveSolution: boolean = this.activeSolutionEntry === undefined;\n    if (noActiveSolution) {\n      this.notificationService.showNotification(NotificationType.INFO, 'Please open a solution first.');\n\n      return false;\n    }\n\n    await this.activeSolutionEntry.service.openSolution(\n      this.activeSolutionEntry.uri,\n      this.activeSolutionEntry.identity,\n    );\n\n    return true;\n  }\n\n  public activate(): void {\n    this.showDiagramList = true;\n\n    const isRunningInElectron: boolean = Boolean((window as any).nodeRequire);\n\n    if (isRunningInElectron) {\n      this.ipcRenderer = (window as any).nodeRequire('electron').ipcRenderer;\n      this.ipcRenderer.on('menubar__start_close_diagram', this.closeBpmnStudio);\n    }\n  }\n\n  public deactivate(): void {\n    const isRunningInElectron: boolean = Boolean((window as any).nodeRequire);\n\n    if (isRunningInElectron) {\n      this.ipcRenderer.removeListener('menubar__start_close_diagram', this.closeBpmnStudio);\n    }\n  }\n\n  public determineActivationStrategy(): string {\n    return activationStrategy.replace;\n  }\n\n  private closeBpmnStudio: Function = (): void => {\n    if (!this.diagramSelected) {\n      this.ipcRenderer.send('close_bpmn-studio');\n    }\n  };\n}\n",".think {\n  width: 100%;\n  height: 100%;\n}\n",null,"import {inject} from 'aurelia-framework';\n\nimport {NotificationService} from '../../services/notification-service/notification.service';\nimport {NotificationType} from '../../contracts/index';\nimport {UserConfigService} from '../../services/user-config-service/userconfig.service';\n\n@inject('NotificationService', 'UserConfigService')\nexport class Preferences {\n  public preferences: string;\n  private notificationService: NotificationService;\n  private userConfigService: UserConfigService;\n\n  constructor(notificationService: NotificationService, userConfigService: UserConfigService) {\n    this.notificationService = notificationService;\n    this.userConfigService = userConfigService;\n  }\n\n  public attached(): void {\n    const loadedPreferences = this.userConfigService.getCurrentConfig();\n\n    this.preferences = JSON.stringify(loadedPreferences, null, 2);\n  }\n\n  public save(): void {\n    if (this.isValidJSON()) {\n      const customConfig: object = {};\n      const defaultConfig: object = this.userConfigService.getDefaultConfig();\n\n      Object.entries(JSON.parse(this.preferences)).forEach((entry: [string, string]) => {\n        const defaultConfigEntry = defaultConfig[entry[0]];\n        if (defaultConfigEntry !== entry[1]) {\n          customConfig[entry[0]] = entry[1];\n        }\n      });\n\n      this.userConfigService.persistUserConfig(customConfig);\n    } else {\n      this.notificationService.showNotification(\n        NotificationType.ERROR,\n        'Error:\\n The preferences can not be saved! \\nNot a valid JSON format!',\n      );\n    }\n  }\n\n  private isValidJSON(): boolean {\n    try {\n      JSON.parse(this.preferences);\n      return true;\n    } catch (error) {\n      return false;\n    }\n  }\n}\n",".user-preferences {\n  width: 100%;\n  height: 100%;\n  padding: 20px 20px 130px 20px;\n}\n\n.user-preferences__title {\n  margin-bottom: 20px;\n}\n\n.user-preferences__input {\n  width: 100%;\n  min-height: 500px;\n  max-height: 98%;\n  margin-bottom: 10px;\n}\n",null,"import {OpenIdConnectConfiguration} from 'aurelia-open-id-connect';\nimport {WebStorageStateStore} from 'oidc-client';\nimport environment from './environment';\n\nexport const oidcConfig: OpenIdConnectConfiguration = {\n  loginRedirectRoute: '/',\n  logoutRedirectRoute: '/',\n  unauthorizedRedirectRoute: '/',\n  logLevel: 0,\n  userManagerSettings: {\n    accessTokenExpiringNotificationTime: 1,\n    authority: environment.openIdConnect.authority,\n    automaticSilentRenew: true,\n    monitorSession: true,\n    checkSessionInterval: 2000,\n    client_id: 'bpmn_studio',\n    filterProtocolClaims: true,\n    loadUserInfo: false,\n    post_logout_redirect_uri: `${environment.appHost}/signout-oidc`,\n    redirect_uri: `${environment.appHost}/signin-oidc`,\n    response_type: 'id_token token',\n    scope: 'openid profile test_resource',\n    silentRequestTimeout: 10000,\n    silent_redirect_uri: `${environment.appHost}/signin-oidc`,\n    userStore: new WebStorageStateStore({\n      prefix: 'oidc',\n      store: window.localStorage,\n    }),\n  },\n};\n","import {EventAggregator} from 'aurelia-event-aggregator';\nimport {inject} from 'aurelia-framework';\n\nimport {IIdentity} from '@essential-projects/iam_contracts';\n\nimport {\n  AuthenticationStateEvent,\n  IAuthenticationService,\n  ILoginResult,\n  ITokenObject,\n  IUserIdentity,\n  NotificationType,\n} from '../../contracts/index';\n\nimport {NotificationService} from '../notification-service/notification.service';\n\nconst UNAUTHORIZED_STATUS_CODE: number = 401;\nconst IDENTITY_SERVER_AVAILABLE_SUCCESS_STATUS_CODE: number = 200;\n\n@inject(EventAggregator, 'NotificationService')\nexport class ElectronOidcAuthenticationService implements IAuthenticationService {\n  private eventAggregator: EventAggregator;\n  private notificationService: NotificationService;\n\n  constructor(eventAggregator: EventAggregator, notificationService: NotificationService) {\n    this.eventAggregator = eventAggregator;\n    this.notificationService = notificationService;\n  }\n\n  public async isLoggedIn(authority: string, identity: IIdentity): Promise<boolean> {\n    authority = this.formAuthority(authority);\n\n    let userIdentity: IUserIdentity;\n\n    try {\n      userIdentity = await this.getUserIdentity(authority, identity);\n    } catch (error) {\n      return false;\n    }\n\n    const userIdentityIsDefined: boolean = userIdentity !== undefined && userIdentity !== null;\n\n    return userIdentityIsDefined;\n  }\n\n  public async login(authority: string): Promise<ILoginResult> {\n    authority = this.formAuthority(authority);\n\n    const identityServerIsNotReachable: boolean = !(await this.isAuthorityReachable(authority));\n\n    if (identityServerIsNotReachable) {\n      return undefined;\n    }\n\n    const loginResultPromise: Promise<ILoginResult> = new Promise(\n      async (resolve: Function, reject: Function): Promise<void> => {\n        const ipcRenderer: any = (window as any).nodeRequire('electron').ipcRenderer;\n\n        ipcRenderer.on('oidc-login-reply', async (event: any, tokenObject: ITokenObject) => {\n          const iamIdentity: IIdentity = {\n            token: tokenObject.accessToken,\n            userId: tokenObject.idToken,\n          };\n          const identity: IUserIdentity = await this.getUserIdentity(authority, iamIdentity);\n\n          const loginResult: ILoginResult = {\n            identity: identity,\n            accessToken: tokenObject.accessToken,\n            idToken: tokenObject.idToken,\n          };\n\n          this.eventAggregator.publish(AuthenticationStateEvent.LOGIN);\n\n          ipcRenderer.removeAllListeners('oidc-login-reply');\n\n          resolve(loginResult);\n        });\n\n        ipcRenderer.send('oidc-login', authority);\n      },\n    );\n\n    return loginResultPromise;\n  }\n\n  public async logout(authority: string, identity: IIdentity): Promise<void> {\n    authority = this.formAuthority(authority);\n\n    const ipcRenderer: any = (window as any).nodeRequire('electron').ipcRenderer;\n\n    ipcRenderer.on('oidc-logout-reply', async (event: any, logoutWasSuccessful: boolean) => {\n      if (logoutWasSuccessful) {\n        this.eventAggregator.publish(AuthenticationStateEvent.LOGOUT);\n      }\n    });\n\n    ipcRenderer.send('oidc-logout', identity, authority);\n  }\n\n  public async getUserIdentity(authority: string, identity: IIdentity): Promise<IUserIdentity | null> {\n    authority = this.formAuthority(authority);\n\n    const userInfoRequest: Request = new Request(`${authority}connect/userinfo`, {\n      method: 'GET',\n      mode: 'cors',\n      referrer: 'no-referrer',\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${identity.token}`,\n      },\n    });\n\n    const userInfoResponse: Response = await fetch(userInfoRequest);\n    const requestIsUnauthorized: boolean = userInfoResponse.status === UNAUTHORIZED_STATUS_CODE;\n\n    if (requestIsUnauthorized) {\n      return null;\n    }\n\n    return userInfoResponse.json();\n  }\n\n  private async isAuthorityReachable(authority: string): Promise<boolean> {\n    const configRequest: Request = new Request(`${authority}.well-known/openid-configuration`, {\n      method: 'GET',\n      mode: 'cors',\n      referrer: 'no-referrer',\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json',\n      },\n    });\n\n    let configResponse: Response;\n\n    try {\n      configResponse = await fetch(configRequest);\n    } catch (error) {\n      const identityServerWasOffline: boolean = error.message === 'Failed to fetch';\n      if (identityServerWasOffline) {\n        this.notificationService.showNotification(NotificationType.ERROR, 'IdentityServer is offline.');\n\n        return false;\n      }\n    }\n\n    const identityServerWasAvailable: boolean = configResponse.status === IDENTITY_SERVER_AVAILABLE_SUCCESS_STATUS_CODE;\n    if (identityServerWasAvailable) {\n      return true;\n    }\n\n    return false;\n  }\n\n  private formAuthority(authority: string): string {\n    const authorityDoesNotEndWithSlash: boolean = !authority.endsWith('/');\n\n    if (authorityDoesNotEndWithSlash) {\n      authority = `${authority}/`;\n    }\n\n    return authority;\n  }\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\nimport {ElectronOidcAuthenticationService} from './electron.oidc.authentication.service';\nimport {WebOidcAuthenticationService} from './web.oidc.authentication.service';\n\nexport async function configure(config: FrameworkConfiguration): Promise<void> {\n  const appIsRunningInElectron: boolean = (window as any).nodeRequire;\n\n  if (appIsRunningInElectron) {\n    config.container.registerSingleton('AuthenticationService', ElectronOidcAuthenticationService);\n  } else {\n    config.container.registerSingleton('AuthenticationService', WebOidcAuthenticationService);\n  }\n}\n","/* eslint-disable */\n\n// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\nimport {UrlUtility} from './open-id-url-utility';\n\nconst OidcScope: string = 'openid';\n\nexport class SigninResponse {\n  public error: string;\n  public error_description: string;\n  public error_uri: string;\n  public state: string;\n  public id_token: string;\n  public session_state: string;\n  public access_token: string;\n  public token_type: string;\n  public scope: string;\n  public profile: any;\n  public expires_at: number;\n\n  constructor(url: string) {\n    const values: any = UrlUtility.parseUrlFragment(url, '#');\n\n    this.error = values.error;\n    this.error_description = values.error_description;\n    this.error_uri = values.error_uri;\n\n    this.state = values.state;\n    this.id_token = values.id_token;\n    this.session_state = values.session_state;\n    this.access_token = values.access_token;\n    this.token_type = values.token_type;\n    this.scope = values.scope;\n    this.profile = undefined; // will be set from ResponseValidator\n\n    const expires_in: number = parseInt(values.expires_in);\n    if (typeof expires_in === 'number' && expires_in > 0) {\n      const nowInSeconds: number = Math.floor(Date.now() / 1000);\n\n      this.expires_at = nowInSeconds + expires_in;\n    }\n  }\n\n  public get expires_in(): number {\n    if (this.expires_at === undefined) {\n      return undefined;\n    }\n\n    const nowInSeconds: number = Math.floor(Date.now() / 1000);\n\n    return this.expires_at - nowInSeconds;\n  }\n\n  public get expired(): boolean {\n    const expires_in: number = this.expires_in;\n    if (expires_in === undefined) {\n      return undefined;\n    }\n\n    return expires_in <= 0;\n  }\n\n  public get scopes(): Array<string> {\n    return (this.scope || '').split(' ');\n  }\n\n  public get isOpenIdConnect(): boolean {\n    return this.scopes.indexOf(OidcScope) >= 0 || Boolean(this.id_token);\n  }\n}\n","/* eslint-disable */\n// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\n// tslint:disable:no-magic-numbers\n\nexport class UrlUtility {\n  public static addQueryParam(url: string, name: string, value: string): string {\n    if (url.indexOf('?') < 0) {\n      url += '?';\n    }\n\n    if (url[url.length - 1] !== '?') {\n      url += '&';\n    }\n\n    url += encodeURIComponent(name);\n    url += '=';\n    url += encodeURIComponent(value);\n\n    return url;\n  }\n\n  public static parseUrlFragment(url: string, delimiter: string = '#'): any {\n    if (typeof url !== 'string') {\n      url = location.href;\n    }\n\n    const idx: number = url.lastIndexOf(delimiter);\n    if (idx >= 0) {\n      url = url.substr(idx + 1);\n    }\n\n    // tslint:disable-next-line:one-variable-per-declaration\n    const params: any = {};\n    const regex: RegExp = /([^&=]+)=([^&]*)/g;\n    let m: any;\n\n    let counter: number = 0;\n    // tslint:disable-next-line:no-conditional-assignment\n    while ((m = regex.exec(url))) {\n      params[decodeURIComponent(m[1])] = decodeURIComponent(m[2]);\n\n      if (counter++ > 50) {\n        return {\n          error: 'Response exceeded expected number of parameters',\n        };\n      }\n    }\n\n    return params;\n  }\n}\n","import {EventAggregator} from 'aurelia-event-aggregator';\nimport {inject} from 'aurelia-framework';\nimport {OpenIdConnect} from 'aurelia-open-id-connect';\nimport {Router} from 'aurelia-router';\n\nimport {IIdentity} from '@essential-projects/iam_contracts';\nimport {User} from 'oidc-client';\n\nimport {\n  AuthenticationStateEvent,\n  IAuthenticationService,\n  ILoginResult,\n  IUserIdentity,\n  NotificationType,\n} from '../../contracts/index';\nimport {oidcConfig} from '../../open-id-connect-configuration';\nimport {NotificationService} from '../notification-service/notification.service';\n\nconst UNAUTHORIZED_STATUS_CODE: number = 401;\nconst IDENTITY_SERVER_AVAILABLE_SUCCESS_STATUS_CODE: number = 200;\n\n@inject(EventAggregator, 'NotificationService', OpenIdConnect, Router)\nexport class WebOidcAuthenticationService implements IAuthenticationService {\n  private eventAggregator: EventAggregator;\n  /**\n   * We have to use any here since it is the only way to access the private members\n   * of this. We need the access them when changing the authority while the application\n   * is running.\n   */\n  private openIdConnect: OpenIdConnect | any;\n  private notificationService: NotificationService;\n\n  constructor(\n    eventAggregator: EventAggregator,\n    notificationService: NotificationService,\n    openIdConnect: OpenIdConnect,\n  ) {\n    this.eventAggregator = eventAggregator;\n    this.notificationService = notificationService;\n    this.openIdConnect = openIdConnect;\n  }\n\n  public async isLoggedIn(authority: string, identity: IIdentity): Promise<boolean> {\n    authority = this.formAuthority(authority);\n\n    const userIdentity: IUserIdentity = await this.getUserIdentity(authority);\n\n    const userIsAuthorized: boolean = userIdentity !== null && userIdentity !== undefined;\n\n    return userIsAuthorized;\n  }\n\n  public async login(authority: string): Promise<ILoginResult> {\n    authority = this.formAuthority(authority);\n\n    const isAuthorityUnReachable: boolean = !(await this.isAuthorityReachable(authority));\n\n    if (isAuthorityUnReachable) {\n      this.notificationService.showNotification(NotificationType.ERROR, 'Authority seems to be offline');\n\n      return undefined;\n    }\n\n    await this.setAuthority(authority);\n    await this.openIdConnect.login();\n    window.localStorage.setItem('openIdRoute', authority);\n\n    this.eventAggregator.publish(AuthenticationStateEvent.LOGIN);\n\n    const loginResult: ILoginResult = {\n      identity: await this.getUserIdentity(authority),\n      accessToken: await this.getAccessToken(authority),\n      // The idToken is provided by the oidc service when making requests and therefore not set here.\n      idToken: '',\n    };\n\n    return loginResult;\n  }\n\n  public async logout(authority: string, identity: IIdentity): Promise<void> {\n    authority = this.formAuthority(authority);\n\n    if (!this.isLoggedIn) {\n      return;\n    }\n\n    await this.setAuthority(authority);\n    await this.openIdConnect.logout();\n  }\n\n  public async getUserIdentity(authority: string): Promise<IUserIdentity | null> {\n    authority = this.formAuthority(authority);\n\n    const accessToken: string = await this.getAccessToken(authority);\n    const accessTokenIsDummyToken: boolean = accessToken === this.getDummyAccessToken();\n\n    if (accessTokenIsDummyToken) {\n      return null;\n    }\n\n    const request: Request = new Request(`${authority}connect/userinfo`, {\n      method: 'GET',\n      mode: 'cors',\n      referrer: 'no-referrer',\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${accessToken}`,\n      },\n    });\n\n    const response: Response = await fetch(request);\n\n    if (response.status === UNAUTHORIZED_STATUS_CODE) {\n      return null;\n    }\n\n    return response.json();\n  }\n\n  private async isAuthorityReachable(authority: string): Promise<boolean> {\n    const request: Request = new Request(`${authority}.well-known/openid-configuration`, {\n      method: 'GET',\n      mode: 'cors',\n      referrer: 'no-referrer',\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json',\n      },\n    });\n\n    let response: Response;\n\n    try {\n      response = await fetch(request);\n    } catch (error) {\n      if (error.message === 'Failed to fetch') {\n        return false;\n      }\n    }\n\n    if (response.status === IDENTITY_SERVER_AVAILABLE_SUCCESS_STATUS_CODE) {\n      return true;\n    }\n\n    return false;\n  }\n\n  private setAuthority(authority: string): void {\n    oidcConfig.userManagerSettings.authority = authority;\n\n    // This dirty way to update the settings is the only way during runtime\n    this.openIdConnect.configuration.userManagerSettings.authority = authority;\n    // eslint-disable-next-line no-underscore-dangle\n    this.openIdConnect.userManager._settings._authority = authority;\n  }\n\n  // TODO: The dummy token needs to be removed in the future!!\n  // This dummy token serves as a temporary workaround to bypass login. This\n  // enables us to work without depending on a full environment with\n  // IdentityServer.\n  private getDummyAccessToken(): string {\n    const dummyAccessTokenString: string = 'dummy_token';\n    const base64EncodedString: string = btoa(dummyAccessTokenString);\n\n    return base64EncodedString;\n  }\n\n  private async getAccessToken(authority: string): Promise<string | null> {\n    this.setAuthority(authority);\n    const user: User = await this.openIdConnect.getUser();\n\n    const userIsNotLoggedIn: boolean = user === undefined || user === null;\n\n    return userIsNotLoggedIn ? this.getDummyAccessToken() : user.access_token;\n  }\n\n  private formAuthority(authority: string): string {\n    const authorityDoesNotEndWithSlash: boolean = !authority.endsWith('/');\n\n    if (authorityDoesNotEndWithSlash) {\n      authority = `${authority}/`;\n    }\n\n    return authority;\n  }\n}\n","import moment from 'moment';\n\nexport function getBeautifiedDate(date: string | Date): string {\n  return moment(date).format('YYYY-MM-DD HH:mm:ss');\n}\n","import {StudioVersion} from '../../contracts/index';\n\nexport function getPortListByVersion(studioVersion: StudioVersion): Array<number> {\n  const portList = [];\n\n  const firstPort: number = getFirstPortByVersion(studioVersion);\n\n  for (let index = 0; index < 10; index++) {\n    portList.push(firstPort + index * 10);\n  }\n\n  return portList;\n}\n\nfunction getFirstPortByVersion(studioVersion: StudioVersion): number {\n  switch (studioVersion) {\n    case StudioVersion.Dev:\n      return 56300;\n    case StudioVersion.Alpha:\n      return 56200;\n    case StudioVersion.Beta:\n      return 56100;\n    case StudioVersion.Stable:\n      return 56000;\n    default:\n      throw new Error('Could not get default port for internal process engine');\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {Router} from 'aurelia-router';\n\nimport {IDiagram} from '@process-engine/solutionexplorer.contracts';\nimport * as bundle from '@process-engine/bpmn-js-custom-bundle';\n\nimport {IModdleElement} from '@process-engine/bpmn-elements_contracts';\nimport environment from '../../environment';\nimport {SolutionService} from '../solution-service/SolutionService';\nimport {SaveDiagramService} from '../save-diagram-service/save-diagram.service';\nimport {IBpmnModdle, IBpmnModeler, IDefinition, ISolutionEntry, NotificationType} from '../../contracts/index';\nimport {NotificationService} from '../notification-service/notification.service';\n\n@inject(EventAggregator, 'SolutionService', SaveDiagramService, Router, 'NotificationService')\nexport class DeployDiagramService {\n  private router: Router;\n  private eventAggregator: EventAggregator;\n  private notificationService: NotificationService;\n\n  private solutionService: SolutionService;\n  private saveDiagramService: SaveDiagramService;\n\n  private modeler: IBpmnModeler;\n  private moddle: IBpmnModdle;\n\n  constructor(\n    eventAggregator: EventAggregator,\n    solutionService: SolutionService,\n    saveDiagramService: SaveDiagramService,\n    router: Router,\n    notificationService: NotificationService,\n  ) {\n    this.eventAggregator = eventAggregator;\n    this.solutionService = solutionService;\n    this.saveDiagramService = saveDiagramService;\n    this.router = router;\n    this.notificationService = notificationService;\n\n    // eslint-disable-next-line 6river/new-cap\n    this.modeler = new bundle.modeler({\n      moddleExtensions: {\n        camunda: bundle.camundaModdleDescriptor,\n      },\n    });\n\n    this.moddle = this.modeler.get('moddle');\n  }\n\n  public async deployDiagram(solution: ISolutionEntry, diagram: IDiagram, xml?: string): Promise<void> {\n    const diagramHasChanges: boolean = xml !== undefined;\n    if (diagramHasChanges) {\n      diagram.xml = xml;\n    }\n\n    const remoteSolutionToDeployTo: ISolutionEntry = await this.getRemoteSolutionToDeployTo();\n    if (remoteSolutionToDeployTo === undefined) {\n      return;\n    }\n\n    await this.uploadProcess(remoteSolutionToDeployTo, diagram);\n  }\n\n  private async uploadProcess(solutionToDeployTo: ISolutionEntry, diagram: IDiagram): Promise<void> {\n    const processModelId: string = await this.getProcessModelIdForXml(diagram.xml);\n\n    const diagramIsAlreadyDeployed: boolean = await this.diagramIsAlreadyDeployed(solutionToDeployTo, processModelId);\n    if (diagramIsAlreadyDeployed) {\n      const shouldOverwriteDiagram: boolean = await this.shouldOverwriteDiagram();\n\n      if (!shouldOverwriteDiagram) {\n        return;\n      }\n    }\n\n    try {\n      diagram.id = processModelId;\n\n      const bpmnFileSuffix: string = '.bpmn';\n\n      const diagramUriWithoutSuffix: string = diagram.uri.endsWith(bpmnFileSuffix)\n        ? diagram.uri.slice(0, bpmnFileSuffix.length)\n        : diagram.uri;\n\n      const copyOfDiagram: IDiagram = {\n        id: diagram.id,\n        name: diagram.name,\n        uri: diagramUriWithoutSuffix,\n        xml: diagram.xml,\n      };\n\n      await solutionToDeployTo.service.saveDiagram(copyOfDiagram, solutionToDeployTo.uri);\n\n      const deployedDiagram: IDiagram = await solutionToDeployTo.service.loadDiagram(processModelId);\n\n      this.router.navigateToRoute('design', {\n        diagramName: deployedDiagram.name,\n        solutionUri: solutionToDeployTo.uri,\n      });\n\n      this.notificationService.showNotification(\n        NotificationType.SUCCESS,\n        'Diagram was successfully uploaded to the connected ProcessEngine.',\n      );\n\n      this.eventAggregator.publish(environment.events.diagramDetail.onDiagramDeployed, processModelId);\n    } catch (error) {\n      this.notificationService.showNotification(NotificationType.ERROR, `Unable to update diagram: ${error}.`);\n    }\n  }\n\n  private async getProcessModelIdForXml(xml: string): Promise<string> {\n    return new Promise((resolve: Function, reject: Function): void => {\n      this.moddle.fromXML(xml, (error: Error, definitions: IDefinition): void => {\n        const errorOccured: boolean = error !== undefined;\n        if (errorOccured) {\n          reject(error);\n        }\n\n        // eslint-disable-next-line no-underscore-dangle\n        const rootElements: Array<IModdleElement> = definitions.rootElements;\n\n        const processModel: IModdleElement = rootElements.find((definition: IModdleElement) => {\n          return definition.$type === 'bpmn:Process';\n        });\n        const processModelId: string = processModel.id;\n\n        resolve(processModelId);\n      });\n    });\n  }\n\n  private async diagramIsAlreadyDeployed(solution: ISolutionEntry, processModelId: string): Promise<boolean> {\n    try {\n      await solution.service.loadDiagram(processModelId);\n\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  private get multipleRemoteSolutionsExist(): boolean {\n    const remoteSolutions = this.solutionService.getRemoteSolutionEntries();\n\n    return remoteSolutions.length > 1;\n  }\n\n  private get firstRemoteSolution(): ISolutionEntry {\n    const remoteSolutions = this.solutionService.getRemoteSolutionEntries();\n\n    return remoteSolutions[0];\n  }\n\n  private shouldOverwriteDiagram(): Promise<boolean> {\n    return new Promise((resolve: Function): void => {\n      this.eventAggregator.publish(\n        environment.events.deployModals.showOverwriteDiagramModal,\n        (shouldOverwrite: boolean) => {\n          resolve(shouldOverwrite);\n        },\n      );\n    });\n  }\n\n  private getRemoteSolutionToDeployTo(): Promise<ISolutionEntry> {\n    return new Promise((resolve: Function): void => {\n      if (this.multipleRemoteSolutionsExist) {\n        this.eventAggregator.publish(\n          environment.events.deployModals.showRemoteSolutionSelectionModal,\n          (selectedRemoteSolution: ISolutionEntry) => {\n            resolve(selectedRemoteSolution);\n          },\n        );\n      } else {\n        resolve(this.firstRemoteSolution);\n      }\n    });\n  }\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\nimport {DeployDiagramService} from './deploy-diagram.service';\n\nexport function configure(config: FrameworkConfiguration): void {\n  config.container.registerSingleton('DeployDiagramService', DeployDiagramService);\n}\n","import {inject} from 'aurelia-framework';\n\nimport {IModdleElement, IProcessRef} from '@process-engine/bpmn-elements_contracts';\nimport * as bundle from '@process-engine/bpmn-js-custom-bundle';\nimport {IDiagram} from '@process-engine/solutionexplorer.contracts';\n\nimport {IBpmnModeler, IDiagramCreationService, NotificationType} from '../../contracts/index';\nimport {NotificationService} from '../notification-service/notification.service';\n\n@inject('NotificationService')\nexport class DiagramCreationService implements IDiagramCreationService {\n  private notificationService: NotificationService;\n\n  constructor(notificationService: NotificationService) {\n    this.notificationService = notificationService;\n  }\n\n  public async createNewDiagram(solutionBaseUri: string, withName: string, xml?: string): Promise<IDiagram> {\n    const processName: string = withName.trim();\n    const diagramUri: string = `${solutionBaseUri}/${processName}.bpmn`;\n\n    const xmlGiven: boolean = xml !== undefined;\n    const processXML: string = xmlGiven\n      ? await this.renameDiagram(xml, withName)\n      : this.getInitialProcessXML(processName);\n\n    const diagram: IDiagram = {\n      id: processName,\n      name: processName,\n      uri: diagramUri,\n      xml: processXML,\n    };\n\n    return diagram;\n  }\n\n  private async renameDiagram(xml: string, name: string): Promise<string> {\n    // eslint-disable-next-line 6river/new-cap\n    const modeler: IBpmnModeler = new bundle.modeler({\n      moddleExtensions: {\n        camunda: bundle.camundaModdleDescriptor,\n      },\n    });\n\n    modeler.importXML(xml, (error: Error) => {\n      const errorOccured: boolean = error !== undefined;\n      if (errorOccured) {\n        this.notificationService.showNotification(NotificationType.ERROR, `Failed to copy diagram. ${error.message}`);\n      }\n    });\n\n    const promise: Promise<string> = new Promise((resolve: Function, reject: Function): void => {\n      modeler.on('import.done', () => {\n        // eslint-disable-next-line no-underscore-dangle\n        const rootElements: Array<IModdleElement> = modeler._definitions.rootElements;\n        const process: IProcessRef = rootElements.find((element: IModdleElement) => {\n          return element.$type === 'bpmn:Process';\n        }) as IProcessRef;\n\n        process.id = name;\n        process.name = name;\n\n        const collaboration: IModdleElement = rootElements.find((element: IModdleElement) => {\n          return element.$type === 'bpmn:Collaboration';\n        });\n        const participant: IModdleElement = collaboration.participants[0];\n\n        participant.name = name;\n        participant.processRef = process;\n\n        modeler.saveXML({}, (error: Error, result: string) => {\n          const errorOccured: boolean = error !== undefined;\n          if (errorOccured) {\n            this.notificationService.showNotification(\n              NotificationType.ERROR,\n              `Failed to copy the diagram. Cause: ${error.message}`,\n            );\n\n            reject(error);\n\n            return;\n          }\n\n          resolve(result);\n        });\n      });\n    });\n\n    return promise;\n  }\n\n  private getInitialProcessXML(processModelId: string): string {\n    return `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <bpmn:definitions\n      xmlns:bpmn=\"http://www.omg.org/spec/BPMN/20100524/MODEL\"\n      xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\"\n      xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\"\n      xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n      xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\"\n      id=\"Definition_1\"\n      targetNamespace=\"http://bpmn.io/schema/bpmn\"\n      exporter=\"BPMN Studio\"\n      exporterVersion=\"1\">\n      <bpmn:collaboration id=\"Collaboration_1cidyxu\" name=\"\">\n        <bpmn:participant id=\"Participant_0px403d\" name=\"${processModelId}\" processRef=\"${processModelId}\" />\n      </bpmn:collaboration>\n      <bpmn:process id=\"${processModelId}\" name=\"${processModelId}\" isExecutable=\"true\">\n        <bpmn:laneSet>\n          <bpmn:lane id=\"Lane_1xzf0d3\" name=\"Lane\">\n            <bpmn:flowNodeRef>StartEvent_1mox3jl</bpmn:flowNodeRef>\n            <bpmn:flowNodeRef>EndEvent_0eie6q6</bpmn:flowNodeRef>\n          </bpmn:lane>\n        </bpmn:laneSet>\n        <bpmn:startEvent id=\"StartEvent_1mox3jl\" name=\"Start Event\">\n          <bpmn:outgoing>SequenceFlow_1jdocur</bpmn:outgoing>\n        </bpmn:startEvent>\n        <bpmn:sequenceFlow id=\"SequenceFlow_1jdocur\" sourceRef=\"StartEvent_1mox3jl\" targetRef=\"EndEvent_0eie6q6\" />\n        <bpmn:endEvent id=\"EndEvent_0eie6q6\" name=\"End Event\">\n          <bpmn:incoming>SequenceFlow_1jdocur</bpmn:incoming>\n        </bpmn:endEvent>\n      </bpmn:process>\n      <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\n        <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Collaboration_1cidyxu\">\n          <bpmndi:BPMNShape id=\"Participant_0px403d_di\" bpmnElement=\"Participant_0px403d\">\n            <dc:Bounds x=\"5\" y=\"4\" width=\"581\" height=\"170\" />\n          </bpmndi:BPMNShape>\n          <bpmndi:BPMNShape id=\"Lane_1xzf0d3_di\" bpmnElement=\"Lane_1xzf0d3\">\n            <dc:Bounds x=\"35\" y=\"4\" width=\"551\" height=\"170\" />\n          </bpmndi:BPMNShape>\n          <bpmndi:BPMNShape id=\"StartEvent_1mox3jl_di\" bpmnElement=\"StartEvent_1mox3jl\">\n            <dc:Bounds x=\"83\" y=\"69\" width=\"36\" height=\"36\" />\n          </bpmndi:BPMNShape>\n          <bpmndi:BPMNShape id=\"EndEvent_0eie6q6_di\" bpmnElement=\"EndEvent_0eie6q6\">\n            <dc:Bounds x=\"503\" y=\"69\" width=\"36\" height=\"36\" />\n          </bpmndi:BPMNShape>\n          <bpmndi:BPMNEdge id=\"SequenceFlow_1jdocur_di\" bpmnElement=\"SequenceFlow_1jdocur\">\n            <di:waypoint x=\"119\" y=\"87\" />\n            <di:waypoint x=\"503\" y=\"87\" />\n          </bpmndi:BPMNEdge>\n        </bpmndi:BPMNPlane>\n      </bpmndi:BPMNDiagram>\n    </bpmn:definitions>`;\n  }\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\nimport {DiagramCreationService} from './DiagramCreationService';\n\nexport async function configure(config: FrameworkConfiguration): Promise<void> {\n  config.container.registerSingleton('DiagramCreationService', DiagramCreationService);\n}\n","import {IDiagramValidationRules, IDiagramValidationService, IDiagramValidator} from '../../contracts';\nimport {DiagramValidator} from './DiagramValidator';\n\n/**\n * This service provides a fluent API to validate BPMN diagrams.\n *\n * In this service the rules for valid diagrams are defined. Each\n * validation, for example `isBPMN()` is backed by a IValidationRuleSet.\n *\n * A IValidationRuleSet contains one or more IValidationRules and an\n * error message. If one or more rules of the ruleset fail on the\n * input, an error is thrown.\n *\n * To start a validation call `validate(XML)` with the XML string we\n * want to validate. Then invoke the rules you would like to validate,\n * for example `isBPMN()`. After adding all rules, call `throwIfError()`,\n * this will either pass silently or throw a descriptive Error.\n *\n * RuleSets are defined in the `_rules` field of this class.\n */\nexport class DiagramValidationService implements IDiagramValidationService {\n  private rules: IDiagramValidationRules = {\n    isXML: {\n      rules: [this.hasXMLFileSignature],\n      errorMessage: 'Diagram is not a valid XML file.',\n    },\n    isBPMN: {\n      rules: [this.containsBPMN],\n      errorMessage: 'Diagram is not a valid BPMN file.',\n    },\n  };\n\n  public validate(diagramXML: string): IDiagramValidator {\n    return new DiagramValidator(this.rules, diagramXML);\n  }\n\n  // Business Rules {{{\n  private hasXMLFileSignature(content: string): Promise<boolean> {\n    const xmlSignature: string = '<?xml ';\n    const startsWithSignature: boolean = content.startsWith(xmlSignature);\n\n    return Promise.resolve(startsWithSignature);\n  }\n\n  private containsBPMN(content: string): Promise<boolean> {\n    const bpmn: string = 'bpmn';\n    const containsBPMN: boolean = content.indexOf(bpmn) !== -1;\n\n    return Promise.resolve(containsBPMN);\n  }\n  // }}} Business Rules\n}\n","import {\n  IDiagramValidationRule,\n  IDiagramValidationRuleSet,\n  IDiagramValidationRules,\n  IDiagramValidator,\n} from '../../contracts';\n\nexport class DiagramValidator implements IDiagramValidator {\n  private rules: IDiagramValidationRules;\n  private diagramXML: string;\n  private validations: Array<Promise<void>> = [];\n\n  constructor(rules: IDiagramValidationRules, diagramXML: string) {\n    this.rules = rules;\n    this.diagramXML = diagramXML;\n  }\n\n  public isXML(): IDiagramValidator {\n    this.processRuleSet(this.rules.isXML);\n\n    return this;\n  }\n\n  public isBPMN(): IDiagramValidator {\n    this.processRuleSet(this.rules.isBPMN);\n\n    return this;\n  }\n\n  public async throwIfError(): Promise<void> {\n    /*\n     * We don't use `await Promise.all(this._validations);` here,\n     * because we want to await the promises in order.\n     *\n     * Also .forEach is not possible because of await.\n     */\n    for (const validation of this.validations) {\n      await validation;\n    }\n  }\n\n  private processRuleSet(ruleSet: IDiagramValidationRuleSet): void {\n    const ruleSetPromise: Promise<void> = this.promiseForRuleSet(ruleSet);\n    this.validations.push(ruleSetPromise);\n  }\n\n  private promiseForRuleSet(ruleSet: IDiagramValidationRuleSet): Promise<void> {\n    // Create an array with promises for all validation rules.\n    const validationsResultPromise: Array<Promise<boolean>> = ruleSet.rules.map(\n      (validationRule: IDiagramValidationRule): Promise<boolean> => {\n        return validationRule(this.diagramXML);\n      },\n    );\n\n    const unifiedPromise: Promise<Array<boolean>> = Promise.all(validationsResultPromise);\n\n    // Create a single promise that will resolve when all validations succeed.\n    // It will reject with the ruleset error, if one or more validation did not succeed.\n    const ruleSetPromise: Promise<void> = unifiedPromise\n      .then((validationResult: Array<boolean>): void => {\n        const someValidationsFailed: boolean = validationResult.indexOf(false) !== -1;\n        if (someValidationsFailed) {\n          throw new Error(ruleSet.errorMessage);\n        }\n      })\n      .catch((error: Error) => {\n        throw new Error(`Error during validation: ${error.message}`);\n      });\n\n    return ruleSetPromise;\n  }\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\nimport {DiagramValidationService} from './DiagramValidationService';\n\nexport async function configure(config: FrameworkConfiguration): Promise<void> {\n  config.container.registerSingleton('DiagramValidationService', DiagramValidationService);\n}\n","import {inject} from 'aurelia-framework';\n\nimport {IIdentity} from '@essential-projects/iam_contracts';\nimport {ManagementApiClientService} from '@process-engine/management_api_client';\nimport {DataModels} from '@process-engine/management_api_contracts';\n\nimport {IDynamicUiService} from '../../contracts';\n\n@inject('ManagementApiClientService')\nexport class DynamicUiService implements IDynamicUiService {\n  private managementApiClient: ManagementApiClientService;\n\n  constructor(managmentApiClient: ManagementApiClientService) {\n    this.managementApiClient = managmentApiClient;\n  }\n\n  public finishUserTask(\n    identity: IIdentity,\n    processInstanceId: string,\n    correlationId: string,\n    userTaskInstanceId: string,\n    userTaskResult: DataModels.UserTasks.UserTaskResult,\n  ): Promise<void> {\n    return this.managementApiClient.finishUserTask(\n      identity,\n      processInstanceId,\n      correlationId,\n      userTaskInstanceId,\n      userTaskResult,\n    );\n  }\n\n  public async getUserTask(\n    identity: IIdentity,\n    processInstanceId: string,\n    userTaskId: string,\n  ): Promise<DataModels.UserTasks.UserTask> {\n    const userTaskList: DataModels.UserTasks.UserTaskList = await this.managementApiClient.getUserTasksForProcessInstance(\n      identity,\n      processInstanceId,\n    );\n\n    return userTaskList.userTasks.find((userTask: DataModels.UserTasks.UserTask) => {\n      return userTask.id === userTaskId;\n    });\n  }\n\n  public finishManualTask(\n    identity: IIdentity,\n    processInstanceId: string,\n    correlationId: string,\n    manualTaskInstanceId: string,\n  ): Promise<void> {\n    return this.managementApiClient.finishManualTask(identity, processInstanceId, correlationId, manualTaskInstanceId);\n  }\n\n  public async getManualTask(\n    identity: IIdentity,\n    processInstanceId: string,\n    manualTaskId: string,\n  ): Promise<DataModels.ManualTasks.ManualTask> {\n    const manualTaskList: DataModels.ManualTasks.ManualTaskList = await this.managementApiClient.getManualTasksForProcessInstance(\n      identity,\n      processInstanceId,\n    );\n\n    return manualTaskList.manualTasks.find((manualTask: DataModels.ManualTasks.ManualTask) => {\n      return manualTask.id === manualTaskId;\n    });\n  }\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\nimport {DynamicUiService} from './dynamic-ui.service';\n\nexport function configure(config: FrameworkConfiguration): void {\n  config.container.registerSingleton('DynamicUiService', DynamicUiService);\n}\n","export class ElementNameService {\n  public getHumanReadableType(elementType: string): string {\n    const elementTypeWithoutBPMN: string = elementType.replace('bpmn:', '');\n    const humanReadableElementType: string = elementTypeWithoutBPMN.replace(/([A-Z])/g, ' $1').trim();\n\n    return humanReadableElementType;\n  }\n\n  public getHumanReadableName(elementName: string): string {\n    const elementNameIsEmpty: boolean = elementName === undefined || elementName === '';\n\n    if (elementNameIsEmpty) {\n      return '';\n    }\n\n    return `\"${elementName}\"`;\n  }\n}\n","/* eslint-disable no-underscore-dangle */\nexport function exposeFunctionForTesting(functionName: string, functionCallback: Function): void {\n  const dangerouslyInvokeObjectIsUndefined = (window as any).__dangerouslyInvoke === undefined;\n\n  if (dangerouslyInvokeObjectIsUndefined) {\n    (window as any).__dangerouslyInvoke = {};\n  }\n\n  (window as any).__dangerouslyInvoke[functionName] = functionCallback;\n}\n\nexport async function callExposedFunction(\n  webdriverClient: any,\n  functionName: string,\n  ...args: Array<any>\n): Promise<any> {\n  const result = await webdriverClient.executeAsync(\n    async (exposedFunctionName, ...params) => {\n      const exposedFunctionResult = await (window as any).__dangerouslyInvoke[exposedFunctionName](...params);\n\n      const doneFunctionIndex = params.length - 1;\n      const done = params[doneFunctionIndex];\n\n      done(exposedFunctionResult);\n    },\n    functionName,\n    ...args,\n  );\n\n  return result;\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\nimport {NotificationService} from './notification.service';\n\nexport function configure(config: FrameworkConfiguration): void {\n  config.container.registerSingleton('NotificationService', NotificationService);\n}\n","import {inject} from 'aurelia-dependency-injection';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport toastr from 'toastr';\nimport {INotification, NotificationType} from '../../contracts/index';\n\n@inject(EventAggregator)\nexport class NotificationService {\n  private eventAggregator: EventAggregator;\n  private toastrInstance: Toastr;\n  private savedNotifications: Array<INotification> = [];\n\n  constructor(eventAggregator: EventAggregator) {\n    this.eventAggregator = eventAggregator;\n    this.eventAggregator.subscribeOnce('router:navigation:complete', () => {\n      this.setToastrInstance(toastr);\n    });\n  }\n\n  /**\n   * Shows a automatically-disappearing notification message to the user;\n   * the notification will disappear after a certain amount of time (@see toastr documenation).\n   *\n   * @argument type The severity of the notification (@see NotificationType for possible severity level).\n   * @argument message The message to display as String.\n   */\n  public showNotification(type: NotificationType, message: string, options?: ToastrOptions): void {\n    const notification: INotification = {\n      type: type,\n      message: message,\n      nonDisappearing: false,\n      options: options,\n    };\n    this.queueOrDisplay(notification);\n  }\n\n  /**\n   * Shows a non-disappearing notification message to the user, with a close button;\n   * the notification will disappear when the user hit the close button.\n   *\n   * @argument type The severity of the notification (@see NotificationType for possible severity level).\n   * @argument message The message to display as String.\n   */\n  public showNonDisappearingNotification(type: NotificationType, message: string, options?: ToastrOptions): void {\n    const notification: INotification = {\n      type: type,\n      message: message,\n      nonDisappearing: true,\n      options: options,\n    };\n    this.queueOrDisplay(notification);\n  }\n\n  private queueOrDisplay(notification: INotification): void {\n    if (this.toastrInstance === undefined) {\n      this.savedNotifications.push(notification);\n      return;\n    }\n\n    this.publishNotificationToToastr(notification);\n  }\n\n  private setToastrInstance(toastrInstance: Toastr): void {\n    this.toastrInstance = toastrInstance;\n\n    this.toastrInstance.options = {\n      positionClass: 'toast-bottom-left',\n    };\n\n    this.initializeToastr();\n    for (const notification of this.savedNotifications) {\n      this.publishNotificationToToastr(notification);\n    }\n    this.savedNotifications = [];\n  }\n\n  private publishNotificationToToastr(notification: INotification): void {\n    const toastrOptions: ToastrOptions = this.mapOptionsToToastrOptions(notification);\n\n    switch (notification.type) {\n      case NotificationType.SUCCESS:\n        this.toastrInstance.success(notification.message, undefined, toastrOptions);\n        break;\n      case NotificationType.ERROR:\n        this.toastrInstance.error(notification.message, undefined, toastrOptions);\n        break;\n      case NotificationType.INFO:\n        this.toastrInstance.info(notification.message, undefined, toastrOptions);\n        break;\n      case NotificationType.WARNING:\n        this.toastrInstance.warning(notification.message, undefined, toastrOptions);\n        break;\n      default:\n        break;\n    }\n  }\n\n  private initializeToastr(): void {\n    this.toastrInstance.options.preventDuplicates = true;\n  }\n\n  private mapOptionsToToastrOptions(notification: INotification): ToastrOptions {\n    if (notification.nonDisappearing) {\n      return {\n        closeButton: true,\n        closeOnHover: false,\n        timeOut: -1,\n        ...notification.options,\n      };\n    }\n    return notification.options;\n  }\n}\n","import isDev from 'electron-is-dev';\nimport {StudioVersion} from '../../contracts/index';\n\nexport default class ReleaseChannel {\n  private version: string;\n\n  constructor(version: string) {\n    this.version = version;\n  }\n\n  public isDev(): boolean {\n    return isDev;\n  }\n\n  public isAlpha(): boolean {\n    return this.version.includes('alpha');\n  }\n\n  public isBeta(): boolean {\n    return this.version.includes('beta');\n  }\n\n  public isStable(): boolean {\n    return !this.isDev() && !this.isAlpha() && !this.isBeta();\n  }\n\n  public getName(): string {\n    if (this.isDev()) {\n      return 'dev';\n    }\n    if (this.isAlpha()) {\n      return 'alpha';\n    }\n    if (this.isBeta()) {\n      return 'beta';\n    }\n\n    return 'stable';\n  }\n\n  public getVersion(): StudioVersion {\n    if (this.isDev()) {\n      return StudioVersion.Dev;\n    }\n    if (this.isAlpha()) {\n      return StudioVersion.Alpha;\n    }\n    if (this.isBeta()) {\n      return StudioVersion.Beta;\n    }\n\n    return StudioVersion.Stable;\n  }\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\nimport {SaveDiagramService} from './save-diagram.service';\n\nexport function configure(config: FrameworkConfiguration): void {\n  config.container.registerSingleton('SaveDiagramService', SaveDiagramService);\n}\n","import {EventAggregator} from 'aurelia-event-aggregator';\nimport {inject} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\n\nimport {IDiagram} from '@process-engine/solutionexplorer.contracts';\n\nimport {DiagramStateChange, IDiagramState, ISolutionEntry, NotificationType} from '../../contracts/index';\nimport environment from '../../environment';\nimport {NotificationService} from '../notification-service/notification.service';\nimport {OpenDiagramsSolutionExplorerService} from '../solution-explorer-services/OpenDiagramsSolutionExplorerService';\nimport {SolutionService} from '../solution-service/SolutionService';\nimport {OpenDiagramStateService} from '../solution-explorer-services/OpenDiagramStateService';\n\n@inject(EventAggregator, NotificationService, 'OpenDiagramService', 'SolutionService', Router, OpenDiagramStateService)\nexport class SaveDiagramService {\n  private eventAggregator: EventAggregator;\n  private notificationService: NotificationService;\n  private openDiagramStateService: OpenDiagramStateService;\n  private openDiagramService: OpenDiagramsSolutionExplorerService;\n  private solutionService: SolutionService;\n  private router: Router;\n  private ipcRenderer: any;\n\n  private isSaving: boolean = false;\n\n  constructor(\n    eventAggregator: EventAggregator,\n    notificationService: NotificationService,\n    openDiagramService: OpenDiagramsSolutionExplorerService,\n    solutionService: SolutionService,\n    router: Router,\n    openDiagramStateService: OpenDiagramStateService,\n  ) {\n    this.eventAggregator = eventAggregator;\n    this.notificationService = notificationService;\n    this.openDiagramService = openDiagramService;\n    this.solutionService = solutionService;\n    this.router = router;\n    this.openDiagramStateService = openDiagramStateService;\n\n    const isRunningInElectron: boolean = Boolean((window as any).nodeRequire);\n    if (isRunningInElectron) {\n      this.ipcRenderer = (window as any).nodeRequire('electron').ipcRenderer;\n    }\n  }\n\n  /**\n   * Saves the current diagram.\n   */\n  public async saveDiagram(solutionToSaveTo: ISolutionEntry, diagramToSave: IDiagram, xml: string): Promise<void> {\n    if (this.isSaving) {\n      return;\n    }\n    this.isSaving = true;\n\n    const savingTargetIsRemoteSolution: boolean = solutionToSaveTo.uri.startsWith('http');\n    if (savingTargetIsRemoteSolution) {\n      setTimeout(() => {\n        this.isSaving = false;\n      }, 500);\n\n      return;\n    }\n\n    const diagramIsUnsavedDiagram: boolean = diagramToSave.uri.startsWith('about:open-diagrams');\n    if (diagramIsUnsavedDiagram) {\n      this.isSaving = false;\n\n      await this.saveDiagramAs(solutionToSaveTo, diagramToSave, xml);\n\n      return;\n    }\n\n    try {\n      diagramToSave.xml = xml;\n\n      this.openDiagramStateService.setDiagramChange(diagramToSave.uri, {\n        change: 'save',\n        xml: xml,\n      });\n\n      await solutionToSaveTo.service.saveDiagram(diagramToSave);\n\n      const diagramState: IDiagramState | null = this.openDiagramStateService.loadDiagramState(diagramToSave.uri);\n      if (diagramState !== null) {\n        diagramState.metadata.isChanged = false;\n\n        this.openDiagramStateService.updateDiagramState(diagramToSave.uri, diagramState);\n      }\n\n      this.eventAggregator.publish(environment.events.diagramWasSaved, diagramToSave.uri);\n    } catch (error) {\n      this.notificationService.showNotification(NotificationType.ERROR, `Unable to save the file: ${error}.`);\n\n      setTimeout(() => {\n        this.isSaving = false;\n      }, 500);\n\n      throw error;\n    }\n\n    setTimeout(() => {\n      this.isSaving = false;\n    }, 500);\n  }\n\n  public async saveDiagramAs(\n    solutionToSaveTo: ISolutionEntry,\n    diagramToSave: IDiagram,\n    xml: string,\n    path?: string,\n  ): Promise<void> {\n    const isRemoteSolution: boolean = diagramToSave.uri.startsWith('http');\n    if (isRemoteSolution || this.isSaving) {\n      return;\n    }\n\n    this.isSaving = true;\n\n    const pathIsSet: boolean = path !== undefined;\n    const pathToSaveTo: string = pathIsSet ? path : await this.getPathToSaveTo();\n\n    const diagramIsUnsaved: boolean = diagramToSave.uri.startsWith('about:open-diagrams');\n    if (diagramIsUnsaved) {\n      const lastIndexOfSlash: number = pathToSaveTo.lastIndexOf('/');\n      const lastIndexOfBackSlash: number = pathToSaveTo.lastIndexOf('\\\\');\n      const indexBeforeFilename: number = Math.max(lastIndexOfSlash, lastIndexOfBackSlash) + 1;\n\n      const filename: string = pathToSaveTo.slice(indexBeforeFilename, pathToSaveTo.length).replace('.bpmn', '');\n\n      const temporaryDiagramName: string = diagramToSave.uri.replace('about:open-diagrams/', '').replace('.bpmn', '');\n\n      xml = xml.replace(new RegExp(temporaryDiagramName, 'g'), filename);\n    }\n\n    const diagram: IDiagram = {\n      name: diagramToSave.name,\n      id: diagramToSave.id,\n      uri: diagramToSave.uri,\n      xml: xml,\n    };\n\n    try {\n      this.openDiagramStateService.saveDiagramState(pathToSaveTo, diagram.xml, undefined, undefined, false, {\n        change: 'save',\n        xml: xml,\n      });\n\n      await solutionToSaveTo.service.saveDiagram(diagram, pathToSaveTo);\n\n      const diagramState: IDiagramState | null = this.openDiagramStateService.loadDiagramState(pathToSaveTo);\n      if (diagramState !== null) {\n        diagramState.metadata.isChanged = false;\n\n        this.openDiagramStateService.updateDiagramState(pathToSaveTo, diagramState);\n      }\n\n      const diagramChange: DiagramStateChange = {change: 'save', xml: diagram.xml};\n      const previousDiagramsState: IDiagramState | null = this.openDiagramStateService.loadDiagramState(diagram.uri);\n\n      const previousDiagramHasState: boolean = previousDiagramsState !== null;\n      if (previousDiagramHasState) {\n        previousDiagramsState.metadata.change = diagramChange;\n\n        this.openDiagramStateService.updateDiagramState(path, previousDiagramsState);\n      } else {\n        this.openDiagramStateService.saveDiagramState(path, diagram.xml, undefined, undefined, false);\n      }\n    } catch (error) {\n      this.notificationService.showNotification(NotificationType.ERROR, `Unable to save the file: ${error}.`);\n\n      setTimeout(() => {\n        this.isSaving = false;\n      }, 500);\n\n      throw error;\n    }\n\n    await this.openDiagramService.closeDiagram(diagramToSave);\n    this.solutionService.removeOpenDiagramByUri(diagramToSave.uri);\n\n    try {\n      diagramToSave = await this.openDiagramService.openDiagram(pathToSaveTo, solutionToSaveTo.identity);\n      this.solutionService.addOpenDiagram(diagramToSave);\n    } catch {\n      const alreadyOpenedDiagram: IDiagram = await this.openDiagramService.getOpenedDiagramByURI(pathToSaveTo);\n\n      await this.openDiagramService.closeDiagram(alreadyOpenedDiagram);\n\n      diagramToSave = await this.openDiagramService.openDiagram(pathToSaveTo, solutionToSaveTo.identity);\n    }\n\n    xml = diagramToSave.xml;\n    solutionToSaveTo = this.solutionService.getSolutionEntryForUri('about:open-diagrams');\n\n    await this.router.navigateToRoute('design', {\n      diagramName: diagramToSave.name,\n      diagramUri: diagramToSave.uri,\n      solutionUri: solutionToSaveTo.uri,\n    });\n\n    this.eventAggregator.publish(environment.events.diagramWasSaved, diagramToSave.uri);\n\n    setTimeout(() => {\n      this.isSaving = false;\n    }, 500);\n  }\n\n  private async getPathToSaveTo(): Promise<string> {\n    return new Promise((resolve: Function, reject: Function): void => {\n      this.ipcRenderer.once('save_diagram_as', async (event: Event, savePath: string) => {\n        const noFileSelected: boolean = savePath === null;\n        if (noFileSelected) {\n          reject(new Error('No file was selected.'));\n        }\n\n        resolve(savePath);\n      });\n\n      this.ipcRenderer.send('open_save-diagram-as_dialog');\n    });\n  }\n}\n","/**\n * This service allows getting the folder where deleted diagrams should be\n * written to.\n */\nexport class DiagramTrashFolderService {\n  private diagramTrashFolder: string | null = null;\n\n  /**\n   * Gets the trash folder location on the current platform. This\n   * method will ensure that the target folder exists.\n   *\n   * @return the folder to which deleted diagrams should be moved.\n   */\n  public getDiagramTrashFolder(): string {\n    const serviceIsNotInitialized: boolean = this.diagramTrashFolder === null;\n    if (serviceIsNotInitialized) {\n      this.initializeDiagramTrashFolder();\n    }\n\n    return this.diagramTrashFolder;\n  }\n\n  /**\n   * Initializes the diagram trash folder.\n   */\n  private initializeDiagramTrashFolder(): void {\n    const path: any = (window as any).nodeRequire('path');\n    const os: any = (window as any).nodeRequire('os');\n    const fs: any = (window as any).nodeRequire('fs');\n\n    const homeFolder: string = os.homedir();\n\n    // On macOS we can use the ~/.Trash/ folder.\n    const platformIsMacOS: boolean = os.platform() === 'darwin';\n    if (platformIsMacOS) {\n      const systemTrashFolder: string = path.join(homeFolder, '.Trash');\n      this.diagramTrashFolder = systemTrashFolder;\n\n      return;\n    }\n\n    // On all other platforms we use the ~/.bpmn-studio/deleted-diagrams/ folder.\n\n    const bpmnStudioFolder: string = path.join(homeFolder, '.bpmn-studio');\n    const deletedDiagramsFolder: string = path.join(bpmnStudioFolder, 'deleted-diagrams');\n\n    const bpmnStudioFolderDoesNotExist: boolean = !fs.existsSync(bpmnStudioFolder);\n    if (bpmnStudioFolderDoesNotExist) {\n      fs.mkdirSync(bpmnStudioFolder);\n    }\n\n    const deletedDiagramsFolderDoesNotExist: boolean = !fs.existsSync(deletedDiagramsFolder);\n    if (deletedDiagramsFolderDoesNotExist) {\n      fs.mkdirSync(deletedDiagramsFolder);\n    }\n\n    this.diagramTrashFolder = deletedDiagramsFolder;\n  }\n}\n","import uuid from 'node-uuid';\n\nimport {IShape} from '@process-engine/bpmn-elements_contracts';\n\nimport {DiagramStateChange, IDiagramState, IDiagramStateList, IDiagramStateListEntry} from '../../contracts';\n\nexport class OpenDiagramStateService {\n  private diagramStatesChangedCallbacks: Map<string, Function> = new Map();\n\n  public saveDiagramState(\n    uri: string,\n    xml: string,\n    location: any,\n    selectedElements: Array<IShape>,\n    isChanged: boolean,\n    change?: DiagramStateChange,\n  ): void {\n    const diagramState: IDiagramState = {\n      data: {\n        xml: xml,\n      },\n      metadata: {\n        location: location,\n        selectedElements: selectedElements,\n        isChanged: isChanged,\n        change: change,\n      },\n    };\n\n    const key: string = this.getLocalStorageKeyByUri(uri);\n    const value: string = JSON.stringify(diagramState);\n\n    window.localStorage.setItem(key, value);\n    this.fireOnDiagramStatesChanged();\n  }\n\n  public updateDiagramState(uri: string, diagramState: IDiagramState): void {\n    const key: string = this.getLocalStorageKeyByUri(uri);\n    const value: string = JSON.stringify(diagramState);\n\n    window.localStorage.setItem(key, value);\n    this.fireOnDiagramStatesChanged();\n  }\n\n  public loadDiagramState(uri: string): IDiagramState | null {\n    const key: string = this.getLocalStorageKeyByUri(uri);\n\n    const dataFromLocalStorage: string = window.localStorage.getItem(key);\n\n    const noDataFound: boolean = dataFromLocalStorage === null;\n    if (noDataFound) {\n      return null;\n    }\n\n    const diagramState: IDiagramState = JSON.parse(dataFromLocalStorage);\n\n    return diagramState;\n  }\n\n  public loadDiagramStateForAllDiagrams(): IDiagramStateList {\n    const diagramStateList: IDiagramStateList = [];\n\n    const uriForAllExistingDiagramStates: Array<string> = this.getUrisForAllDiagramStates();\n\n    for (const uri of uriForAllExistingDiagramStates) {\n      const diagramState: IDiagramState = this.loadDiagramState(uri);\n\n      const diagramStateListEntry: IDiagramStateListEntry = {\n        uri: uri,\n        diagramState: diagramState,\n      };\n\n      diagramStateList.push(diagramStateListEntry);\n    }\n\n    return diagramStateList;\n  }\n\n  public deleteDiagramState(uri: string): void {\n    const key: string = this.getLocalStorageKeyByUri(uri);\n\n    window.localStorage.removeItem(key);\n  }\n\n  public onDiagramStatesChanged(callback): string {\n    const callbackId: string = uuid.v4();\n\n    this.diagramStatesChangedCallbacks.set(callbackId, callback);\n\n    return callbackId;\n  }\n\n  public removeOnDiagramStatesChangedListener(callbackId: string): void {\n    this.diagramStatesChangedCallbacks.delete(callbackId);\n  }\n\n  public setDiagramChange(uri: string, change: DiagramStateChange): void {\n    const diagramState: IDiagramState | null = this.loadDiagramState(uri);\n\n    if (diagramState === null) {\n      throw new Error(`Diagram ${uri} has no state.`);\n    }\n\n    diagramState.metadata.change = change;\n\n    this.updateDiagramState(uri, diagramState);\n  }\n\n  private fireOnDiagramStatesChanged(): void {\n    this.diagramStatesChangedCallbacks.forEach((callback: Function): void => {\n      callback();\n    });\n  }\n\n  private getUrisForAllDiagramStates(): Array<string> {\n    const allLocalStorageKeys: Array<string> = Object.keys(localStorage);\n    const localStorageKeysForAllDiagramStates: Array<string> = allLocalStorageKeys.filter((key: string) => {\n      return key.startsWith(this.getLocalStorageKeyByUri(''));\n    });\n\n    const urisForAllDiagramStates: Array<string> = localStorageKeysForAllDiagramStates.map(\n      (localStorageKey: string) => {\n        return localStorageKey.replace(this.getLocalStorageKeyByUri(''), '');\n      },\n    );\n\n    return urisForAllDiagramStates;\n  }\n\n  private getLocalStorageKeyByUri(uri: string): string {\n    return `Open Diagram: ${uri}`;\n  }\n}\n","import {inject} from 'aurelia-framework';\n\nimport {IIdentity} from '@essential-projects/iam_contracts';\nimport {IDiagram, ISolution} from '@process-engine/solutionexplorer.contracts';\nimport {ISolutionExplorerService} from '@process-engine/solutionexplorer.service.contracts';\n\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport * as fs from 'fs';\nimport {\n  DiagramStateChange,\n  IDiagramState,\n  IDiagramValidationService,\n  ISolutionService,\n  NotificationType,\n} from '../../contracts/index';\nimport {OpenDiagramStateService} from './OpenDiagramStateService';\nimport {SolutionExplorerServiceFactory} from './SolutionExplorerServiceFactory';\nimport {NotificationService} from '../notification-service/notification.service';\nimport environment from '../../environment';\n\n/**\n * This service allows to keep all opened open diagrams inside a solution.\n *\n * This is needed because the default solution explorer does not keep state\n * about open diagrams.\n *\n * With this service you can retrieve, all opened diagrams inside a\n * solution.\n *\n * To remove a diagram from the solution, call use #closeDiagram().\n */\n\n@inject(\n  'DiagramValidationService',\n  'SolutionExplorerServiceFactory',\n  'SolutionService',\n  'OpenDiagramStateService',\n  'NotificationService',\n  EventAggregator,\n)\nexport class OpenDiagramsSolutionExplorerService implements ISolutionExplorerService {\n  public isCreatingDiagram: boolean;\n\n  private validationService: IDiagramValidationService;\n  private solutionExplorerToOpenDiagrams: ISolutionExplorerService;\n  private uriOfOpenDiagramService: string = 'about:open-diagrams';\n  private nameOfOpenDiagramService: string = 'Open Diagrams';\n  private openedDiagrams: Array<IDiagram> = [];\n  private solutionService: ISolutionService;\n  private openDiagramStateService: OpenDiagramStateService;\n  private notificationService: NotificationService;\n  private eventAggregator: EventAggregator;\n\n  private savingPromise: Promise<void>;\n\n  constructor(\n    validationService: IDiagramValidationService,\n    serviceFactory: SolutionExplorerServiceFactory,\n    solutionService: ISolutionService,\n    openDiagramStateService: OpenDiagramStateService,\n    notificationService: NotificationService,\n    eventAggregator: EventAggregator,\n  ) {\n    this.validationService = validationService;\n    this.setSolutionExplorer(serviceFactory);\n    this.solutionService = solutionService;\n    this.openDiagramStateService = openDiagramStateService;\n    this.notificationService = notificationService;\n    this.eventAggregator = eventAggregator;\n  }\n\n  public getOpenedDiagrams(): Array<IDiagram> {\n    return this.openedDiagrams;\n  }\n\n  /**\n   * Gets the open diagram with the given uri, if the diagram was opened\n   * before.\n   */\n  public getOpenedDiagramByURI(uri: string): IDiagram | null {\n    const indexOfDiagram: number = this.findIndexOfDiagramWithURI(uri);\n\n    const diagramWasNotFound: boolean = indexOfDiagram < 0;\n    if (diagramWasNotFound) {\n      return null;\n    }\n\n    const diagramWithURI: IDiagram = this.openedDiagrams[indexOfDiagram];\n\n    return diagramWithURI;\n  }\n\n  public openSolution(pathspec: string, identity: IIdentity): Promise<void> {\n    return Promise.resolve();\n  }\n\n  public loadSolution(): Promise<ISolution> {\n    const solution: ISolution = {\n      diagrams: this.openedDiagrams,\n      name: this.nameOfOpenDiagramService,\n      uri: this.uriOfOpenDiagramService,\n    };\n    return Promise.resolve(solution);\n  }\n\n  public async openDiagram(uri: string, identity: IIdentity): Promise<IDiagram> {\n    const uriIsNoBpmnFile: boolean = !uri.endsWith('.bpmn');\n    if (uriIsNoBpmnFile) {\n      throw new Error('File is no BPMN file.');\n    }\n\n    const uriAlreadyOpened: boolean = this.findIndexOfDiagramWithURI(uri) >= 0;\n    if (uriAlreadyOpened) {\n      throw new Error('This diagram is already opened.');\n    }\n\n    const lastIndexOfSlash: number = uri.lastIndexOf('/');\n    const lastIndexOfBackSlash: number = uri.lastIndexOf('\\\\');\n    const indexBeforeFilename: number = Math.max(lastIndexOfSlash, lastIndexOfBackSlash);\n\n    const filepath: string = uri.substring(0, indexBeforeFilename);\n\n    const filename: string = uri.replace(/^.*[\\\\/]/, '');\n    const filenameWithoutEnding: string = filename.replace('.bpmn', '');\n\n    let diagram: IDiagram;\n\n    const isUnsavedDiagram: boolean = filepath === 'about:open-diagrams';\n    if (isUnsavedDiagram) {\n      const diagramState: IDiagramState = this.openDiagramStateService.loadDiagramState(uri);\n\n      diagram = {\n        name: filenameWithoutEnding,\n        xml: diagramState.data.xml,\n        uri: uri,\n      };\n    } else {\n      await this.solutionExplorerToOpenDiagrams.openSolution(filepath, identity);\n\n      diagram = await this.solutionExplorerToOpenDiagrams.loadDiagram(filenameWithoutEnding, filepath);\n\n      const diagramHasNoState: boolean = this.openDiagramStateService.loadDiagramState(uri) === null;\n      if (diagramHasNoState) {\n        this.openDiagramStateService.saveDiagramState(uri, diagram.xml, undefined, [], false);\n      }\n\n      await this.validationService\n        .validate(diagram.xml)\n        .isXML()\n        .isBPMN()\n        .throwIfError();\n    }\n\n    const diagramIsStoredOnFilesystem: boolean = !diagram.uri.startsWith('about:open-diagrams');\n    if (diagramIsStoredOnFilesystem) {\n      let isSaving: boolean = false;\n      this.watchFile(\n        diagram.uri,\n        async (event: string, previousFilepath: string, newFilename: string): Promise<void> => {\n          if (isSaving) {\n            return;\n          }\n\n          if (this.savingPromise !== undefined) {\n            await this.savingPromise;\n            this.savingPromise = undefined;\n          }\n\n          isSaving = true;\n          const eventIsRename: boolean = event === 'rename';\n          const eventIsChange: boolean = event === 'change';\n          const eventIsRestore: boolean = event === 'restore';\n\n          const diagramState: IDiagramState = this.openDiagramStateService.loadDiagramState(diagram.uri);\n\n          const diagramHasState: boolean = diagramState !== null;\n          if (diagramHasState) {\n            if (eventIsRename) {\n              const change: DiagramStateChange = diagramState.metadata.change;\n\n              const diagramWasChangedByStudio: boolean = change !== undefined && change.change === 'rename';\n\n              if (diagramWasChangedByStudio) {\n                isSaving = false;\n                return;\n              }\n            }\n\n            if (eventIsChange || eventIsRestore) {\n              const change: DiagramStateChange = diagramState.metadata.change;\n\n              const xml: string = fs.readFileSync(diagram.uri, 'utf8');\n\n              const diagramWasChangedByStudio: boolean =\n                (change !== undefined && (change.change === 'save' && change.xml === xml)) ||\n                (change !== undefined && change.change === 'create');\n\n              if (diagramWasChangedByStudio) {\n                isSaving = false;\n                return;\n              }\n            }\n\n            diagramState.metadata.isChanged = true;\n\n            this.openDiagramStateService.updateDiagramState(diagram.uri, diagramState);\n          }\n\n          this.eventAggregator.publish(environment.events.diagramChangedOutsideTheStudio, previousFilepath);\n\n          const basename = previousFilepath.split('/').reverse()[0];\n\n          let notificationMessage: string;\n          if (eventIsRename) {\n            notificationMessage = `The diagram \"${basename}\" was moved/renamed on disk.`;\n          } else if (eventIsChange) {\n            notificationMessage = `The diagram \"${basename}\" was changed on disk.`;\n          } else if (eventIsRestore) {\n            notificationMessage = `The diagram \"${basename}\" was restored on disk.`;\n          }\n\n          this.notificationService.showNonDisappearingNotification(NotificationType.WARNING, notificationMessage);\n\n          isSaving = false;\n        },\n      );\n    }\n\n    this.openedDiagrams.push(diagram);\n\n    return diagram;\n  }\n\n  public closeDiagram(diagram: IDiagram): Promise<void> {\n    const index: number = this.findIndexOfDiagramWithURI(diagram.uri);\n\n    const diagramWasNotOpened: boolean = index === -1;\n    if (diagramWasNotOpened) {\n      return undefined;\n    }\n\n    this.openedDiagrams.splice(index, 1);\n    this.openDiagramStateService.deleteDiagramState(diagram.uri);\n    this.unwatchFile(diagram.uri);\n\n    return Promise.resolve();\n  }\n\n  public renameDiagram(diagram: IDiagram, newName: string): Promise<IDiagram> {\n    throw new Error('Method not supported.');\n  }\n\n  public deleteDiagram(diagram: IDiagram): Promise<void> {\n    throw new Error('Method not supported.');\n  }\n\n  public async loadDiagram(diagramName: string): Promise<IDiagram> {\n    const diagramToLoad: IDiagram = this.openedDiagrams.find((diagram: IDiagram) => {\n      return diagram.name === diagramName;\n    });\n\n    return diagramToLoad;\n  }\n\n  public saveSolution(solution: ISolution, pathspec?: string): Promise<void> {\n    throw new Error('Method not supported.');\n  }\n\n  public saveDiagram(diagram: IDiagram, pathspec?: string): Promise<void> {\n    this.savingPromise = this.solutionExplorerToOpenDiagrams.saveDiagram(diagram, pathspec);\n\n    return this.savingPromise;\n  }\n\n  public async openDiagramFromSolution(diagramUri: string, identity: IIdentity): Promise<IDiagram> {\n    const openedDiagram: IDiagram = await this.openDiagram(diagramUri, identity);\n\n    this.solutionService.addOpenDiagram(openedDiagram);\n\n    return openedDiagram;\n  }\n\n  public watchFile(\n    filepath: string,\n    callback: (event: string, previousFilepath: string, newFilename: string) => void,\n  ): void {\n    this.solutionExplorerToOpenDiagrams.watchFile(filepath, callback);\n  }\n\n  public unwatchFile(filepath: string): void {\n    this.solutionExplorerToOpenDiagrams.unwatchFile(filepath);\n  }\n\n  private findIndexOfDiagramWithURI(uri: string): number {\n    const index: number = this.openedDiagrams.findIndex((diagram: IDiagram): boolean => {\n      return diagram.uri === uri;\n    });\n\n    return index;\n  }\n\n  private async setSolutionExplorer(serviceFactory: SolutionExplorerServiceFactory): Promise<void> {\n    this.solutionExplorerToOpenDiagrams = await serviceFactory.newFileSystemSolutionExplorer();\n  }\n}\n","import {inject} from 'aurelia-framework';\n\nimport {IHttpClient} from '@essential-projects/http_contracts';\nimport {SolutionExplorerFileSystemRepository} from '@process-engine/solutionexplorer.repository.filesystem';\nimport {SolutionExplorerManagementApiRepository} from '@process-engine/solutionexplorer.repository.management_api';\nimport {SolutionExplorerService} from '@process-engine/solutionexplorer.service';\nimport {ISolutionExplorerService} from '@process-engine/solutionexplorer.service.contracts';\nimport {DiagramTrashFolderService} from './DiagramTrashFolderService';\n\n/**\n * This factory provides new instances of different solution explorer services.\n */\n@inject('HttpFetchClient', 'DiagramTrashFolderService')\nexport class SolutionExplorerServiceFactory {\n  private httpClient: IHttpClient;\n  private diagramTrashFolderService: DiagramTrashFolderService;\n\n  constructor(httpClient: IHttpClient, diagramTrashFolderService: DiagramTrashFolderService) {\n    this.httpClient = httpClient;\n    this.diagramTrashFolderService = diagramTrashFolderService;\n  }\n\n  public async newFileSystemSolutionExplorer(): Promise<ISolutionExplorerService> {\n    const diagramTrashFolder: string = this.diagramTrashFolderService.getDiagramTrashFolder();\n\n    const fileSystemRepository: SolutionExplorerFileSystemRepository = new SolutionExplorerFileSystemRepository(\n      diagramTrashFolder,\n    );\n    const createdService: SolutionExplorerService = new SolutionExplorerService(fileSystemRepository);\n\n    return createdService;\n  }\n\n  public async newManagementApiSolutionExplorer(): Promise<ISolutionExplorerService> {\n    const managementApiRepository: SolutionExplorerManagementApiRepository = new SolutionExplorerManagementApiRepository(\n      this.httpClient,\n    );\n    const createdService: SolutionExplorerService = new SolutionExplorerService(managementApiRepository);\n\n    return createdService;\n  }\n}\n","import {Container, FrameworkConfiguration} from 'aurelia-framework';\n\nimport {IHttpClient} from '@essential-projects/http_contracts';\nimport {SolutionExplorerFileSystemRepository} from '@process-engine/solutionexplorer.repository.filesystem';\nimport {SolutionExplorerManagementApiRepository} from '@process-engine/solutionexplorer.repository.management_api';\nimport {SolutionExplorerService} from '@process-engine/solutionexplorer.service';\n\nimport {DiagramTrashFolderService} from './DiagramTrashFolderService';\nimport {OpenDiagramsSolutionExplorerService} from './OpenDiagramsSolutionExplorerService';\nimport {OpenDiagramStateService} from './OpenDiagramStateService';\nimport {SolutionExplorerServiceFactory} from './SolutionExplorerServiceFactory';\n\nexport async function configure(config: FrameworkConfiguration): Promise<void> {\n  registerManagementApi(config.container);\n\n  config.container.registerSingleton('SolutionExplorerServiceFactory', SolutionExplorerServiceFactory);\n  config.container.registerSingleton('DiagramTrashFolderService', DiagramTrashFolderService);\n  config.container.registerSingleton('OpenDiagramStateService', OpenDiagramStateService);\n\n  if ((window as any).nodeRequire) {\n    // only available if a filesystem is present\n    registerFileSystem(config.container);\n    config.container.registerSingleton('OpenDiagramService', OpenDiagramsSolutionExplorerService);\n  }\n}\n\nfunction registerFileSystem(container: Container): void {\n  const diagramTrashFolderService: DiagramTrashFolderService = new DiagramTrashFolderService();\n  const diagramTrashFolder: string = diagramTrashFolderService.getDiagramTrashFolder();\n\n  const fileSystemRepository: SolutionExplorerFileSystemRepository = new SolutionExplorerFileSystemRepository(\n    diagramTrashFolder,\n  );\n  const filesystemSolutionexplorerService: SolutionExplorerService = new SolutionExplorerService(fileSystemRepository);\n\n  container.registerInstance('SolutionExplorerServiceFileSystem', filesystemSolutionexplorerService);\n}\n\nfunction registerManagementApi(container: Container): void {\n  const httpClient: IHttpClient = container.get('HttpFetchClient');\n  const managementApiRepository: SolutionExplorerManagementApiRepository = new SolutionExplorerManagementApiRepository(\n    httpClient,\n  );\n  const solutionexplorerService: SolutionExplorerService = new SolutionExplorerService(managementApiRepository);\n\n  container.registerInstance('SolutionExplorerServiceManagementApi_NotRefreshing', solutionexplorerService);\n}\n","import {inject} from 'aurelia-framework';\n\nimport {IDiagram} from '@process-engine/solutionexplorer.contracts';\n\nimport {ISolutionEntry, ISolutionService} from '../../contracts';\nimport {SolutionExplorerServiceFactory} from '../solution-explorer-services/SolutionExplorerServiceFactory';\n\n@inject('SolutionExplorerServiceFactory')\nexport class SolutionService implements ISolutionService {\n  private allSolutionEntries: Array<ISolutionEntry> = [];\n  private serviceFactory: SolutionExplorerServiceFactory;\n  private persistedEntries: Array<ISolutionEntry> = [];\n  private persistedOpenDiagrams: Array<IDiagram> = [];\n\n  constructor(serviceFactory: SolutionExplorerServiceFactory) {\n    this.serviceFactory = serviceFactory;\n\n    const openedSolutions: Array<ISolutionEntry> = this.getSolutionFromLocalStorage();\n    this.persistedOpenDiagrams = this.getOpenDiagramsFromLocalStorage();\n\n    const openedSolutionsAreNotSet: boolean = openedSolutions === null;\n    if (openedSolutionsAreNotSet) {\n      return;\n    }\n\n    openedSolutions.forEach(async (solution: ISolutionEntry) => {\n      const solutionIsRemote: boolean = solution.uri.startsWith('http');\n\n      solution.service = solutionIsRemote\n        ? await this.serviceFactory.newManagementApiSolutionExplorer()\n        : await this.serviceFactory.newFileSystemSolutionExplorer();\n    });\n\n    this.persistedEntries = openedSolutions;\n    this.allSolutionEntries = this.allSolutionEntries.concat(openedSolutions);\n  }\n\n  /**\n   * SOLUTIONS\n   */\n\n  public addSolutionEntry(solutionEntry: ISolutionEntry): void {\n    const solutionWithSameUri: ISolutionEntry = this.allSolutionEntries.find((entry: ISolutionEntry) => {\n      const entryHasSameUri: boolean = entry.uri === solutionEntry.uri;\n\n      return entryHasSameUri;\n    });\n    const solutionIsAlreadyOpenend: boolean = solutionWithSameUri !== undefined;\n    if (solutionIsAlreadyOpenend) {\n      this.removeSolutionEntryByUri(solutionWithSameUri.uri);\n    }\n\n    this.allSolutionEntries.push(solutionEntry);\n    this.persistSolutionsInLocalStorage();\n  }\n\n  public getPersistedEntries(): Array<ISolutionEntry> {\n    return this.persistedEntries;\n  }\n\n  public getSolutionEntryForUri(uri: string): ISolutionEntry {\n    const solutionEntry: ISolutionEntry = this.allSolutionEntries.find((entry: ISolutionEntry) => {\n      const entryUriIsSearchedUri: boolean = entry.uri === uri;\n\n      return entryUriIsSearchedUri;\n    });\n\n    return solutionEntry;\n  }\n\n  public getRemoteSolutionEntries(): Array<ISolutionEntry> {\n    const remoteEntries: Array<ISolutionEntry> = this.allSolutionEntries.filter((entry: ISolutionEntry) => {\n      return entry.uri.startsWith('http');\n    });\n\n    return remoteEntries;\n  }\n\n  public getAllSolutionEntries(): Array<ISolutionEntry> {\n    return this.allSolutionEntries;\n  }\n\n  public removeSolutionEntryByUri(uri: string): void {\n    const solutionToRemove: ISolutionEntry = this.allSolutionEntries.find((entry: ISolutionEntry) => {\n      return entry.uri === uri;\n    });\n\n    const solutionNotFound: boolean = solutionToRemove === undefined;\n    if (solutionNotFound) {\n      return;\n    }\n\n    this.allSolutionEntries.splice(this.allSolutionEntries.indexOf(solutionToRemove), 1);\n    this.persistSolutionsInLocalStorage();\n  }\n\n  /**\n   * OPEN DIAGRAMS\n   */\n\n  public addOpenDiagram(diagramToAdd: IDiagram): void {\n    const indexOfDiagram: number = this.persistedOpenDiagrams.findIndex(\n      (diagram: IDiagram) => diagram.uri === diagramToAdd.uri,\n    );\n    const diagramIsPersisted: boolean = indexOfDiagram >= 0;\n\n    if (diagramIsPersisted) {\n      this.persistedOpenDiagrams[indexOfDiagram] = diagramToAdd;\n    } else {\n      this.persistedOpenDiagrams.push(diagramToAdd);\n    }\n\n    this.persistOpenDiagramsInLocalStorage();\n  }\n\n  public removeOpenDiagramByUri(diagramUri: string): void {\n    const indexOfDiagramToRemove: number = this.persistedOpenDiagrams.findIndex((diagram: IDiagram) => {\n      return diagram.uri === diagramUri;\n    });\n\n    this.persistedOpenDiagrams.splice(indexOfDiagramToRemove, 1);\n    this.persistOpenDiagramsInLocalStorage();\n  }\n\n  public getOpenDiagrams(): Array<IDiagram> {\n    return this.persistedOpenDiagrams;\n  }\n\n  public persistSolutionsInLocalStorage(): void {\n    /**\n     * Right now the open diagram solution entry doesn't get persisted.\n     */\n    const entriesToPersist: Array<ISolutionEntry> = this.allSolutionEntries.filter((entry: ISolutionEntry) => {\n      const entryIsNotOpenDiagramSolution: boolean = entry.uri !== 'about:open-diagrams';\n\n      return entryIsNotOpenDiagramSolution;\n    });\n\n    const openDiagramSolution: ISolutionEntry = this.allSolutionEntries.find((entry: ISolutionEntry) => {\n      return entry.uri === 'about:open-diagrams';\n    });\n\n    if (openDiagramSolution) {\n      window.localStorage.setItem('openDiagramSolutionCollapseState', JSON.stringify(openDiagramSolution.hidden));\n    }\n    window.localStorage.setItem('openedSolutions', JSON.stringify(entriesToPersist));\n    this.persistedEntries = entriesToPersist;\n  }\n\n  private getSolutionFromLocalStorage(): Array<ISolutionEntry> {\n    const openedSolutions: Array<ISolutionEntry> = JSON.parse(window.localStorage.getItem('openedSolutions'));\n\n    return openedSolutions;\n  }\n\n  private getOpenDiagramsFromLocalStorage(): Array<IDiagram> {\n    const openDiagrams: Array<IDiagram> = JSON.parse(window.localStorage.getItem('OpenDiagrams'));\n    const openDiagramsWerePersisted: boolean = openDiagrams !== null;\n\n    return openDiagramsWerePersisted ? openDiagrams : [];\n  }\n\n  private persistOpenDiagramsInLocalStorage(): void {\n    window.localStorage.setItem('OpenDiagrams', JSON.stringify(this.persistedOpenDiagrams));\n  }\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nimport {SolutionService} from './SolutionService';\n\nexport async function configure(config: FrameworkConfiguration): Promise<void> {\n  config.container.registerSingleton('SolutionService', SolutionService);\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\nimport {UserConfigService} from './userconfig.service';\n\nexport function configure(config: FrameworkConfiguration): void {\n  config.container.registerSingleton('UserConfigService', UserConfigService);\n}\n","const defaultConfig = {\n  'design.activate_linter': true,\n};\n\nexport class UserConfigService {\n  public getUserConfig(key: string): any {\n    const currentConfig = this.getCurrentConfig();\n\n    return currentConfig[key];\n  }\n\n  public setUserConfig(key: string, value: any): void {\n    let customConfig = JSON.parse(window.localStorage.getItem('customUserConfig'));\n\n    if (!customConfig) {\n      customConfig = {};\n    }\n\n    customConfig[key] = value;\n    window.localStorage.setItem('customUserConfig', JSON.stringify(customConfig));\n  }\n\n  public persistUserConfig(userConfig: object): void {\n    window.localStorage.setItem('customUserConfig', JSON.stringify(userConfig));\n  }\n\n  public getCurrentConfig(): object {\n    const customConfig = JSON.parse(window.localStorage.getItem('customUserConfig'));\n\n    return Object.assign({}, defaultConfig, customConfig);\n  }\n\n  public getDefaultConfig(): object {\n    return defaultConfig;\n  }\n}\n"]}